; Listing generated by Microsoft (R) Optimizing Compiler Version 19.33.31629.0 

	TITLE	D:\__Repos\__MyRepos\Raven_VS2022\Raven\Debug\inheritance.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?local_id_base@class_id_map@detail@luabind@@0IB	; luabind::detail::class_id_map::local_id_base
CONST	SEGMENT
?local_id_base@class_id_map@detail@luabind@@0IB DD 07fffffffH ; luabind::detail::class_id_map::local_id_base
?unknown@cache@?A0x28cf8a89@detail@luabind@@2HB DD 07fffffffH ; luabind::detail::`anonymous namespace'::cache::unknown
?invalid@cache@?A0x28cf8a89@detail@luabind@@2HB DD 07ffffffeH ; luabind::detail::`anonymous namespace'::cache::invalid
$SG120437 DB	'invalid argument', 00H
	ORG $+3
$SG120438 DB	'%s', 00H
	ORG $+1
$SG120441 DB	00H, 00H
	ORG $+2
$SG120439 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.33.31629\include\xmemory', 00H
	ORG $+6
$SG120440 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '3', 00H, '.', 00H, '3', 00H, '1'
	DB	00H, '6', 00H, '2', 00H, '9', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG120442 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AAE@QBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_unlocked
PUBLIC	?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_locked
PUBLIC	?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked
PUBLIC	?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked
PUBLIC	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
PUBLIC	?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IAE@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	?before@type_info@@QBE_NABV1@@Z			; type_info::before
PUBLIC	??Bauto_any_base@foreach_detail_@boost@@QBE_NXZ	; boost::foreach_detail_::auto_any_base::operator bool
PUBLIC	?set_false@foreach_detail_@boost@@YA_NAA_N@Z	; boost::foreach_detail_::set_false
PUBLIC	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
PUBLIC	??$lt@Unull_type@tuples@boost@@U123@@detail@tuples@boost@@YA_NABUnull_type@12@0@Z ; boost::tuples::detail::lt<boost::tuples::null_type,boost::tuples::null_type>
PUBLIC	??Mtype_id@luabind@@QBE_NABV01@@Z		; luabind::type_id::operator<
PUBLIC	??0cast_graph@detail@luabind@@QAE@XZ		; luabind::detail::cast_graph::cast_graph
PUBLIC	??1cast_graph@detail@luabind@@QAE@XZ		; luabind::detail::cast_graph::~cast_graph
PUBLIC	?cast@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z ; luabind::detail::cast_graph::cast
PUBLIC	?insert@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z ; luabind::detail::cast_graph::insert
PUBLIC	??0?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@PAVimpl@cast_graph@detail@luabind@@@Z ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::scoped_ptr<luabind::detail::cast_graph::impl>
PUBLIC	??1?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@XZ ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::~scoped_ptr<luabind::detail::cast_graph::impl>
PUBLIC	??C?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QBEPAVimpl@cast_graph@detail@luabind@@XZ ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::operator->
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::max_size
PUBLIC	??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::max_size
PUBLIC	?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Check_grow_by_1
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABU?$less@Vtype_id@luabind@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
PUBLIC	??R?$less@Vtype_id@luabind@@@std@@QBE_NABVtype_id@luabind@@0@Z ; std::less<luabind::type_id>::operator()
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Rrotate
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Insert_node
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@Vtype_id@luabind@@@2@XZ ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Get_first
PUBLIC	??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
PUBLIC	??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::~map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBVtype_id@luabind@@I@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator*
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
PUBLIC	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBVtype_id@luabind@@I@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator*
PUBLIC	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBVtype_id@luabind@@I@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator->
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>
PUBLIC	?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z ; luabind::detail::allocate_class_id
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::max_size
PUBLIC	??0?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::~_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::end
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::max_size
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::clear
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::find
PUBLIC	?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Check_grow_by_1
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
PUBLIC	??R?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@QBE_NABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@0@Z ; std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >::operator()
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Rrotate
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Insert_node
PUBLIC	?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Orphan_ptr
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ ; std::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1>::_Get_first
PUBLIC	??0?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >
PUBLIC	??1?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::~map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>
PUBLIC	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator*
PUBLIC	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator->
PUBLIC	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator==
PUBLIC	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator!=
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
PUBLIC	?get_head@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBEABHXZ ; boost::tuples::cons<int,boost::tuples::null_type>::get_head
PUBLIC	?get_tail@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBE?BUnull_type@23@XZ ; boost::tuples::cons<int,boost::tuples::null_type>::get_tail
PUBLIC	??0?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ; boost::tuples::cons<int,boost::tuples::null_type>::cons<int,boost::tuples::null_type>
PUBLIC	?get_head@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_head
PUBLIC	?get_tail@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@HUnull_type@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_tail
PUBLIC	??0?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >
PUBLIC	?get_head@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_head
PUBLIC	?get_tail@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_tail
PUBLIC	??0?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >
PUBLIC	?get_head@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_head
PUBLIC	?get_tail@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_tail
PUBLIC	??0?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
PUBLIC	??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@ABI00ABH@Z ; boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>
PUBLIC	??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@$$QAV012@@Z ; boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>
PUBLIC	??$?0ABHH$0A@@?$pair@HH@std@@QAE@ABH$$QAH@Z	; std::pair<int,int>::pair<int,int><int const &,int,0>
PUBLIC	??$?0AAHAAI$0A@@?$pair@HH@std@@QAE@AAHAAI@Z	; std::pair<int,int>::pair<int,int><int &,unsigned int &,0>
PUBLIC	??$make_pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@YA?AU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@0@@Z ; std::make_pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >
PUBLIC	??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> ><boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,0>
PUBLIC	??$insert@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@$0A@@?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::insert<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >,0>
PUBLIC	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
PUBLIC	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
PUBLIC	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>
PUBLIC	?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z ; luabind::detail::cast_graph::impl::cast
PUBLIC	?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z ; luabind::detail::cast_graph::impl::insert
PUBLIC	??0impl@cast_graph@detail@luabind@@QAE@XZ	; luabind::detail::cast_graph::impl::impl
PUBLIC	??1impl@cast_graph@detail@luabind@@QAE@XZ	; luabind::detail::cast_graph::impl::~impl
PUBLIC	??_Gimpl@cast_graph@detail@luabind@@QAEPAXI@Z	; luabind::detail::cast_graph::impl::`scalar deleting destructor'
PUBLIC	??$make_pair@ABQAXH@std@@YA?AU?$pair@PAXH@0@ABQAX$$QAH@Z ; std::make_pair<void * const &,int>
PUBLIC	??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@$$QAPAX$$QAH@Z ; std::pair<void *,int>::pair<void *,int><void *,int,0>
PUBLIC	??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@ABQAXABH@Z	; std::pair<void *,int>::pair<void *,int><void *,int,0>
PUBLIC	??$make_pair@PADAAH@std@@YA?AU?$pair@PADH@0@$$QAPADAAH@Z ; std::make_pair<char *,int &>
PUBLIC	??$?0PADH$0A@@?$pair@PAXH@std@@QAE@$$QAU?$pair@PADH@1@@Z ; std::pair<void *,int>::pair<void *,int><char *,int,0>
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
PUBLIC	?deallocate@?$allocator@K@std@@QAEXQAKI@Z	; std::allocator<unsigned long>::deallocate
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z ; std::_Default_allocator_traits<std::allocator<unsigned long> >::max_size
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
PUBLIC	?resize@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::resize
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
PUBLIC	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
PUBLIC	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
PUBLIC	??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
PUBLIC	?back@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::back
PUBLIC	?_Calculate_growth@?$vector@KV?$allocator@K@std@@@std@@ABEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@KV?$allocator@K@std@@@std@@AAEXQAKII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Change_array
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
PUBLIC	?_Xlength@?$vector@KV?$allocator@K@std@@@std@@CAXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
PUBLIC	?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
PUBLIC	?_Getal@?$vector@KV?$allocator@K@std@@@std@@ABEABV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned long> >::_Vector_val<std::_Simple_types<unsigned long> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAEAAV?$allocator@K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QBEABV?$allocator@K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Get_first
PUBLIC	??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::dynamic_bitset<unsigned long,std::allocator<unsigned long> >
PUBLIC	??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::~dynamic_bitset<unsigned long,std::allocator<unsigned long> >
PUBLIC	??A?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE?AVreference@01@I@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::operator[]
PUBLIC	?size@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::size
PUBLIC	?num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::num_blocks
PUBLIC	?m_check_invariants@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABE_NXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::m_check_invariants
PUBLIC	?count_extra_bits@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::count_extra_bits
PUBLIC	?block_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::block_index
PUBLIC	?bit_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::bit_index
PUBLIC	?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::init_from_unsigned_long
PUBLIC	?calc_num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::calc_num_blocks
PUBLIC	?m_highest_block@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEABKXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::m_highest_block
PUBLIC	??0reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAE@AAKI@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::reference
PUBLIC	??Breference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBE_NXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::operator bool
PUBLIC	??4reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAEAAV012@_N@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::operator=
PUBLIC	?do_set@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_set
PUBLIC	?do_reset@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_reset
PUBLIC	?do_assign@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEX_N@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_assign
PUBLIC	??$make_pair@ABQAXABH@std@@YA?AU?$pair@PAXH@0@ABQAXABH@Z ; std::make_pair<void * const &,int const &>
PUBLIC	??$max@I@std@@YAABIABI0@Z			; std::max<unsigned int>
PUBLIC	??$make_pair@ABVtype_id@luabind@@AAI@std@@YA?AU?$pair@Vtype_id@luabind@@I@0@ABVtype_id@luabind@@AAI@Z ; std::make_pair<luabind::type_id const &,unsigned int &>
PUBLIC	??$?0Vtype_id@luabind@@I$0A@@?$pair@$$CBVtype_id@luabind@@I@std@@QAE@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::pair<luabind::type_id const ,unsigned int>::pair<luabind::type_id const ,unsigned int><luabind::type_id,unsigned int,0>
PUBLIC	??$insert@U?$pair@Vtype_id@luabind@@I@std@@$0A@@?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::insert<std::pair<luabind::type_id,unsigned int>,0>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$CBI$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI00ABHABUnull_type@12@22222@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > ><unsigned int const ,unsigned int const ,unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >
PUBLIC	?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@ABU32@@Z ; std::pointer_traits<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > const *>::pointer_to
PUBLIC	??$_Find@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >
PUBLIC	?pointer_to@?$pointer_traits@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@SAPAU?$pair@$$CBVtype_id@luabind@@I@2@AAU32@@Z ; std::pointer_traits<std::pair<luabind::type_id const ,unsigned int> *>::pointer_to
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
PUBLIC	??$checked_delete@Vimpl@cast_graph@detail@luabind@@@boost@@YAXPAVimpl@cast_graph@detail@luabind@@@Z ; boost::checked_delete<luabind::detail::cast_graph::impl>
PUBLIC	??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
PUBLIC	??$addressof@$$CBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@ABU10@@Z ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > const >
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > const >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
PUBLIC	??$?0ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1>::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1><std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1><>
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > const >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
PUBLIC	??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1><std::less<luabind::type_id> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1><>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Get_size_of_n@$0BE@@std@@YAII@Z		; std::_Get_size_of_n<20>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$forward@ABVtype_id@luabind@@@std@@YAABVtype_id@luabind@@ABV12@@Z ; std::forward<luabind::type_id const &>
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
PUBLIC	??$forward@ABH@std@@YAABHABH@Z			; std::forward<int const &>
PUBLIC	??$forward@AAH@std@@YAAAHAAH@Z			; std::forward<int &>
PUBLIC	??$forward@AAI@std@@YAAAIAAI@Z			; std::forward<unsigned int &>
PUBLIC	??$forward@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@YA$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@AAV123@@Z ; std::forward<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
PUBLIC	??$forward@U?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z ; std::forward<std::pair<int,int> >
PUBLIC	??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@1@@Z ; std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> ><boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,0>
PUBLIC	??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::forward<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
PUBLIC	??$emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::emplace<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
PUBLIC	??$forward@ABQAX@std@@YAABQAXABQAX@Z		; std::forward<void * const &>
PUBLIC	??$?0ABQAXH$0A@@?$pair@PAXH@std@@QAE@ABQAX$$QAH@Z ; std::pair<void *,int>::pair<void *,int><void * const &,int,0>
PUBLIC	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z		; std::forward<void *>
PUBLIC	??$forward@PAD@std@@YA$$QAPADAAPAD@Z		; std::forward<char *>
PUBLIC	??$?0PADAAH$0A@@?$pair@PADH@std@@QAE@$$QAPADAAH@Z ; std::pair<char *,int>::pair<char *,int><char *,int &,0>
PUBLIC	??$?0ABVtype_id@luabind@@AAI$0A@@?$pair@Vtype_id@luabind@@I@std@@QAE@ABVtype_id@luabind@@AAI@Z ; std::pair<luabind::type_id,unsigned int>::pair<luabind::type_id,unsigned int><luabind::type_id const &,unsigned int &,0>
PUBLIC	??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z ; std::forward<std::pair<luabind::type_id,unsigned int> >
PUBLIC	??$emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::emplace<std::pair<luabind::type_id,unsigned int> >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI0ABHABUnull_type@12@222222@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > ><unsigned int const ,unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >
PUBLIC	??$_Find_lower_bound@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find_lower_bound<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
PUBLIC	??$_Lower_bound_duplicate@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Lower_bound_duplicate<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
PUBLIC	??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??$_Find_lower_bound@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@ABVtype_id@luabind@@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Find_lower_bound<luabind::type_id>
PUBLIC	??$_Lower_bound_duplicate@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@ABVtype_id@luabind@@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Lower_bound_duplicate<luabind::type_id>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$forward@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@@std@@YAABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABU10@@Z ; std::forward<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &>
PUBLIC	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
PUBLIC	??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z ; std::forward<std::less<luabind::type_id> const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
PUBLIC	?left_shift@?$shifter@K$0CA@$0CA@@dynamic_bitset_impl@detail@boost@@SAXAAK@Z ; boost::detail::dynamic_bitset_impl::shifter<unsigned long,32,32>::left_shift
PUBLIC	??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>
PUBLIC	??$?0ABV?$allocator@K@std@@$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@K@1@@Z ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1><std::allocator<unsigned long> const &>
PUBLIC	??$_Get_size_of_n@$0M@@std@@YAII@Z		; std::_Get_size_of_n<12>
PUBLIC	??$_Get_size_of_n@$0CI@@std@@YAII@Z		; std::_Get_size_of_n<40>
PUBLIC	??$_Get_size_of_n@$0BI@@std@@YAII@Z		; std::_Get_size_of_n<24>
PUBLIC	??$_Get_size_of_n@$03@std@@YAII@Z		; std::_Get_size_of_n<4>
PUBLIC	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@K@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<unsigned long> > >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Resize<std::_Value_init_tag>
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@1@AB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool const &,0>
PUBLIC	??$_Emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Emplace<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
PUBLIC	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@1@AB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool const &,0>
PUBLIC	??$_Emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Emplace<std::pair<luabind::type_id,unsigned int> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABIABHABUnull_type@12@2222222@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> ><unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >
PUBLIC	??$_Kfn@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0>::_Kfn<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >
PUBLIC	??$_Debug_lt_pred@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABV345@$0A@@std@@YA_NABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@1@Z ; std::_Debug_lt_pred<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,0>
PUBLIC	??$addressof@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
PUBLIC	??$destroy@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::destroy<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
PUBLIC	??$_Kfn@$$CBVtype_id@luabind@@I@?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@SAABVtype_id@luabind@@ABU?$pair@$$CBVtype_id@luabind@@I@1@@Z ; std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0>::_Kfn<luabind::type_id const ,unsigned int>
PUBLIC	??$_Debug_lt_pred@ABU?$less@Vtype_id@luabind@@@std@@ABVtype_id@luabind@@ABV34@$0A@@std@@YA_NABU?$less@Vtype_id@luabind@@@0@ABVtype_id@luabind@@1@Z ; std::_Debug_lt_pred<std::less<luabind::type_id> const &,luabind::type_id const &,luabind::type_id const &,0>
PUBLIC	??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
PUBLIC	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * *>
PUBLIC	??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
PUBLIC	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>
PUBLIC	??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
PUBLIC	??$forward@ABV?$allocator@K@std@@@std@@YAABV?$allocator@K@0@ABV10@@Z ; std::forward<std::allocator<unsigned long> const &>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<unsigned long> >
PUBLIC	??$?0AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool>::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &,bool,0>
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Release
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$?0PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool>::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool,0>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > > >
PUBLIC	??$forward@AB_N@std@@YAAB_NAB_N@Z		; std::forward<bool const &>
PUBLIC	?_Extract@?$_In_place_key_extract_map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@Z ; std::_In_place_key_extract_map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >::_Extract
PUBLIC	??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool>::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &,bool,0>
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Release
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
PUBLIC	??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > ><std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
PUBLIC	??$?0PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool>::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool,0>
PUBLIC	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > > >
PUBLIC	?_Extract@?$_In_place_key_extract_map@Vtype_id@luabind@@U?$pair@Vtype_id@luabind@@I@std@@@std@@SAABVtype_id@luabind@@ABU?$pair@Vtype_id@luabind@@I@2@@Z ; std::_In_place_key_extract_map<luabind::type_id,std::pair<luabind::type_id,unsigned int> >::_Extract
PUBLIC	??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > ><std::pair<luabind::type_id,unsigned int> >
PUBLIC	??$?0$$CBH@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABHABUnull_type@12@11111111@Z ; boost::tuples::cons<int,boost::tuples::null_type>::cons<int,boost::tuples::null_type><int const >
PUBLIC	??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >
PUBLIC	??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,std::allocator<unsigned long> >
PUBLIC	??$_Unfancy@K@std@@YAPAKPAK@Z			; std::_Unfancy<unsigned long>
PUBLIC	??$_Zero_range@PAK@std@@YAPAKQAK0@Z		; std::_Zero_range<unsigned long *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@PAKAAV?$allocator@K@1@@Z ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Uninitialized_backout_al<std::allocator<unsigned long> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::~_Uninitialized_backout_al<std::allocator<unsigned long> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEPAKXZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEXXZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Emplace_back<>
PUBLIC	??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::nullptr_t>
PUBLIC	??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::nullptr_t>
PUBLIC	??$?MIU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@IU012@@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@01@0@Z ; boost::tuples::operator<<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >,unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
PUBLIC	??$forward@_N@std@@YA$$QA_NAA_N@Z		; std::forward<bool>
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
PUBLIC	??$forward@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
PUBLIC	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
PUBLIC	??$construct@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::construct<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
PUBLIC	??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
PUBLIC	??$construct@U?$pair@$$CBVtype_id@luabind@@I@std@@U?$pair@Vtype_id@luabind@@I@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::construct<std::pair<luabind::type_id const ,unsigned int>,std::pair<luabind::type_id,unsigned int> >
PUBLIC	??$_Get_unwrapped@ABQAK@std@@YA?A_TABQAK@Z	; std::_Get_unwrapped<unsigned long * const &>
PUBLIC	??$move@AAK@std@@YA$$QAKAAK@Z			; std::move<unsigned long &>
PUBLIC	??$_Copy_memmove@PAKPAK@std@@YAPAKPAK00@Z	; std::_Copy_memmove<unsigned long *,unsigned long *>
PUBLIC	??$_Emplace_back@K@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEX$$QAK@Z ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Emplace_back<unsigned long>
PUBLIC	??$_To_address@PAK@std@@YA?A_PABQAK@Z		; std::_To_address<unsigned long *>
PUBLIC	??$construct@K$$V@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK@Z ; std::_Default_allocator_traits<std::allocator<unsigned long> >::construct<unsigned long>
PUBLIC	??$lt@U?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > > >
PUBLIC	??$_Voidify_iter@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAXPAU?$pair@$$CBVtype_id@luabind@@I@0@@Z ; std::_Voidify_iter<std::pair<luabind::type_id const ,unsigned int> *>
PUBLIC	??$_Voidify_iter@PAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAXPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@@Z ; std::_Voidify_iter<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > *>
PUBLIC	??$forward@K@std@@YA$$QAKAAK@Z			; std::forward<unsigned long>
PUBLIC	??$construct@KK@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK$$QAK@Z ; std::_Default_allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long>
PUBLIC	??$_Voidify_iter@PAK@std@@YAPAXPAK@Z		; std::_Voidify_iter<unsigned long *>
PUBLIC	??$lt@U?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
PUBLIC	??$forward@Vtype_id@luabind@@@std@@YA$$QAVtype_id@luabind@@AAV12@@Z ; std::forward<luabind::type_id>
PUBLIC	??$forward@I@std@@YA$$QAIAAI@Z			; std::forward<unsigned int>
PUBLIC	??$lt@U?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@12@0@Z ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >
PUBLIC	??$lt@U?$cons@HUnull_type@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@HUnull_type@tuples@boost@@@12@0@Z ; boost::tuples::detail::lt<boost::tuples::cons<int,boost::tuples::null_type>,boost::tuples::cons<int,boost::tuples::null_type> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ ; `string'
PUBLIC	??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ ; `string'
PUBLIC	??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0BP@OLDKBHLM@map?1set?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_0GA@INMJJLGF@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@LBEPAJEF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EC@JLIDLCDH@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@ ; `string'
PUBLIC	??_C@_1JA@OMHIKCMH@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@ ; `string'
PUBLIC	??_C@_1BA@EEPFKCON@?$AAp?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_1KC@IDNIIAGO@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@ ; `string'
PUBLIC	??_C@_1CK@LKHICBBG@?$AAp?$AAo?$AAs?$AA?5?$AA?$DM?$AA?5?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@	; `string'
PUBLIC	??_C@_0GA@KKMOOLCJ@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@PNGIEGJG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@ ; `string'
PUBLIC	??_C@_0BO@PEOHNLIM@front?$CI?$CJ?5called?5on?5empty?5deque@ ; `string'
PUBLIC	??_C@_1EA@EELNAHHD@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@ ; `string'
PUBLIC	??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@ ; `string'
PUBLIC	??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_1CK@KJLAJJPB@?$AAm?$AA_?$AAc?$AAh?$AAe?$AAc?$AAk?$AA_?$AAi?$AAn?$AAv?$AAa?$AAr?$AAi?$AAa@ ; `string'
PUBLIC	??_C@_0CG@PHHCFCMA@vector?5emplace?5iterator?5outside@ ; `string'
PUBLIC	??_C@_1FA@JJEJIKGE@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe@ ; `string'
PUBLIC	??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@ ; `string'
PUBLIC	??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@ ; `string'
PUBLIC	??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_1CG@GFHFJNC@?$AAm?$AA_?$AAb?$AAi?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN@ ; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_0GD@JCANJH@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MG@LDPLICNP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_C@_1DO@DNNHOGGG@?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0BO@OKMPKPLD@back?$CI?$CJ?5called?5on?5empty?5vector@ ; `string'
PUBLIC	??_C@_1EA@OBAHGFFK@?$AA?$CC?$AAb?$AAa?$AAc?$AAk?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	__invalid_parameter:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
EXTRN	__CrtDbgReport:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	__wassert:PROC
EXTRN	___std_type_info_compare:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
;	COMDAT ?registered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4V?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@A
_BSS	SEGMENT
?registered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4V?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@A DB 0cH DUP (?) ; `luabind::detail::allocate_class_id'::`2'::registered
_BSS	ENDS
;	COMDAT ?$TSS0@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4HA DD 01H DUP (?) ; `luabind::detail::allocate_class_id'::`2'::$TSS0
_BSS	ENDS
;	COMDAT ?id@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4IA
_BSS	SEGMENT
?id@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4IA DD 01H DUP (?) ; `luabind::detail::allocate_class_id'::`2'::id
_BSS	ENDS
;	COMDAT ?t@?1???$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV34@@Z@4PAV34@A
_BSS	SEGMENT
?t@?1???$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV34@@Z@4PAV34@A DD 01H DUP (?) ; `boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >'::`2'::t
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EA@OBAHGFFK@?$AA?$CC?$AAb?$AAa?$AAc?$AAk?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1EA@OBAHGFFK@?$AA?$CC?$AAb?$AAa?$AAc?$AAk?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5@ DB '"'
	DB	00H, 'b', 00H, 'a', 00H, 'c', 00H, 'k', 00H, '(', 00H, ')', 00H
	DB	' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'e', 00H, 'm', 00H
	DB	'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OKMPKPLD@back?$CI?$CJ?5called?5on?5empty?5vector@
CONST	SEGMENT
??_C@_0BO@OKMPKPLD@back?$CI?$CJ?5called?5on?5empty?5vector@ DB 'back() ca'
	DB	'lled on empty vector', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ DB 'vector iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ DB 'vector itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@DNNHOGGG@?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn@
CONST	SEGMENT
??_C@_1DO@DNNHOGGG@?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn@ DB 's'
	DB	00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H, ')', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'k', 00H, 's', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@LDPLICNP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MG@LDPLICNP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '3', 00H, '.', 00H, '3', 00H, '1', 00H, '6'
	DB	00H, '2', 00H, '9', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u'
	DB	00H, 't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@JCANJH@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GD@JCANJH@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program Fil'
	DB	'es\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33'
	DB	'.31629\include\xutility', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@GFHFJNC@?$AAm?$AA_?$AAb?$AAi?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN@
CONST	SEGMENT
??_C@_1CG@GFHFJNC@?$AAm?$AA_?$AAb?$AAi?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN@ DB 'm'
	DB	00H, '_', 00H, 'b', 00H, 'i', 00H, 't', 00H, 's', 00H, '.', 00H
	DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
CONST	SEGMENT
??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'p', 00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H, 'e', 00H, 'n'
	DB	00H, 'd', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@
CONST	SEGMENT
??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@ DB 'can''t increm'
	DB	'ent vector iterator past end', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
CONST	SEGMENT
??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@
CONST	SEGMENT
??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@ DB 'can''t increm'
	DB	'ent value-initialized vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FA@JJEJIKGE@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe@
CONST	SEGMENT
??_C@_1FA@JJEJIKGE@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'c'
	DB	00H, 'e', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, 's', 00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PHHCFCMA@vector?5emplace?5iterator?5outside@
CONST	SEGMENT
??_C@_0CG@PHHCFCMA@vector?5emplace?5iterator?5outside@ DB 'vector emplace'
	DB	' iterator outside range', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@KJLAJJPB@?$AAm?$AA_?$AAc?$AAh?$AAe?$AAc?$AAk?$AA_?$AAi?$AAn?$AAv?$AAa?$AAr?$AAi?$AAa@
CONST	SEGMENT
??_C@_1CK@KJLAJJPB@?$AAm?$AA_?$AAc?$AAh?$AAe?$AAc?$AAk?$AA_?$AAi?$AAn?$AAv?$AAa?$AAr?$AAi?$AAa@ DB 'm'
	DB	00H, '_', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H
	DB	'_', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'r', 00H, 'i'
	DB	00H, 'a', 00H, 'n', 00H, 't', 00H, 's', 00H, '(', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'p'
	DB	00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@
CONST	SEGMENT
??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@ DB 'cannot deref'
	DB	'erence end map/set iterator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'a'
	DB	00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@
CONST	SEGMENT
??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@ DB 'cannot derefer'
	DB	'ence value-initialized map/set iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@EELNAHHD@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
CONST	SEGMENT
??_C@_1EA@EELNAHHD@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ DB '"'
	DB	00H, 'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 't', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'e', 00H
	DB	'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'd', 00H, 'e'
	DB	00H, 'q', 00H, 'u', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PEOHNLIM@front?$CI?$CJ?5called?5on?5empty?5deque@
CONST	SEGMENT
??_C@_0BO@PEOHNLIM@front?$CI?$CJ?5called?5on?5empty?5deque@ DB 'front() c'
	DB	'alled on empty deque', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@
CONST	SEGMENT
??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@ DB '"'
	DB	00H, 'd', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'e', 00H, ' ', 00H
	DB	'p', 00H, 'o', 00H, 'p', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@PNGIEGJG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@PNGIEGJG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '3', 00H, '.', 00H, '3', 00H, '1', 00H, '6'
	DB	00H, '2', 00H, '9', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'd', 00H, 'e'
	DB	00H, 'q', 00H, 'u', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@KKMOOLCJ@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@KKMOOLCJ@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'33.31629\include\deque', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@
CONST	SEGMENT
??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@ DB 'deque empty before pop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@LKHICBBG@?$AAp?$AAo?$AAs?$AA?5?$AA?$DM?$AA?5?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_@
CONST	SEGMENT
??_C@_1CK@LKHICBBG@?$AAp?$AAo?$AAs?$AA?5?$AA?$DM?$AA?5?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_@ DB 'p'
	DB	00H, 'o', 00H, 's', 00H, ' ', 00H, '<', 00H, ' ', 00H, 'b', 00H
	DB	'i', 00H, 't', 00H, 's', 00H, '_', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1KC@IDNIIAGO@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
CONST	SEGMENT
??_C@_1KC@IDNIIAGO@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, '_', 00H, '_', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'o', 00H, 's', 00H, '\', 00H, '_', 00H, '_', 00H, 'M'
	DB	00H, 'y', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 's', 00H
	DB	'\', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n', 00H, '_'
	DB	00H, 'V', 00H, 'S', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'b', 00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'\', 00H, 'd', 00H, 'y', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'i'
	DB	00H, 'c', 00H, '_', 00H, 'b', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'e', 00H, 't', 00H, '\', 00H, 'd', 00H, 'y', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'i', 00H, 'c', 00H, '_', 00H, 'b', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, 'e', 00H, 't', 00H, '.', 00H, 'h', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ DB 'vector iterators '
	DB	'incompatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@EEPFKCON@?$AAp?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BA@EEPFKCON@?$AAp?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'p', 00H
	DB	'x', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@OMHIKCMH@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
CONST	SEGMENT
??_C@_1JA@OMHIKCMH@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, '_', 00H, '_', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'o', 00H, 's', 00H, '\', 00H, '_', 00H, '_', 00H, 'M'
	DB	00H, 'y', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 's', 00H
	DB	'\', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n', 00H, '_'
	DB	00H, 'V', 00H, 'S', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'b', 00H, 'o', 00H, 'o', 00H, 's', 00H, 't', 00H
	DB	'\', 00H, 's', 00H, 'm', 00H, 'a', 00H, 'r', 00H, 't', 00H, '_'
	DB	00H, 'p', 00H, 't', 00H, 'r', 00H, '\', 00H, 's', 00H, 'c', 00H
	DB	'o', 00H, 'p', 00H, 'e', 00H, 'd', 00H, '_', 00H, 'p', 00H, 't'
	DB	00H, 'r', 00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@JLIDLCDH@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@
CONST	SEGMENT
??_C@_1EC@JLIDLCDH@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@ DB '"'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H
	DB	't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H
	DB	'n', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@LBEPAJEF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@LBEPAJEF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '3', 00H, '.', 00H, '3', 00H, '1', 00H, '6'
	DB	00H, '2', 00H, '9', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 't'
	DB	00H, 'r', 00H, 'e', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@INMJJLGF@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@INMJJLGF@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'33.31629\include\xtree', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OLDKBHLM@map?1set?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BP@OLDKBHLM@map?1set?5iterators?5incompatible@ DB 'map/set iterato'
	DB	'rs incompatible', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
CONST	SEGMENT
??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ DB 'can''t dere'
	DB	'ference out of range vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '3', 00H, '.', 00H, '3', 00H, '1', 00H, '6'
	DB	00H, '2', 00H, '9', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program Fil'
	DB	'es\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33'
	DB	'.31629\include\vector', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
CONST	SEGMENT
??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ DB 'can''t derefe'
	DB	'rence value-initialized vector iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '3', 00H, '.', 00H, '3', 00H, '1', 00H, '6'
	DB	00H, '2', 00H, '9', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'33.31629\include\xmemory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z$0
__ehfuncinfo$??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z$0
__ehfuncinfo$??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z$0
__ehfuncinfo$??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z$0
__ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0
__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$2
__ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z$0
__ehfuncinfo$??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$0
__unwindtable$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$0
__unwindtable$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01eH
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z$1
__ehfuncinfo$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z$0
__ehfuncinfo$??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01eH
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z$1
__ehfuncinfo$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01eH
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z$1
__ehfuncinfo$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z$0
__ehfuncinfo$??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z$0
__ehfuncinfo$??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z$0
__ehfuncinfo$?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z$0
__ehfuncinfo$??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z$0
__ehfuncinfo$?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0impl@cast_graph@detail@luabind@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0impl@cast_graph@detail@luabind@@QAE@XZ$0
__ehfuncinfo$??0impl@cast_graph@detail@luabind@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0impl@cast_graph@detail@luabind@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ$0
__ehfuncinfo$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ$0
__ehfuncinfo$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$?_Tidy@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$?pop_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$?pop_front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z$0
	DD	016H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$?_Tidy@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$??0?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z$0
	DD	01eH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$0
	DD	034H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z$0
	DD	016H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$?_Tidy@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z$0
	DD	016H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@$$QAV01@@Z
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__ehhandler$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	DD	09H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z$0
	DD	01aH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$??0cast_graph@detail@luabind@@QAE@XZ$0
	DD	01dH
voltbl	ENDS
xdata$x	SEGMENT
__unwindtable$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z$0
__unwindtable$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z$0
__unwindtable$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z$0
__unwindtable$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z$0
__unwindtable$??0cast_graph@detail@luabind@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0cast_graph@detail@luabind@@QAE@XZ$0
__catchsym$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z$0
__unwindtable$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__unwindtable$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z$3
__tryblocktable$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z$2
__unwindtable$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$3
__ehfuncinfo$??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?_Tidy@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?pop_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?pop_front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?_Tidy@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?_Tidy@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
__ehfuncinfo$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0cast_graph@detail@luabind@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0cast_graph@detail@luabind@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\tuple_comparison.hpp
;	COMDAT ??$lt@U?$cons@HUnull_type@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@HUnull_type@tuples@boost@@@12@0@Z
_TEXT	SEGMENT
tv85 = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??$lt@U?$cons@HUnull_type@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@HUnull_type@tuples@boost@@@12@0@Z PROC ; boost::tuples::detail::lt<boost::tuples::cons<int,boost::tuples::null_type>,boost::tuples::cons<int,boost::tuples::null_type> >, COMDAT

; 70   : inline bool lt(const T1& lhs, const T2& rhs) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 71   :   return lhs.get_head() < rhs.get_head()  ||

	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_head@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBEABHXZ ; boost::tuples::cons<int,boost::tuples::null_type>::get_head
	mov	esi, eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_head@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBEABHXZ ; boost::tuples::cons<int,boost::tuples::null_type>::get_head
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jl	SHORT $LN4@lt
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_head@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBEABHXZ ; boost::tuples::cons<int,boost::tuples::null_type>::get_head
	mov	esi, eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_head@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBEABHXZ ; boost::tuples::cons<int,boost::tuples::null_type>::get_head
	mov	edx, DWORD PTR [esi]
	cmp	edx, DWORD PTR [eax]
	jl	SHORT $LN3@lt
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_tail@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBE?BUnull_type@23@XZ ; boost::tuples::cons<int,boost::tuples::null_type>::get_tail
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_tail@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBE?BUnull_type@23@XZ ; boost::tuples::cons<int,boost::tuples::null_type>::get_tail
	push	eax
	call	??$lt@Unull_type@tuples@boost@@U123@@detail@tuples@boost@@YA_NABUnull_type@12@0@Z ; boost::tuples::detail::lt<boost::tuples::null_type,boost::tuples::null_type>
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@lt
$LN3@lt:
	mov	DWORD PTR tv85[ebp], 0
	jmp	SHORT $LN5@lt
$LN4@lt:
	mov	DWORD PTR tv85[ebp], 1
$LN5@lt:
	mov	al, BYTE PTR tv85[ebp]

; 72   :           ( !(rhs.get_head() < lhs.get_head()) &&
; 73   :             lt(lhs.get_tail(), rhs.get_tail()));
; 74   : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$lt@U?$cons@HUnull_type@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@HUnull_type@tuples@boost@@@12@0@Z ENDP ; boost::tuples::detail::lt<boost::tuples::cons<int,boost::tuples::null_type>,boost::tuples::cons<int,boost::tuples::null_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\tuple_comparison.hpp
;	COMDAT ??$lt@U?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@12@0@Z
_TEXT	SEGMENT
tv83 = -4						; size = 4
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??$lt@U?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@12@0@Z PROC ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >, COMDAT

; 70   : inline bool lt(const T1& lhs, const T2& rhs) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 71   :   return lhs.get_head() < rhs.get_head()  ||

	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_head@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_head
	mov	esi, eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_head@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_head
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN4@lt
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_head@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_head
	mov	esi, eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_head@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_head
	mov	edx, DWORD PTR [esi]
	cmp	edx, DWORD PTR [eax]
	jb	SHORT $LN3@lt
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_tail@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@HUnull_type@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_tail
	push	eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_tail@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@HUnull_type@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_tail
	push	eax
	call	??$lt@U?$cons@HUnull_type@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@HUnull_type@tuples@boost@@@12@0@Z ; boost::tuples::detail::lt<boost::tuples::cons<int,boost::tuples::null_type>,boost::tuples::cons<int,boost::tuples::null_type> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@lt
$LN3@lt:
	mov	DWORD PTR tv83[ebp], 0
	jmp	SHORT $LN5@lt
$LN4@lt:
	mov	DWORD PTR tv83[ebp], 1
$LN5@lt:
	mov	al, BYTE PTR tv83[ebp]

; 72   :           ( !(rhs.get_head() < lhs.get_head()) &&
; 73   :             lt(lhs.get_tail(), rhs.get_tail()));
; 74   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$lt@U?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@12@0@Z ENDP ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@I@std@@YA$$QAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@I@std@@YA$$QAIAAI@Z PROC			; std::forward<unsigned int>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@I@std@@YA$$QAIAAI@Z ENDP			; std::forward<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@Vtype_id@luabind@@@std@@YA$$QAVtype_id@luabind@@AAV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Vtype_id@luabind@@@std@@YA$$QAVtype_id@luabind@@AAV12@@Z PROC ; std::forward<luabind::type_id>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@Vtype_id@luabind@@@std@@YA$$QAVtype_id@luabind@@AAV12@@Z ENDP ; std::forward<luabind::type_id>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\tuple_comparison.hpp
;	COMDAT ??$lt@U?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z
_TEXT	SEGMENT
tv83 = -4						; size = 4
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??$lt@U?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z PROC ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >, COMDAT

; 70   : inline bool lt(const T1& lhs, const T2& rhs) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 71   :   return lhs.get_head() < rhs.get_head()  ||

	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_head@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_head
	mov	esi, eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_head@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_head
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN4@lt
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_head@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_head
	mov	esi, eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_head@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_head
	mov	edx, DWORD PTR [esi]
	cmp	edx, DWORD PTR [eax]
	jb	SHORT $LN3@lt
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_tail@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_tail
	push	eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_tail@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_tail
	push	eax
	call	??$lt@U?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@12@0@Z ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@lt
$LN3@lt:
	mov	DWORD PTR tv83[ebp], 0
	jmp	SHORT $LN5@lt
$LN4@lt:
	mov	DWORD PTR tv83[ebp], 1
$LN5@lt:
	mov	al, BYTE PTR tv83[ebp]

; 72   :           ( !(rhs.get_head() < lhs.get_head()) &&
; 73   :             lt(lhs.get_tail(), rhs.get_tail()));
; 74   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$lt@U?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z ENDP ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAK@std@@YAPAXPAK@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAK@std@@YAPAXPAK@Z PROC		; std::_Voidify_iter<unsigned long *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAK@std@@YAPAXPAK@Z ENDP		; std::_Voidify_iter<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$construct@KK@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK$$QAK@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@KK@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK$$QAK@Z PROC ; std::_Default_allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long>, COMDAT

; 675  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 676  : #if _HAS_CXX20
; 677  :         if (_STD is_constant_evaluated()) {
; 678  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 679  :         } else
; 680  : #endif // _HAS_CXX20
; 681  :         {
; 682  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Voidify_iter@PAK@std@@YAPAXPAK@Z	; std::_Voidify_iter<unsigned long *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@K@std@@YA$$QAKAAK@Z		; std::forward<unsigned long>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 683  :         }
; 684  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@KK@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK$$QAK@Z ENDP ; std::_Default_allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@K@std@@YA$$QAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@K@std@@YA$$QAKAAK@Z PROC			; std::forward<unsigned long>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@K@std@@YA$$QAKAAK@Z ENDP			; std::forward<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::queue_entry * *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z PROC ; std::addressof<luabind::detail::`anonymous namespace'::queue_entry *>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ENDP ; std::addressof<luabind::detail::`anonymous namespace'::queue_entry *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAXPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAXPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@@Z PROC ; std::_Voidify_iter<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAXPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@@Z ENDP ; std::_Voidify_iter<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAXPAU?$pair@$$CBVtype_id@luabind@@I@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAXPAU?$pair@$$CBVtype_id@luabind@@I@0@@Z PROC ; std::_Voidify_iter<std::pair<luabind::type_id const ,unsigned int> *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAXPAU?$pair@$$CBVtype_id@luabind@@I@0@@Z ENDP ; std::_Voidify_iter<std::pair<luabind::type_id const ,unsigned int> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z PROC ; std::forward<luabind::detail::`anonymous namespace'::edge *>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ENDP ; std::forward<luabind::detail::`anonymous namespace'::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YA$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YA$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@AAV10@@Z PROC ; std::forward<std::allocator<luabind::detail::`anonymous namespace'::edge> >, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YA$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@AAV10@@Z ENDP ; std::forward<std::allocator<luabind::detail::`anonymous namespace'::edge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\tuple_comparison.hpp
;	COMDAT ??$lt@U?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z
_TEXT	SEGMENT
tv83 = -4						; size = 4
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??$lt@U?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z PROC ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > > >, COMDAT

; 70   : inline bool lt(const T1& lhs, const T2& rhs) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 71   :   return lhs.get_head() < rhs.get_head()  ||

	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_head@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_head
	mov	esi, eax
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_head@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_head
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jb	SHORT $LN4@lt
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_head@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_head
	mov	esi, eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_head@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_head
	mov	edx, DWORD PTR [esi]
	cmp	edx, DWORD PTR [eax]
	jb	SHORT $LN3@lt
	mov	ecx, DWORD PTR _rhs$[ebp]
	call	?get_tail@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_tail
	push	eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	call	?get_tail@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@23@XZ ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_tail
	push	eax
	call	??$lt@U?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@lt
$LN3@lt:
	mov	DWORD PTR tv83[ebp], 0
	jmp	SHORT $LN5@lt
$LN4@lt:
	mov	DWORD PTR tv83[ebp], 1
$LN5@lt:
	mov	al, BYTE PTR tv83[ebp]

; 72   :           ( !(rhs.get_head() < lhs.get_head()) &&
; 73   :             lt(lhs.get_tail(), rhs.get_tail()));
; 74   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$lt@U?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z ENDP ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$construct@K$$V@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
$T2 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$construct@K$$V@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK@Z PROC ; std::_Default_allocator_traits<std::allocator<unsigned long> >::construct<unsigned long>, COMDAT

; 675  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 676  : #if _HAS_CXX20
; 677  :         if (_STD is_constant_evaluated()) {
; 678  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 679  :         } else
; 680  : #endif // _HAS_CXX20
; 681  :         {
; 682  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	DWORD PTR $T2[ebp], 4
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Voidify_iter@PAK@std@@YAPAXPAK@Z	; std::_Voidify_iter<unsigned long *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 683  :         }
; 684  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@K$$V@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK@Z ENDP ; std::_Default_allocator_traits<std::allocator<unsigned long> >::construct<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_To_address@PAK@std@@YA?A_PABQAK@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_To_address@PAK@std@@YA?A_PABQAK@Z PROC		; std::_To_address<unsigned long *>, COMDAT

; 4023 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 4024 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 4025 :     return _Val;

	mov	eax, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [eax]

; 4026 : }

	pop	ebp
	ret	0
??$_To_address@PAK@std@@YA?A_PABQAK@Z ENDP		; std::_To_address<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Emplace_back@K@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEX$$QAK@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@K@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEX$$QAK@Z PROC ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Emplace_back<unsigned long>, COMDAT
; _this$ = ecx

; 1661 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1662 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@K@std@@YA$$QAKAAK@Z		; std::forward<unsigned long>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Unfancy@K@std@@YAPAKPAK@Z		; std::_Unfancy<unsigned long>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$construct@KK@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK$$QAK@Z ; std::_Default_allocator_traits<std::allocator<unsigned long> >::construct<unsigned long,unsigned long>
	add	esp, 12					; 0000000cH

; 1663 :         ++_Last;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1664 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back@K@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEX$$QAK@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Emplace_back<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Copy_memmove@PAKPAK@std@@YAPAKPAK00@Z
_TEXT	SEGMENT
__Count$ = -28						; size = 4
__Dest_ch$ = -24					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -16					; size = 4
__DestPtr$ = -12					; size = 4
__LastPtr$ = -8						; size = 4
__FirstPtr$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAKPAK@std@@YAPAKPAK00@Z PROC		; std::_Copy_memmove<unsigned long *,unsigned long *>, COMDAT

; 4112 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 4113 :     auto _FirstPtr              = _To_address(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_To_address@PAK@std@@YA?A_PABQAK@Z	; std::_To_address<unsigned long *>
	add	esp, 4
	mov	DWORD PTR __FirstPtr$[ebp], eax

; 4114 :     auto _LastPtr               = _To_address(_Last);

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_To_address@PAK@std@@YA?A_PABQAK@Z	; std::_To_address<unsigned long *>
	add	esp, 4
	mov	DWORD PTR __LastPtr$[ebp], eax

; 4115 :     auto _DestPtr               = _To_address(_Dest);

	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_To_address@PAK@std@@YA?A_PABQAK@Z	; std::_To_address<unsigned long *>
	add	esp, 4
	mov	DWORD PTR __DestPtr$[ebp], eax

; 4116 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	eax, DWORD PTR __FirstPtr$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 4117 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	ecx, DWORD PTR __LastPtr$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], ecx

; 4118 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	edx, DWORD PTR __DestPtr$[ebp]
	mov	DWORD PTR __Dest_ch$[ebp], edx

; 4119 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 4120 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First_ch$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest_ch$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH

; 4121 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4122 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	eax, DWORD PTR __Dest_ch$[ebp]
	add	eax, DWORD PTR __Count$[ebp]

; 4123 :     } else {
; 4124 :         return _Dest + (_LastPtr - _FirstPtr);
; 4125 :     }
; 4126 : }

	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_memmove@PAKPAK@std@@YAPAKPAK00@Z ENDP		; std::_Copy_memmove<unsigned long *,unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$move@AAK@std@@YA$$QAKAAK@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAK@std@@YA$$QAKAAK@Z PROC			; std::move<unsigned long &>, COMDAT

; 1422 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1423 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1424 : }

	pop	ebp
	ret	0
??$move@AAK@std@@YA$$QAKAAK@Z ENDP			; std::move<unsigned long &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAK@std@@YA?A_TABQAK@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAK@std@@YA?A_TABQAK@Z PROC		; std::_Get_unwrapped<unsigned long * const &>, COMDAT

; 1347 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp

; 1348 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1349 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1350 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1351 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1352 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1353 :     } else {
; 1354 :         return static_cast<_Iter&&>(_It);
; 1355 :     }
; 1356 : }

	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAK@std@@YA?A_TABQAK@Z ENDP		; std::_Get_unwrapped<unsigned long * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Construct_in_place@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@std@@YAXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@std@@YAXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::queue_entry *,luabind::detail::A0x28cf8a89::queue_entry * &>, COMDAT

; 231  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 232  : #if _HAS_CXX20
; 233  :     if (_STD is_constant_evaluated()) {
; 234  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 235  :     } else
; 236  : #endif // _HAS_CXX20
; 237  :     {
; 238  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ; std::addressof<luabind::detail::`anonymous namespace'::queue_entry *>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::queue_entry * *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::queue_entry * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 239  :     }
; 240  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@std@@YAXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::queue_entry *,luabind::detail::A0x28cf8a89::queue_entry * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z PROC ; std::forward<luabind::detail::`anonymous namespace'::queue_entry * &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ENDP ; std::forward<luabind::detail::`anonymous namespace'::queue_entry * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBVtype_id@luabind@@I@std@@U?$pair@Vtype_id@luabind@@I@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@$$CBVtype_id@luabind@@I@std@@U?$pair@Vtype_id@luabind@@I@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::construct<std::pair<luabind::type_id const ,unsigned int>,std::pair<luabind::type_id,unsigned int> >, COMDAT

; 675  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 676  : #if _HAS_CXX20
; 677  :         if (_STD is_constant_evaluated()) {
; 678  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 679  :         } else
; 680  : #endif // _HAS_CXX20
; 681  :         {
; 682  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Voidify_iter@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAXPAU?$pair@$$CBVtype_id@luabind@@I@0@@Z ; std::_Voidify_iter<std::pair<luabind::type_id const ,unsigned int> *>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z ; std::forward<std::pair<luabind::type_id,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0Vtype_id@luabind@@I$0A@@?$pair@$$CBVtype_id@luabind@@I@std@@QAE@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::pair<luabind::type_id const ,unsigned int>::pair<luabind::type_id const ,unsigned int><luabind::type_id,unsigned int,0>

; 683  :         }
; 684  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U?$pair@$$CBVtype_id@luabind@@I@std@@U?$pair@Vtype_id@luabind@@I@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::construct<std::pair<luabind::type_id const ,unsigned int>,std::pair<luabind::type_id,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>, COMDAT

; 231  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 232  : #if _HAS_CXX20
; 233  :     if (_STD is_constant_evaluated()) {
; 234  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 235  :     } else
; 236  : #endif // _HAS_CXX20
; 237  :     {
; 238  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 239  :     }
; 240  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::construct<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >, COMDAT

; 675  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 676  : #if _HAS_CXX20
; 677  :         if (_STD is_constant_evaluated()) {
; 678  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 679  :         } else
; 680  : #endif // _HAS_CXX20
; 681  :         {
; 682  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Voidify_iter@PAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAXPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@@Z ; std::_Voidify_iter<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > *>
	add	esp, 4
	push	eax
	push	24					; 00000018H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::forward<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> ><boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,0>

; 683  :         }
; 684  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::construct<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>, COMDAT

; 231  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 232  : #if _HAS_CXX20
; 233  :     if (_STD is_constant_evaluated()) {
; 234  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 235  :     } else
; 236  : #endif // _HAS_CXX20
; 237  :     {
; 238  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 239  :     }
; 240  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QA_NAA_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@_N@std@@YA$$QA_NAA_N@Z PROC			; std::forward<bool>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@_N@std@@YA$$QA_NAA_N@Z ENDP			; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@PAUedge@?A0x28cf8a89@detail@luabind@@PAU2345@PAU2345@@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@$$QAPAUedge@?A0x28cf8a89@detail@luabind@@22@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
_<_Val2_1>$ = 20					; size = 4
_<_Val2_2>$ = 24					; size = 4
??$?0V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@PAUedge@?A0x28cf8a89@detail@luabind@@PAU2345@PAU2345@@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@$$QAPAUedge@?A0x28cf8a89@detail@luabind@@22@Z PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1><std::allocator<luabind::detail::`anonymous namespace'::edge>,luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *,luabind::detail::A0x28cf8a89::edge *>, COMDAT
; _this$ = ecx

; 1380 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YA$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@AAV10@@Z ; std::forward<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 4
	mov	ecx, DWORD PTR _<_Val2_2>$[ebp]
	push	ecx
	call	??$forward@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR _<_Val2_1>$[ebp]
	push	eax
	call	??$forward@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _<_Val2_0>$[ebp]
	push	edx
	call	??$forward@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@00@Z ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$?0V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@PAUedge@?A0x28cf8a89@detail@luabind@@PAU2345@PAU2345@@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@$$QAPAUedge@?A0x28cf8a89@detail@luabind@@22@Z ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1><std::allocator<luabind::detail::`anonymous namespace'::edge>,luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *,luabind::detail::A0x28cf8a89::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$exchange@PAUedge@?A0x28cf8a89@detail@luabind@@$$T@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAUedge@?A0x28cf8a89@detail@luabind@@$$T@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@$$QA$$T@Z PROC ; std::exchange<luabind::detail::`anonymous namespace'::edge *,std::nullptr_t>, COMDAT

; 723  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 724  :     // assign _New_val to _Val, return previous _Val
; 725  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 726  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 727  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 728  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAUedge@?A0x28cf8a89@detail@luabind@@$$T@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@$$QA$$T@Z ENDP ; std::exchange<luabind::detail::`anonymous namespace'::edge *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$move@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YA$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YA$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@AAV10@@Z PROC ; std::move<std::allocator<luabind::detail::`anonymous namespace'::edge> &>, COMDAT

; 1422 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1423 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1424 : }

	pop	ebp
	ret	0
??$move@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YA$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@AAV10@@Z ENDP ; std::move<std::allocator<luabind::detail::`anonymous namespace'::edge> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > const >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\tuple_comparison.hpp
;	COMDAT ??$?MIU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@IU012@@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@01@0@Z
_TEXT	SEGMENT
_lhs$ = 8						; size = 4
_rhs$ = 12						; size = 4
??$?MIU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@IU012@@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@01@0@Z PROC ; boost::tuples::operator<<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >,unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >, COMDAT

; 134  : {

	push	ebp
	mov	ebp, esp

; 135  :   // check that tuple lengths are equal
; 136  :   BOOST_STATIC_ASSERT(length<T2>::value == length<S2>::value);
; 137  : 
; 138  :   return detail::lt(lhs, rhs);

	mov	eax, DWORD PTR _rhs$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lhs$[ebp]
	push	ecx
	call	??$lt@U?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@U123@@detail@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@12@0@Z ; boost::tuples::detail::lt<boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > > >
	add	esp, 8

; 139  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$?MIU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@IU012@@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@01@0@Z ENDP ; boost::tuples::operator<<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >,unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Refancy@PAUedge@?A0x28cf8a89@detail@luabind@@$0A@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Refancy@PAUedge@?A0x28cf8a89@detail@luabind@@$0A@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z PROC ; std::_Refancy<luabind::detail::`anonymous namespace'::edge *,0>, COMDAT

; 288  : _CONSTEXPR20 _Pointer _Refancy(_Pointer _Ptr) noexcept {

	push	ebp
	mov	ebp, esp

; 289  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 290  : }

	pop	ebp
	ret	0
??$_Refancy@PAUedge@?A0x28cf8a89@detail@luabind@@$0A@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ENDP ; std::_Refancy<luabind::detail::`anonymous namespace'::edge *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::nullptr_t>, COMDAT

; 723  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 724  :     // assign _New_val to _Val, return previous _Val
; 725  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 726  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 727  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 728  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::nullptr_t>, COMDAT

; 723  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 724  :     // assign _New_val to _Val, return previous _Val
; 725  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 726  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 727  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 728  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Emplace_back<>, COMDAT
; _this$ = ecx

; 1661 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1662 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@K@std@@YAPAKPAK@Z		; std::_Unfancy<unsigned long>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	??$construct@K$$V@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAXAAV?$allocator@K@1@QAK@Z ; std::_Default_allocator_traits<std::allocator<unsigned long> >::construct<unsigned long>
	add	esp, 8

; 1663 :         ++_Last;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], edx

; 1664 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEPAKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEPAKXZ PROC ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Release, COMDAT
; _this$ = ecx

; 1666 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1667 :         _First = _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1668 :         return _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1669 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEPAKXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::~_Uninitialized_backout_al<std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1656 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1657 :         _Destroy_range(_First, _Last, _Al);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
	add	esp, 12					; 0000000cH

; 1658 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::~_Uninitialized_backout_al<std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@PAKAAV?$allocator@K@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@PAKAAV?$allocator@K@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Uninitialized_backout_al<std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 1651 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@PAKAAV?$allocator@K@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Uninitialized_backout_al<std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Zero_range@PAK@std@@YAPAKQAK0@Z
_TEXT	SEGMENT
__Last_ch$ = -8						; size = 4
__First_ch$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAK@std@@YAPAKQAK0@Z PROC		; std::_Zero_range<unsigned long *>, COMDAT

; 1830 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1831 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_To_address@PAK@std@@YA?A_PABQAK@Z	; std::_To_address<unsigned long *>
	add	esp, 4
	mov	DWORD PTR __First_ch$[ebp], eax

; 1832 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_To_address@PAK@std@@YA?A_PABQAK@Z	; std::_To_address<unsigned long *>
	add	esp, 4
	mov	DWORD PTR __Last_ch$[ebp], eax

; 1833 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	edx, DWORD PTR __Last_ch$[ebp]
	sub	edx, DWORD PTR __First_ch$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __First_ch$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1834 :     return _Last;

	mov	eax, DWORD PTR __Last$[ebp]

; 1835 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Zero_range@PAK@std@@YAPAKQAK0@Z ENDP		; std::_Zero_range<unsigned long *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$_Unfancy@K@std@@YAPAKPAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@K@std@@YAPAKPAK@Z PROC			; std::_Unfancy<unsigned long>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp

; 266  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 267  : }

	pop	ebp
	ret	0
??$_Unfancy@K@std@@YAPAKPAK@Z ENDP			; std::_Unfancy<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
__Backout$ = -36					; size = 12
__ULast$ = -20						; size = 4
__UFirst$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z PROC ; std::_Uninitialized_move<unsigned long *,std::allocator<unsigned long> >, COMDAT

; 1740 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1741 :     // move [_First, _Last) to raw _Dest, using _Al
; 1742 :     // note: only called internally from elsewhere in the STL
; 1743 :     using _Ptrval     = typename _Alloc::value_type*;
; 1744 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAK@std@@YA?A_TABQAK@Z ; std::_Get_unwrapped<unsigned long * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 1745 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Get_unwrapped@ABQAK@std@@YA?A_TABQAK@Z ; std::_Get_unwrapped<unsigned long * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax

; 1746 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1747 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1748 : #if _HAS_CXX20
; 1749 :         if (!_STD is_constant_evaluated())
; 1750 : #endif // _HAS_CXX20
; 1751 :         {
; 1752 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Unfancy@K@std@@YAPAKPAK@Z		; std::_Unfancy<unsigned long>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __ULast$[ebp]
	push	eax
	mov	ecx, DWORD PTR __UFirst$[ebp]
	push	ecx
	call	??$_Copy_memmove@PAKPAK@std@@YAPAKPAK00@Z ; std::_Copy_memmove<unsigned long *,unsigned long *>
	add	esp, 12					; 0000000cH

; 1753 :             return _Dest + (_ULast - _UFirst);

	mov	edx, DWORD PTR __ULast$[ebp]
	sub	edx, DWORD PTR __UFirst$[ebp]
	sar	edx, 2
	mov	eax, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]
	jmp	SHORT $LN1@Uninitiali

; 1754 :         }
; 1755 :     }
; 1756 : 
; 1757 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@PAKAAV?$allocator@K@1@@Z ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Uninitialized_backout_al<std::allocator<unsigned long> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1758 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	eax, DWORD PTR __UFirst$[ebp]
	add	eax, 4
	mov	DWORD PTR __UFirst$[ebp], eax
$LN4@Uninitiali:
	mov	ecx, DWORD PTR __UFirst$[ebp]
	cmp	ecx, DWORD PTR __ULast$[ebp]
	je	SHORT $LN3@Uninitiali

; 1759 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	edx, DWORD PTR __UFirst$[ebp]
	push	edx
	call	??$move@AAK@std@@YA$$QAKAAK@Z		; std::move<unsigned long &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??$_Emplace_back@K@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEX$$QAK@Z ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Emplace_back<unsigned long>

; 1760 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1761 : 
; 1762 :     return _Backout._Release();

	lea	ecx, DWORD PTR __Backout$[ebp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEPAKXZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Release
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::~_Uninitialized_backout_al<std::allocator<unsigned long> >
	mov	eax, DWORD PTR $T2[ebp]
$LN1@Uninitiali:

; 1763 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@Uninitiali:
	DD	1
	DD	$LN9@Uninitiali
$LN9@Uninitiali:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN7@Uninitiali
$LN7@Uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z$0:
	lea	ecx, DWORD PTR __Backout$[ebp]
	jmp	??1?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::~_Uninitialized_backout_al<std::allocator<unsigned long> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_move<unsigned long *,std::allocator<unsigned long> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_To_address@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_To_address@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_To_address<luabind::detail::`anonymous namespace'::queue_entry * *>, COMDAT

; 4023 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 4024 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 4025 :     return _Val;

	mov	eax, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [eax]

; 4026 : }

	pop	ebp
	ret	0
??$_To_address@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_To_address<luabind::detail::`anonymous namespace'::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAPAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAPAU1234@@Z PROC ; std::forward<luabind::detail::`anonymous namespace'::queue_entry * *>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAPAU1234@@Z ENDP ; std::forward<luabind::detail::`anonymous namespace'::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Emplace_back@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Emplace_back<luabind::detail::`anonymous namespace'::queue_entry * &>, COMDAT
; _this$ = ecx

; 1474 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1475 :         // construct a new element at *_Last and increment
; 1476 :         _Construct_in_place(*_Last, _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::queue_entry * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Construct_in_place@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAU1234@@std@@YAXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::queue_entry *,luabind::detail::A0x28cf8a89::queue_entry * &>
	add	esp, 8

; 1477 :         ++_Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1478 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Emplace_back<luabind::detail::`anonymous namespace'::queue_entry * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Release
; _this$ = ecx

; 1480 :     constexpr _NoThrowFwdIt _Release() { // suppress any exception handling backout and return _Last

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1481 :         _First = _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1482 :         return _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1483 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::~_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>
; _this$ = ecx

; 1469 :     _CONSTEXPR20 ~_Uninitialized_backout() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1470 :         _Destroy_range(_First, _Last);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@@Z ; std::_Destroy_range<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 8

; 1471 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::~_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Dest$ = 8						; size = 4
??0?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>
; _this$ = ecx

; 1462 :     constexpr explicit _Uninitialized_backout(_NoThrowFwdIt _Dest) : _First(_Dest), _Last(_Dest) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Copy_memmove@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@00@Z
_TEXT	SEGMENT
__Count$ = -28						; size = 4
__Dest_ch$ = -24					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -16					; size = 4
__DestPtr$ = -12					; size = 4
__LastPtr$ = -8						; size = 4
__FirstPtr$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@00@Z PROC ; std::_Copy_memmove<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>, COMDAT

; 4112 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 4113 :     auto _FirstPtr              = _To_address(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_To_address@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::queue_entry * *>
	add	esp, 4
	mov	DWORD PTR __FirstPtr$[ebp], eax

; 4114 :     auto _LastPtr               = _To_address(_Last);

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_To_address@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::queue_entry * *>
	add	esp, 4
	mov	DWORD PTR __LastPtr$[ebp], eax

; 4115 :     auto _DestPtr               = _To_address(_Dest);

	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_To_address@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::queue_entry * *>
	add	esp, 4
	mov	DWORD PTR __DestPtr$[ebp], eax

; 4116 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	eax, DWORD PTR __FirstPtr$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 4117 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	ecx, DWORD PTR __LastPtr$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], ecx

; 4118 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	edx, DWORD PTR __DestPtr$[ebp]
	mov	DWORD PTR __Dest_ch$[ebp], edx

; 4119 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 4120 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First_ch$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest_ch$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH

; 4121 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4122 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	eax, DWORD PTR __Dest_ch$[ebp]
	add	eax, DWORD PTR __Count$[ebp]

; 4123 :     } else {
; 4124 :         return _Dest + (_LastPtr - _FirstPtr);
; 4125 :     }
; 4126 : }

	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_memmove@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@00@Z ENDP ; std::_Copy_memmove<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Verify_range@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAXQBQAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Verify_range@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAXQBQAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::_Verify_range<luabind::detail::`anonymous namespace'::queue_entry *>, COMDAT

; 1309 : constexpr void _Verify_range(const _Ty* const _First, const _Ty* const _Last) noexcept {

	push	ebp
	mov	ebp, esp
$LN4@Verify_ran:

; 1310 :     // special case range verification for pointers
; 1311 :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	ja	SHORT $LN7@Verify_ran
	jmp	SHORT $LN2@Verify_ran
$LN7@Verify_ran:
	push	OFFSET ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1311					; 0000051fH
	push	OFFSET ??_C@_0GD@JCANJH@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@Verify_ran
	int	3
$LN11@Verify_ran:
	push	0
	push	1311					; 0000051fH
	push	OFFSET ??_C@_1MG@LDPLICNP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@Verify_ran
$LN2@Verify_ran:
	xor	eax, eax
	jne	SHORT $LN4@Verify_ran

; 1312 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Verify_range@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAXQBQAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::_Verify_range<luabind::detail::`anonymous namespace'::queue_entry *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >, COMDAT

; 687  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 688  : #if _HAS_CXX20
; 689  :         _STD destroy_at(_Ptr);
; 690  : #else // _HAS_CXX20
; 691  :         _Ptr->~_Uty();
; 692  : #endif // _HAS_CXX20
; 693  :     }

	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Emplace_back@Uedge@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@Uedge@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_back<luabind::detail::`anonymous namespace'::edge>, COMDAT
; _this$ = ecx

; 1661 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1662 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Unfancy@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$construct@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::construct<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>
	add	esp, 12					; 0000000cH

; 1663 :         ++_Last;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1664 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back@Uedge@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_back<luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEPAUedge@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Release
; _this$ = ecx

; 1666 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1667 :         _First = _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1668 :         return _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1669 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEPAUedge@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::~_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >
; _this$ = ecx

; 1656 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1657 :         _Destroy_range(_First, _Last, _Al);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Destroy_range@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 12					; 0000000cH

; 1658 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::~_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >
; _this$ = ecx

; 1651 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Copy_memmove@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z
_TEXT	SEGMENT
__Count$ = -28						; size = 4
__Dest_ch$ = -24					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -16					; size = 4
__DestPtr$ = -12					; size = 4
__LastPtr$ = -8						; size = 4
__FirstPtr$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z PROC ; std::_Copy_memmove<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>, COMDAT

; 4112 : _OutCtgIt _Copy_memmove(_CtgIt _First, _CtgIt _Last, _OutCtgIt _Dest) {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 4113 :     auto _FirstPtr              = _To_address(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	DWORD PTR __FirstPtr$[ebp], eax

; 4114 :     auto _LastPtr               = _To_address(_Last);

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	DWORD PTR __LastPtr$[ebp], eax

; 4115 :     auto _DestPtr               = _To_address(_Dest);

	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	DWORD PTR __DestPtr$[ebp], eax

; 4116 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	eax, DWORD PTR __FirstPtr$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 4117 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	ecx, DWORD PTR __LastPtr$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], ecx

; 4118 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	edx, DWORD PTR __DestPtr$[ebp]
	mov	DWORD PTR __Dest_ch$[ebp], edx

; 4119 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 4120 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First_ch$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest_ch$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH

; 4121 :     if constexpr (is_pointer_v<_OutCtgIt>) {
; 4122 :         return reinterpret_cast<_OutCtgIt>(_Dest_ch + _Count);

	mov	eax, DWORD PTR __Dest_ch$[ebp]
	add	eax, DWORD PTR __Count$[ebp]

; 4123 :     } else {
; 4124 :         return _Dest + (_LastPtr - _FirstPtr);
; 4125 :     }
; 4126 : }

	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_memmove@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z ENDP ; std::_Copy_memmove<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::edge * const &>, COMDAT

; 1347 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp

; 1348 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1349 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1350 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1351 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1352 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1353 :     } else {
; 1354 :         return static_cast<_Iter&&>(_It);
; 1355 :     }
; 1356 : }

	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::edge * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_To_address<luabind::detail::`anonymous namespace'::edge *>, COMDAT

; 4023 : _NODISCARD constexpr auto _To_address(const _Iter& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 4024 :     _STL_INTERNAL_STATIC_ASSERT(is_pointer_v<_Iter>);
; 4025 :     return _Val;

	mov	eax, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [eax]

; 4026 : }

	pop	ebp
	ret	0
??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_To_address<luabind::detail::`anonymous namespace'::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??$?0$$CBH@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABHABUnull_type@12@11111111@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t1$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 4
___formal$ = 32						; size = 4
___formal$ = 36						; size = 4
___formal$ = 40						; size = 4
___formal$ = 44						; size = 4
??$?0$$CBH@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABHABUnull_type@12@11111111@Z PROC ; boost::tuples::cons<int,boost::tuples::null_type>::cons<int,boost::tuples::null_type><int const >, COMDAT
; _this$ = ecx

; 386  :   : head (t1) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
??$?0$$CBH@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABHABUnull_type@12@11111111@Z ENDP ; boost::tuples::cons<int,boost::tuples::null_type>::cons<int,boost::tuples::null_type><int const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUvertex@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUvertex@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::vertex *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUvertex@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::vertex *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z PROC ; std::addressof<luabind::detail::`anonymous namespace'::vertex>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ENDP ; std::addressof<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
__Myhead$ = 12						; size = 4
_<_Vals_0>$ = 16					; size = 4
??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > ><std::pair<luabind::type_id,unsigned int> >, COMDAT
; _this$ = ecx

; 804  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al_$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 805  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
	push	ecx
	call	??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z ; std::forward<std::pair<luabind::type_id,unsigned int> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 16					; 00000010H
	push	eax
	call	??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$construct@U?$pair@$$CBVtype_id@luabind@@I@std@@U?$pair@Vtype_id@luabind@@I@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::construct<std::pair<luabind::type_id const ,unsigned int>,std::pair<luabind::type_id,unsigned int> >
	add	esp, 12					; 0000000cH

; 806  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	lea	eax, DWORD PTR __Myhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
	add	esp, 8

; 807  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	lea	eax, DWORD PTR __Myhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
	add	esp, 8

; 808  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	lea	eax, DWORD PTR __Myhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 8
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
	add	esp, 8

; 809  :         this->_Ptr->_Color = _Red;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 0

; 810  :         this->_Ptr->_Isnil = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+13], 0

; 811  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > ><std::pair<luabind::type_id,unsigned int> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_map@Vtype_id@luabind@@U?$pair@Vtype_id@luabind@@I@std@@@std@@SAABVtype_id@luabind@@ABU?$pair@Vtype_id@luabind@@I@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Extract@?$_In_place_key_extract_map@Vtype_id@luabind@@U?$pair@Vtype_id@luabind@@I@std@@@std@@SAABVtype_id@luabind@@ABU?$pair@Vtype_id@luabind@@I@2@@Z PROC ; std::_In_place_key_extract_map<luabind::type_id,std::pair<luabind::type_id,unsigned int> >::_Extract, COMDAT

; 1925 :     static const _Key& _Extract(const pair<_First, _Second>& _Val) {

	push	ebp
	mov	ebp, esp

; 1926 :         return _Val.first;

	mov	eax, DWORD PTR __Val$[ebp]

; 1927 :     }

	pop	ebp
	ret	0
?_Extract@?$_In_place_key_extract_map@Vtype_id@luabind@@U?$pair@Vtype_id@luabind@@I@std@@@std@@SAABVtype_id@luabind@@ABU?$pair@Vtype_id@luabind@@I@2@@Z ENDP ; std::_In_place_key_extract_map<luabind::type_id,std::pair<luabind::type_id,unsigned int> >::_Extract
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@AAPAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z PROC ; std::forward<luabind::detail::`anonymous namespace'::edge * &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@AAPAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ENDP ; std::forward<luabind::detail::`anonymous namespace'::edge * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$advance@PAUedge@?A0x28cf8a89@detail@luabind@@H@std@@YAXAAPAUedge@?A0x28cf8a89@detail@luabind@@H@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
__Off$ = 12						; size = 4
??$advance@PAUedge@?A0x28cf8a89@detail@luabind@@H@std@@YAXAAPAUedge@?A0x28cf8a89@detail@luabind@@H@Z PROC ; std::advance<luabind::detail::`anonymous namespace'::edge *,int>, COMDAT

; 1568 : _CONSTEXPR17 void advance(_InIt& _Where, _Diff _Off) { // increment iterator by offset

	push	ebp
	mov	ebp, esp

; 1569 :     if constexpr (_Is_random_iter_v<_InIt>) {
; 1570 :         _Where += _Off;

	mov	eax, DWORD PTR __Where$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [ecx], eax

; 1571 :     } else {
; 1572 :         if constexpr (is_signed_v<_Diff> && !_Is_bidi_iter_v<_InIt>) {
; 1573 :             _STL_ASSERT(_Off >= 0, "negative advance of non-bidirectional iterator");
; 1574 :         }
; 1575 : 
; 1576 :         decltype(auto) _UWhere      = _Get_unwrapped_n(_STD move(_Where), _Off);
; 1577 :         constexpr bool _Need_rewrap = !is_reference_v<decltype(_Get_unwrapped_n(_STD move(_Where), _Off))>;
; 1578 : 
; 1579 :         if constexpr (is_signed_v<_Diff> && _Is_bidi_iter_v<_InIt>) {
; 1580 :             for (; _Off < 0; ++_Off) {
; 1581 :                 --_UWhere;
; 1582 :             }
; 1583 :         }
; 1584 : 
; 1585 :         for (; 0 < _Off; --_Off) {
; 1586 :             ++_UWhere;
; 1587 :         }
; 1588 : 
; 1589 :         if constexpr (_Need_rewrap) {
; 1590 :             _Seek_wrapped(_Where, _STD move(_UWhere));
; 1591 :         }
; 1592 :     }
; 1593 : }

	pop	ebp
	ret	0
??$advance@PAUedge@?A0x28cf8a89@detail@luabind@@H@std@@YAXAAPAUedge@?A0x28cf8a89@detail@luabind@@H@Z ENDP ; std::advance<luabind::detail::`anonymous namespace'::edge *,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > > >, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool>::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool>::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
__Myhead$ = 12						; size = 4
_<_Vals_0>$ = 16					; size = 4
??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > ><std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >, COMDAT
; _this$ = ecx

; 804  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al_$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 805  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
	push	ecx
	call	??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::forward<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 16					; 00000010H
	push	eax
	call	??$addressof@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$construct@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::construct<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
	add	esp, 12					; 0000000cH

; 806  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

	lea	eax, DWORD PTR __Myhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
	add	esp, 8

; 807  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

	lea	eax, DWORD PTR __Myhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 4
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
	add	esp, 8

; 808  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

	lea	eax, DWORD PTR __Myhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 8
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
	add	esp, 8

; 809  :         this->_Ptr->_Color = _Red;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 0

; 810  :         this->_Ptr->_Isnil = false;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+13], 0

; 811  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > ><std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT
; _this$ = ecx

; 816  :     ~_Tree_temp_node() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 817  :         if (this->_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tree_temp_

; 818  :             _Destroy_in_place(this->_Ptr->_Left);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4

; 819  :             _Destroy_in_place(this->_Ptr->_Parent);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	push	ecx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4

; 820  :             _Destroy_in_place(this->_Ptr->_Right);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 8
	push	eax
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4

; 821  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 16					; 00000010H
	push	edx
	call	??$addressof@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$destroy@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::destroy<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
	add	esp, 8
$LN1@Tree_temp_:

; 822  :         }
; 823  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT
; _this$ = ecx

; 783  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al_$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 784  :         _Alloc_construct_ptr<_Alnode>::_Allocate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Allocate

; 785  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT
; _this$ = ecx

; 1013 :     _CONSTEXPR20 ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1014 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Alloc_cons

; 1015 :             _Al.deallocate(_Ptr, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::deallocate
$LN3@Alloc_cons:

; 1016 :         }
; 1017 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Allocate, COMDAT
; _this$ = ecx

; 1008 :     _CONSTEXPR20 void _Allocate() { // disengage *this, then allocate a new memory block

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1009 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1010 :         _Ptr = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1011 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Release, COMDAT
; _this$ = ecx

; 1004 :     _NODISCARD _CONSTEXPR20 pointer _Release() noexcept { // disengage *this and return contained pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1005 :         return _STD exchange(_Ptr, nullptr);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::nullptr_t>
	add	esp, 8

; 1006 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT
; _this$ = ecx

; 1002 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool>::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &,bool,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool>::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Extract@?$_In_place_key_extract_map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@Z PROC ; std::_In_place_key_extract_map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >::_Extract, COMDAT

; 1925 :     static const _Key& _Extract(const pair<_First, _Second>& _Val) {

	push	ebp
	mov	ebp, esp

; 1926 :         return _Val.first;

	mov	eax, DWORD PTR __Val$[ebp]

; 1927 :     }

	pop	ebp
	ret	0
?_Extract@?$_In_place_key_extract_map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@Z ENDP ; std::_In_place_key_extract_map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >::_Extract
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@AB_N@std@@YAAB_NAB_N@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AB_N@std@@YAAB_NAB_N@Z PROC			; std::forward<bool const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@AB_N@std@@YAAB_NAB_N@Z ENDP			; std::forward<bool const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > > >, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool>::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YA$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool>::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 816  :     ~_Tree_temp_node() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 817  :         if (this->_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Tree_temp_

; 818  :             _Destroy_in_place(this->_Ptr->_Left);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 819  :             _Destroy_in_place(this->_Ptr->_Parent);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	push	ecx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 820  :             _Destroy_in_place(this->_Ptr->_Right);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 8
	push	eax
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 821  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 16					; 00000010H
	push	edx
	call	??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >
	add	esp, 8
$LN1@Tree_temp_:

; 822  :         }
; 823  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 783  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al_$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 784  :         _Alloc_construct_ptr<_Alnode>::_Allocate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Allocate

; 785  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 1013 :     _CONSTEXPR20 ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1014 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Alloc_cons

; 1015 :             _Al.deallocate(_Ptr, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::deallocate
$LN3@Alloc_cons:

; 1016 :         }
; 1017 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Allocate, COMDAT
; _this$ = ecx

; 1008 :     _CONSTEXPR20 void _Allocate() { // disengage *this, then allocate a new memory block

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1009 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1010 :         _Ptr = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1011 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Release, COMDAT
; _this$ = ecx

; 1004 :     _NODISCARD _CONSTEXPR20 pointer _Release() noexcept { // disengage *this and return contained pointer

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1005 :         return _STD exchange(_Ptr, nullptr);

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@$$T@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::nullptr_t>
	add	esp, 8

; 1006 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 1002 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z PROC ; std::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool>::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &,bool,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@_N@std@@YA$$QA_NAA_N@Z	; std::forward<bool>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [eax]
	mov	BYTE PTR [ecx+4], dl

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z ENDP ; std::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool>::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Backout$ = -32					; size = 12
__PFirst$3 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<unsigned long> >, COMDAT

; 1839 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1840 :     // value-initialize _Count objects to raw _First, using _Al
; 1841 :     using _Ptrty = typename _Alloc::value_type*;
; 1842 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1843 : #if _HAS_CXX20
; 1844 :         if (!_STD is_constant_evaluated())
; 1845 : #endif // _HAS_CXX20
; 1846 :         {
; 1847 :             auto _PFirst = _Unfancy(_First);

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unfancy@K@std@@YAPAKPAK@Z		; std::_Unfancy<unsigned long>
	add	esp, 4
	mov	DWORD PTR __PFirst$3[ebp], eax

; 1848 :             _Zero_range(_PFirst, _PFirst + _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __PFirst$3[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR __PFirst$3[ebp]
	push	ecx
	call	??$_Zero_range@PAK@std@@YAPAKQAK0@Z	; std::_Zero_range<unsigned long *>
	add	esp, 8

; 1849 :             return _First + _Count;

	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]
	jmp	SHORT $LN1@Uninitiali

; 1850 :         }
; 1851 :     }
; 1852 : 
; 1853 :     _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@PAKAAV?$allocator@K@1@@Z ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Uninitialized_backout_al<std::allocator<unsigned long> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1854 :     for (; 0 < _Count; --_Count) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
$LN4@Uninitiali:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@Uninitiali

; 1855 :         _Backout._Emplace_back();

	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEXXZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Emplace_back<>

; 1856 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1857 : 
; 1858 :     return _Backout._Release();

	lea	ecx, DWORD PTR __Backout$[ebp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAEPAKXZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::_Release
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::~_Uninitialized_backout_al<std::allocator<unsigned long> >
	mov	eax, DWORD PTR $T2[ebp]
$LN1@Uninitiali:

; 1859 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@Uninitiali:
	DD	1
	DD	$LN9@Uninitiali
$LN9@Uninitiali:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN7@Uninitiali
$LN7@Uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z$0:
	lea	ecx, DWORD PTR __Backout$[ebp]
	jmp	??1?$_Uninitialized_backout_al@V?$allocator@K@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<unsigned long> >::~_Uninitialized_backout_al<std::allocator<unsigned long> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<unsigned long> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
tv140 = -60						; size = 4
__Appended_last$ = -56					; size = 4
__Appended_first$ = -52					; size = 4
__Newvec$ = -48						; size = 4
__Newcapacity$ = -44					; size = 4
__Oldsize$ = -40					; size = 4
__Mylast$ = -36						; size = 4
__Myfirst$ = -32					; size = 4
__My_data$ = -28					; size = 4
__Al$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1373 :     _CONSTEXPR20 void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 44					; 0000002cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1374 :         if (_Newsize > max_size()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
	cmp	DWORD PTR __Newsize$[ebp], eax
	jbe	SHORT $LN2@Resize_rea

; 1375 :             _Xlength();

	call	?_Xlength@?$vector@KV?$allocator@K@std@@@std@@CAXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlength
$LN2@Resize_rea:

; 1376 :         }
; 1377 : 
; 1378 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1379 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1380 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1381 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1382 : 
; 1383 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
	mov	DWORD PTR __Oldsize$[ebp], edx

; 1384 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$vector@KV?$allocator@K@std@@@std@@ABEII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Calculate_growth
	mov	DWORD PTR __Newcapacity$[ebp], eax

; 1385 : 
; 1386 :         const pointer _Newvec         = _Al.allocate(_Newcapacity);

	mov	ecx, DWORD PTR __Newcapacity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@K@std@@QAEPAKI@Z	; std::allocator<unsigned long>::allocate
	mov	DWORD PTR __Newvec$[ebp], eax

; 1387 :         const pointer _Appended_first = _Newvec + _Oldsize;

	mov	edx, DWORD PTR __Oldsize$[ebp]
	mov	eax, DWORD PTR __Newvec$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR __Appended_first$[ebp], ecx

; 1388 :         pointer _Appended_last        = _Appended_first;

	mov	edx, DWORD PTR __Appended_first$[ebp]
	mov	DWORD PTR __Appended_last$[ebp], edx

; 1389 : 
; 1390 :         _TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1391 :         if constexpr (is_same_v<_Ty2, _Ty>) {
; 1392 :             _Appended_last = _Uninitialized_fill_n(_Appended_first, _Newsize - _Oldsize, _Val, _Al);
; 1393 :         } else {
; 1394 :             _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1395 :             _Appended_last = _Uninitialized_value_construct_n(_Appended_first, _Newsize - _Oldsize, _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, DWORD PTR __Oldsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Appended_first$[ebp]
	push	edx
	call	??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<unsigned long> >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv140[ebp], eax
	mov	eax, DWORD PTR tv140[ebp]
	mov	DWORD PTR __Appended_last$[ebp], eax

; 1396 :         }
; 1397 : 
; 1398 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1399 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Uninitialized_move@PAKV?$allocator@K@std@@@std@@YAPAKQAK0PAKAAV?$allocator@K@0@@Z ; std::_Uninitialized_move<unsigned long *,std::allocator<unsigned long> >
	add	esp, 16					; 00000010H
	jmp	SHORT $LN5@Resize_rea
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$0:

; 1400 :         } else {
; 1401 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1402 :         }
; 1403 :         _CATCH_ALL
; 1404 :         _Destroy_range(_Appended_first, _Appended_last, _Al);

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Appended_last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Appended_first$[ebp]
	push	eax
	call	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
	add	esp, 12					; 0000000cH

; 1405 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	ecx, DWORD PTR __Newcapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@K@std@@QAEXQAKI@Z ; std::allocator<unsigned long>::deallocate

; 1406 :         _RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1407 :         _CATCH_END

	mov	eax, $LN8@Resize_rea
	ret	0
$LN5@Resize_rea:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$1
$LN8@Resize_rea:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z$1:

; 1408 : 
; 1409 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_array@?$vector@KV?$allocator@K@std@@@std@@AAEXQAKII@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Change_array
$LN4@Resize_rea:

; 1410 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-64]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Resize_reallocate<std::_Value_init_tag>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Zero_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0@Z
_TEXT	SEGMENT
__Last_ch$ = -8						; size = 4
__First_ch$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Zero_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0@Z PROC ; std::_Zero_range<luabind::detail::`anonymous namespace'::queue_entry * *>, COMDAT

; 1830 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1831 :     char* const _First_ch = reinterpret_cast<char*>(_To_address(_First));

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_To_address@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::queue_entry * *>
	add	esp, 4
	mov	DWORD PTR __First_ch$[ebp], eax

; 1832 :     char* const _Last_ch  = reinterpret_cast<char*>(_To_address(_Last));

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_To_address@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::queue_entry * *>
	add	esp, 4
	mov	DWORD PTR __Last_ch$[ebp], eax

; 1833 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	edx, DWORD PTR __Last_ch$[ebp]
	sub	edx, DWORD PTR __First_ch$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __First_ch$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 1834 :     return _Last;

	mov	eax, DWORD PTR __Last$[ebp]

; 1835 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Zero_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0@Z ENDP ; std::_Zero_range<luabind::detail::`anonymous namespace'::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Seek_wrapped@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@$$QAPAPAU1234@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__UIt$ = 12						; size = 4
??$_Seek_wrapped@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@$$QAPAPAU1234@@Z PROC ; std::_Seek_wrapped<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>, COMDAT

; 1447 : constexpr void _Seek_wrapped(_Iter& _It, _UIter&& _UIt) {

	push	ebp
	mov	ebp, esp

; 1448 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1449 :         _It._Seek_to(_STD forward<_UIter>(_UIt));
; 1450 :     } else {
; 1451 :         _It = _STD forward<_UIter>(_UIt);

	mov	eax, DWORD PTR __UIt$[ebp]
	push	eax
	call	??$forward@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAPAPAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::queue_entry * *>
	add	esp, 4
	mov	ecx, DWORD PTR __It$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx

; 1452 :     }
; 1453 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Seek_wrapped@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@$$QAPAPAU1234@@Z ENDP ; std::_Seek_wrapped<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z
_TEXT	SEGMENT
$T2 = -32						; size = 4
__Backout$ = -24					; size = 8
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z PROC ; std::_Uninitialized_copy_unchecked<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>, COMDAT

; 1708 : _CONSTEXPR20 _NoThrowFwdIt _Uninitialized_copy_unchecked(_InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1709 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1710 :     if constexpr (_Iter_copy_cat<_InIt, _NoThrowFwdIt>::_Bitcopy_constructible) {
; 1711 : #if _HAS_CXX20
; 1712 :         if (!_STD is_constant_evaluated())
; 1713 : #endif // _HAS_CXX20
; 1714 :         {
; 1715 :             return _Copy_memmove(_First, _Last, _Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_memmove@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@00@Z ; std::_Copy_memmove<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@Uninitiali

; 1716 :         }
; 1717 :     }
; 1718 : 
; 1719 :     _Uninitialized_backout<_NoThrowFwdIt> _Backout{_Dest};

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??0?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1720 :     for (; _First != _Last; ++_First) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 4
	mov	DWORD PTR __First$[ebp], ecx
$LN4@Uninitiali:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Uninitiali

; 1721 :         _Backout._Emplace_back(*_First);

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??$_Emplace_back@AAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Emplace_back<luabind::detail::`anonymous namespace'::queue_entry * &>

; 1722 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1723 : 
; 1724 :     return _Backout._Release();

	lea	ecx, DWORD PTR __Backout$[ebp]
	call	?_Release@?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::_Release
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??1?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::~_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>
	mov	eax, DWORD PTR $T2[ebp]
$LN1@Uninitiali:

; 1725 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@Uninitiali:
	DD	1
	DD	$LN9@Uninitiali
$LN9@Uninitiali:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN7@Uninitiali
$LN7@Uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z$0:
	lea	ecx, DWORD PTR __Backout$[ebp]
	jmp	??1?$_Uninitialized_backout@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ; std::_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>::~_Uninitialized_backout<luabind::detail::`anonymous namespace'::queue_entry * *>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z ENDP ; std::_Uninitialized_copy_unchecked<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Get_unwrapped_n@AAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@H@std@@YA?A_TAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@H@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__Off$ = 12						; size = 4
??$_Get_unwrapped_n@AAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@H@std@@YA?A_TAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@H@Z PROC ; std::_Get_unwrapped_n<luabind::detail::`anonymous namespace'::queue_entry * * &,int>, COMDAT

; 1413 : _NODISCARD constexpr decltype(auto) _Get_unwrapped_n(_Iter&& _It, const _Diff _Off) {

	push	ebp
	mov	ebp, esp

; 1414 :     if constexpr (is_pointer_v<decay_t<_Iter>>) {
; 1415 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1416 :     } else if constexpr (_Unwrappable_for_offset_v<_Iter> && is_integral_v<_Diff>) {
; 1417 :         // ask an iterator to assert that the iterator moved _Off positions is valid, and unwrap
; 1418 :         using _IDiff     = _Iter_diff_t<_Remove_cvref_t<_Iter>>;
; 1419 :         using _CDiff     = common_type_t<_Diff, _IDiff>;
; 1420 :         const auto _COff = static_cast<_CDiff>(_Off);
; 1421 : 
; 1422 :         _STL_ASSERT(_COff <= static_cast<_CDiff>(_Max_possible_v<_IDiff>)
; 1423 :                         && (is_unsigned_v<_Diff> || static_cast<_CDiff>(_Min_possible_v<_IDiff>) <= _COff),
; 1424 :             "integer overflow");
; 1425 :         (void) _COff;
; 1426 : 
; 1427 :         _It._Verify_offset(static_cast<_IDiff>(_Off));
; 1428 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1429 :     } else if constexpr (_Unwrappable_for_unverified_v<_Iter>) {
; 1430 :         // iterator doesn't support offset-based asserts, or offset unknown; defer to unverified unwrap
; 1431 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1432 :     } else {
; 1433 :         // pass through iterator that doesn't participate in checking
; 1434 :         return static_cast<_Iter&&>(_It);
; 1435 :     }
; 1436 : }

	pop	ebp
	ret	0
??$_Get_unwrapped_n@AAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@H@std@@YA?A_TAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@H@Z ENDP ; std::_Get_unwrapped_n<luabind::detail::`anonymous namespace'::queue_entry * * &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Idl_distance@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Idl_distance@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::_Idl_distance<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>, COMDAT

; 1492 : _NODISCARD constexpr auto _Idl_distance(const _Iter& _First, const _Iter& _Last) {

	push	ebp
	mov	ebp, esp

; 1493 :     // tries to get the distance between _First and _Last if they are random-access iterators
; 1494 :     if constexpr (_Is_random_iter_v<_Iter>) {
; 1495 :         return static_cast<_Iter_diff_t<_Checked>>(_Last - _First);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 2

; 1496 :     } else {
; 1497 :         return _Distance_unknown{};
; 1498 :     }
; 1499 : }

	pop	ebp
	ret	0
??$_Idl_distance@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::_Idl_distance<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::queue_entry * * const &>, COMDAT

; 1347 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp

; 1348 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1349 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1350 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1351 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1352 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1353 :     } else {
; 1354 :         return static_cast<_Iter&&>(_It);
; 1355 :     }
; 1356 : }

	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::queue_entry * * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Adl_verify_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Adl_verify_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::_Adl_verify_range<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>, COMDAT

; 1331 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

	push	ebp
	mov	ebp, esp

; 1332 :     // check that [_First, _Last) forms an iterator range
; 1333 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1334 :         _Verify_range(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Verify_range@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAXQBQAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z ; std::_Verify_range<luabind::detail::`anonymous namespace'::queue_entry *>
	add	esp, 8

; 1335 :     }
; 1336 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Adl_verify_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::_Adl_verify_range<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@ABV?$allocator@K@std@@@std@@YAABV?$allocator@K@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@K@std@@@std@@YAABV?$allocator@K@0@ABV10@@Z PROC ; std::forward<std::allocator<unsigned long> const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@ABV?$allocator@K@std@@@std@@YAABV?$allocator@K@0@ABV10@@Z ENDP ; std::forward<std::allocator<unsigned long> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z PROC ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ENDP ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z PROC ; std::_Voidify_iter<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ENDP ; std::_Voidify_iter<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::queue_entry *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::queue_entry *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>, COMDAT

; 296  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp

; 297  :     if constexpr (is_array_v<_Ty>) {
; 298  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 299  :     } else {
; 300  :         _Obj.~_Ty();
; 301  :     }
; 302  : }

	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT

; 378  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 379  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 380  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >
	add	esp, 8

; 381  :         _Freenode0(_Al, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 8

; 382  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>, COMDAT

; 723  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 724  :     // assign _New_val to _Val, return previous _Val
; 725  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 726  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 727  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 728  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Debug_lt_pred@ABU?$less@Vtype_id@luabind@@@std@@ABVtype_id@luabind@@ABV34@$0A@@std@@YA_NABU?$less@Vtype_id@luabind@@@0@ABVtype_id@luabind@@1@Z
_TEXT	SEGMENT
__Result$ = -1						; size = 1
__Pred$ = 8						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$_Debug_lt_pred@ABU?$less@Vtype_id@luabind@@@std@@ABVtype_id@luabind@@ABV34@$0A@@std@@YA_NABU?$less@Vtype_id@luabind@@@0@ABVtype_id@luabind@@1@Z PROC ; std::_Debug_lt_pred<std::less<luabind::type_id> const &,luabind::type_id const &,luabind::type_id const &,0>, COMDAT

; 1528 :     noexcept(_Pred(_Left, _Right)) && noexcept(_Pred(_Right, _Left))) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1529 :     // test if _Pred(_Left, _Right) and _Pred is strict weak ordering, when the arguments are the cv-same-type
; 1530 :     const auto _Result = static_cast<bool>(_Pred(_Left, _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@Vtype_id@luabind@@@std@@QBE_NABVtype_id@luabind@@0@Z ; std::less<luabind::type_id>::operator()
	mov	BYTE PTR __Result$[ebp], al

; 1531 :     if (_Result) {

	movzx	edx, BYTE PTR __Result$[ebp]
	test	edx, edx
	je	SHORT $LN8@Debug_lt_p
$LN4@Debug_lt_p:

; 1532 :         _STL_VERIFY(!_Pred(_Right, _Left), "invalid comparator");

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@Vtype_id@luabind@@@std@@QBE_NABVtype_id@luabind@@0@Z ; std::less<luabind::type_id>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@Debug_lt_p
	jmp	SHORT $LN2@Debug_lt_p
$LN7@Debug_lt_p:
	push	OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1532					; 000005fcH
	push	OFFSET ??_C@_0GD@JCANJH@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@Debug_lt_p
	int	3
$LN12@Debug_lt_p:
	push	0
	push	1532					; 000005fcH
	push	OFFSET ??_C@_1MG@LDPLICNP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Debug_lt_p
$LN2@Debug_lt_p:
	xor	edx, edx
	jne	SHORT $LN4@Debug_lt_p
$LN8@Debug_lt_p:

; 1533 :     }
; 1534 : 
; 1535 :     return _Result;

	mov	al, BYTE PTR __Result$[ebp]

; 1536 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt_pred@ABU?$less@Vtype_id@luabind@@@std@@ABVtype_id@luabind@@ABV34@$0A@@std@@YA_NABU?$less@Vtype_id@luabind@@@0@ABVtype_id@luabind@@1@Z ENDP ; std::_Debug_lt_pred<std::less<luabind::type_id> const &,luabind::type_id const &,luabind::type_id const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\map
;	COMDAT ??$_Kfn@$$CBVtype_id@luabind@@I@?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@SAABVtype_id@luabind@@ABU?$pair@$$CBVtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBVtype_id@luabind@@I@?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@SAABVtype_id@luabind@@ABU?$pair@$$CBVtype_id@luabind@@I@1@@Z PROC ; std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0>::_Kfn<luabind::type_id const ,unsigned int>, COMDAT

; 67   :     static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val) { // extract key from element value

	push	ebp
	mov	ebp, esp

; 68   :         return _Val.first;

	mov	eax, DWORD PTR __Val$[ebp]

; 69   :     }

	pop	ebp
	ret	0
??$_Kfn@$$CBVtype_id@luabind@@I@?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@SAABVtype_id@luabind@@ABU?$pair@$$CBVtype_id@luabind@@I@1@@Z ENDP ; std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0>::_Kfn<luabind::type_id const ,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
__Backout$ = -36					; size = 12
__ULast$ = -20						; size = 4
__UFirst$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z PROC ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::edge *,std::allocator<luabind::detail::`anonymous namespace'::edge> >, COMDAT

; 1740 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1741 :     // move [_First, _Last) to raw _Dest, using _Al
; 1742 :     // note: only called internally from elsewhere in the STL
; 1743 :     using _Ptrval     = typename _Alloc::value_type*;
; 1744 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::edge * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 1745 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Get_unwrapped@ABQAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::edge * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax

; 1746 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1747 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1748 : #if _HAS_CXX20
; 1749 :         if (!_STD is_constant_evaluated())
; 1750 : #endif // _HAS_CXX20
; 1751 :         {
; 1752 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Unfancy@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __ULast$[ebp]
	push	eax
	mov	ecx, DWORD PTR __UFirst$[ebp]
	push	ecx
	call	??$_Copy_memmove@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z ; std::_Copy_memmove<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>
	add	esp, 12					; 0000000cH

; 1753 :             return _Dest + (_ULast - _UFirst);

	mov	edx, DWORD PTR __ULast$[ebp]
	sub	edx, DWORD PTR __UFirst$[ebp]
	sar	edx, 3
	mov	eax, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [eax+edx*8]
	jmp	SHORT $LN1@Uninitiali

; 1754 :         }
; 1755 :     }
; 1756 : 
; 1757 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1758 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	eax, DWORD PTR __UFirst$[ebp]
	add	eax, 8
	mov	DWORD PTR __UFirst$[ebp], eax
$LN4@Uninitiali:
	mov	ecx, DWORD PTR __UFirst$[ebp]
	cmp	ecx, DWORD PTR __ULast$[ebp]
	je	SHORT $LN3@Uninitiali

; 1759 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	edx, DWORD PTR __UFirst$[ebp]
	push	edx
	call	??$move@AAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::edge &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??$_Emplace_back@Uedge@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_back<luabind::detail::`anonymous namespace'::edge>

; 1760 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1761 : 
; 1762 :     return _Backout._Release();

	lea	ecx, DWORD PTR __Backout$[ebp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEPAUedge@?A0x28cf8a89@detail@luabind@@XZ ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Release
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::~_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	mov	eax, DWORD PTR $T2[ebp]
$LN1@Uninitiali:

; 1763 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@Uninitiali:
	DD	1
	DD	$LN9@Uninitiali
$LN9@Uninitiali:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN7@Uninitiali
$LN7@Uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z$0:
	lea	ecx, DWORD PTR __Backout$[ebp]
	jmp	??1?$_Uninitialized_backout_al@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >::~_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ENDP ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::edge *,std::allocator<luabind::detail::`anonymous namespace'::edge> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Copy_backward_memmove@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z
_TEXT	SEGMENT
__Result$ = -32						; size = 4
__Count$ = -28						; size = 4
__Dest_ch$ = -24					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -16					; size = 4
__DestPtr$ = -12					; size = 4
__LastPtr$ = -8						; size = 4
__FirstPtr$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward_memmove@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z PROC ; std::_Copy_backward_memmove<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>, COMDAT

; 4295 : _CtgIt2 _Copy_backward_memmove(_CtgIt1 _First, _CtgIt1 _Last, _CtgIt2 _Dest) {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 4296 :     // implement copy_backward-like function as memmove
; 4297 :     auto _FirstPtr              = _To_address(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	DWORD PTR __FirstPtr$[ebp], eax

; 4298 :     auto _LastPtr               = _To_address(_Last);

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	DWORD PTR __LastPtr$[ebp], eax

; 4299 :     auto _DestPtr               = _To_address(_Dest);

	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_To_address@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA?A_PABQAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_To_address<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	DWORD PTR __DestPtr$[ebp], eax

; 4300 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_FirstPtr));

	mov	eax, DWORD PTR __FirstPtr$[ebp]
	mov	DWORD PTR __First_ch$[ebp], eax

; 4301 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_LastPtr));

	mov	ecx, DWORD PTR __LastPtr$[ebp]
	mov	DWORD PTR __Last_ch$[ebp], ecx

; 4302 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<const volatile char*>(_DestPtr));

	mov	edx, DWORD PTR __DestPtr$[ebp]
	mov	DWORD PTR __Dest_ch$[ebp], edx

; 4303 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	eax, DWORD PTR __Last_ch$[ebp]
	sub	eax, DWORD PTR __First_ch$[ebp]
	mov	DWORD PTR __Count$[ebp], eax

; 4304 :     auto _Result                = _CSTD memmove(_Dest_ch - _Count, _First_ch, _Count);

	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First_ch$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest_ch$[ebp]
	sub	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Result$[ebp], eax

; 4305 :     if constexpr (is_pointer_v<_CtgIt2>) {
; 4306 :         return static_cast<_CtgIt2>(_Result);

	mov	eax, DWORD PTR __Result$[ebp]

; 4307 :     } else {
; 4308 :         return _Dest - (_LastPtr - _FirstPtr);
; 4309 :     }
; 4310 : }

	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_backward_memmove@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z ENDP ; std::_Copy_backward_memmove<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::edge *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Construct_in_place@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@std@@YAXAAUedge@?A0x28cf8a89@detail@luabind@@$$QAU1234@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@std@@YAXAAUedge@?A0x28cf8a89@detail@luabind@@$$QAU1234@@Z PROC ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>, COMDAT

; 231  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 232  : #if _HAS_CXX20
; 233  :     if (_STD is_constant_evaluated()) {
; 234  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 235  :     } else
; 236  : #endif // _HAS_CXX20
; 237  :     {
; 238  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::addressof<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 239  :     }
; 240  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@std@@YAXAAUedge@?A0x28cf8a89@detail@luabind@@$$QAU1234@@Z ENDP ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>, COMDAT

; 296  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp

; 297  :     if constexpr (is_array_v<_Ty>) {
; 298  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 299  :     } else {
; 300  :         _Obj.~_Ty();
; 301  :     }
; 302  : }

	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::destroy<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >, COMDAT

; 687  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 688  : #if _HAS_CXX20
; 689  :         _STD destroy_at(_Ptr);
; 690  : #else // _HAS_CXX20
; 691  :         _Ptr->~_Uty();
; 692  : #endif // _HAS_CXX20
; 693  :     }

	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::destroy<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z PROC ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ENDP ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Debug_lt_pred@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABV345@$0A@@std@@YA_NABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@1@Z
_TEXT	SEGMENT
__Result$ = -1						; size = 1
__Pred$ = 8						; size = 4
__Left$ = 12						; size = 4
__Right$ = 16						; size = 4
??$_Debug_lt_pred@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABV345@$0A@@std@@YA_NABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@1@Z PROC ; std::_Debug_lt_pred<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,0>, COMDAT

; 1528 :     noexcept(_Pred(_Left, _Right)) && noexcept(_Pred(_Right, _Left))) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1529 :     // test if _Pred(_Left, _Right) and _Pred is strict weak ordering, when the arguments are the cv-same-type
; 1530 :     const auto _Result = static_cast<bool>(_Pred(_Left, _Right));

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@QBE_NABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@0@Z ; std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >::operator()
	mov	BYTE PTR __Result$[ebp], al

; 1531 :     if (_Result) {

	movzx	edx, BYTE PTR __Result$[ebp]
	test	edx, edx
	je	SHORT $LN8@Debug_lt_p
$LN4@Debug_lt_p:

; 1532 :         _STL_VERIFY(!_Pred(_Right, _Left), "invalid comparator");

	mov	eax, DWORD PTR __Left$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Pred$[ebp]
	call	??R?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@QBE_NABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@0@Z ; std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN7@Debug_lt_p
	jmp	SHORT $LN2@Debug_lt_p
$LN7@Debug_lt_p:
	push	OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1532					; 000005fcH
	push	OFFSET ??_C@_0GD@JCANJH@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@Debug_lt_p
	int	3
$LN12@Debug_lt_p:
	push	0
	push	1532					; 000005fcH
	push	OFFSET ??_C@_1MG@LDPLICNP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Debug_lt_p
$LN2@Debug_lt_p:
	xor	edx, edx
	jne	SHORT $LN4@Debug_lt_p
$LN8@Debug_lt_p:

; 1533 :     }
; 1534 : 
; 1535 :     return _Result;

	mov	al, BYTE PTR __Result$[ebp]

; 1536 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_lt_pred@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABV345@$0A@@std@@YA_NABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@1@Z ENDP ; std::_Debug_lt_pred<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\map
;	COMDAT ??$_Kfn@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$_Kfn@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z PROC ; std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0>::_Kfn<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >, COMDAT

; 67   :     static const _Kty& _Kfn(const pair<_Ty1, _Ty2>& _Val) { // extract key from element value

	push	ebp
	mov	ebp, esp

; 68   :         return _Val.first;

	mov	eax, DWORD PTR __Val$[ebp]

; 69   :     }

	pop	ebp
	ret	0
??$_Kfn@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ENDP ; std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0>::_Kfn<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??$?0$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABIABHABUnull_type@12@2222222@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
_t1$ = 8						; size = 4
_t2$ = 12						; size = 4
_t3$ = 16						; size = 4
_t4$ = 20						; size = 4
_t5$ = 24						; size = 4
_t6$ = 28						; size = 4
_t7$ = 32						; size = 4
_t8$ = 36						; size = 4
_t9$ = 40						; size = 4
_t10$ = 44						; size = 4
??$?0$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABIABHABUnull_type@12@2222222@Z PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> ><unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >, COMDAT
; _this$ = ecx

; 304  :       {}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 302  :     : head (t1),

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 303  :       tail (t2, t3, t4, t5, t6, t7, t8, t9, t10, detail::cnull())

	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T1[ebp], al
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _t10$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t9$[ebp]
	push	edx
	mov	eax, DWORD PTR _t8$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t7$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t6$[ebp]
	push	edx
	mov	eax, DWORD PTR _t5$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t4$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t3$[ebp]
	push	edx
	mov	eax, DWORD PTR _t2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0$$CBH@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABHABUnull_type@12@11111111@Z ; boost::tuples::cons<int,boost::tuples::null_type>::cons<int,boost::tuples::null_type><int const >

; 304  :       {}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
??$?0$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABIABHABUnull_type@12@2222222@Z ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> ><unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$construct@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::construct<luabind::detail::`anonymous namespace'::vertex,luabind::detail::A0x28cf8a89::vertex>, COMDAT

; 675  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 676  : #if _HAS_CXX20
; 677  :         if (_STD is_constant_evaluated()) {
; 678  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 679  :         } else
; 680  : #endif // _HAS_CXX20
; 681  :         {
; 682  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Voidify_iter@PAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUvertex@?A0x28cf8a89@detail@luabind@@@Z ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::vertex *>
	add	esp, 4
	push	eax
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0vertex@?A0x28cf8a89@detail@luabind@@QAE@$$QAU0123@@Z

; 683  :         }
; 684  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::construct<luabind::detail::`anonymous namespace'::vertex,luabind::detail::A0x28cf8a89::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Construct_in_place@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@std@@YAXAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU1234@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@std@@YAXAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU1234@@Z PROC ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::vertex,luabind::detail::A0x28cf8a89::vertex>, COMDAT

; 231  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 232  : #if _HAS_CXX20
; 233  :     if (_STD is_constant_evaluated()) {
; 234  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 235  :     } else
; 236  : #endif // _HAS_CXX20
; 237  :     {
; 238  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::addressof<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUvertex@?A0x28cf8a89@detail@luabind@@@Z ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::vertex *>
	add	esp, 4
	push	eax
	push	20					; 00000014H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0vertex@?A0x28cf8a89@detail@luabind@@QAE@$$QAU0123@@Z

; 239  :     }
; 240  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@std@@YAXAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU1234@@Z ENDP ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::vertex,luabind::detail::A0x28cf8a89::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 661  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 662  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 663  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 664  :         if (_STD is_constant_evaluated()) {
; 665  :             _Al.deallocate(_Ptr, _Count);
; 666  :         } else
; 667  : #endif // _HAS_CXX20
; 668  :         {
; 669  :             (void) _Al;
; 670  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 671  :         }
; 672  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
tv141 = -72						; size = 4
$T1 = -68						; size = 4
$T2 = -61						; size = 1
$T3 = -60						; size = 8
$T4 = -49						; size = 1
$T5 = -48						; size = 12
__Keyval$6 = -36					; size = 4
__Inserted$ = -32					; size = 4
__Loc$ = -24						; size = 12
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$_Emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Emplace<std::pair<luabind::type_id,unsigned int> >, COMDAT
; _this$ = ecx

; 992  :     pair<_Nodeptr, bool> _Emplace(_Valtys&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 993  :         using _In_place_key_extractor = typename _Traits::template _In_place_key_extractor<_Remove_cvref_t<_Valtys>...>;
; 994  :         const auto _Scary             = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 995  :         _Tree_find_result<_Nodeptr> _Loc;
; 996  :         _Nodeptr _Inserted;
; 997  :         if constexpr (!_Multi && _In_place_key_extractor::_Extractable) {
; 998  :             const auto& _Keyval = _In_place_key_extractor::_Extract(_Vals...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	?_Extract@?$_In_place_key_extract_map@Vtype_id@luabind@@U?$pair@Vtype_id@luabind@@I@std@@@std@@SAABVtype_id@luabind@@ABU?$pair@Vtype_id@luabind@@I@2@@Z ; std::_In_place_key_extract_map<luabind::type_id,std::pair<luabind::type_id,unsigned int> >::_Extract
	add	esp, 4
	mov	DWORD PTR __Keyval$6[ebp], eax

; 999  :             _Loc                = _Find_lower_bound(_Keyval);

	mov	ecx, DWORD PTR __Keyval$6[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Find_lower_bound@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@ABVtype_id@luabind@@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Find_lower_bound<luabind::type_id>
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Loc$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Loc$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR __Loc$[ebp+8], eax

; 1000 :             if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

	mov	ecx, DWORD PTR __Keyval$6[ebp]
	push	ecx
	mov	edx, DWORD PTR __Loc$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Lower_bound_duplicate@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@ABVtype_id@luabind@@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Lower_bound_duplicate<luabind::type_id>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Emplace

; 1001 :                 return {_Loc._Bound, false};

	mov	BYTE PTR $T4[ebp], 0
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	lea	edx, DWORD PTR __Loc$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool>::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &,bool,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Emplace
$LN2@Emplace:

; 1002 :             }
; 1003 : 
; 1004 :             _Check_grow_by_1();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Check_grow_by_1

; 1005 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z ; std::forward<std::pair<luabind::type_id,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > ><std::pair<luabind::type_id,unsigned int> >
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	call	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::_Release
	mov	DWORD PTR __Inserted$[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >

; 1006 :             // nothrow hereafter
; 1007 :         } else {
; 1008 :             _Tree_temp_node<_Alnode> _Newnode(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...);
; 1009 :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 1010 :             if constexpr (_Multi) { // duplicate check if unique
; 1011 :                 _Loc = _Find_upper_bound(_Keyval);
; 1012 :             } else {
; 1013 :                 _Loc = _Find_lower_bound(_Keyval);
; 1014 :                 if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1015 :                     return {_Loc._Bound, false};
; 1016 :                 }
; 1017 :             }
; 1018 : 
; 1019 :             _Check_grow_by_1();
; 1020 :             // nothrow hereafter
; 1021 :             _Inserted = _Newnode._Release();
; 1022 :         }
; 1023 : 
; 1024 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	mov	eax, DWORD PTR __Inserted$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Loc$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Loc$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Scary$[ebp]
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Insert_node
	mov	DWORD PTR $T1[ebp], eax
	mov	BYTE PTR $T2[ebp], 1
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool>::pair<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,bool,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@Emplace:

; 1025 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Emplace
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@Emplace:
	DD	1
	DD	$LN6@Emplace
$LN6@Emplace:
	DD	-24					; ffffffe8H
	DD	12					; 0000000cH
	DD	$LN5@Emplace
$LN5@Emplace:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
??$_Emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Emplace<std::pair<luabind::type_id,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@AAPAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@AAPAUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__UIt$ = 12						; size = 4
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@AAPAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@AAPAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge * &>, COMDAT

; 1447 : constexpr void _Seek_wrapped(_Iter& _It, _UIter&& _UIt) {

	push	ebp
	mov	ebp, esp

; 1448 :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 1449 :         _It._Seek_to(_STD forward<_UIter>(_UIt));

	mov	eax, DWORD PTR __UIt$[ebp]
	push	eax
	call	??$forward@AAPAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAAAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge * &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR __It$[ebp]
	call	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEXPBUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Seek_to

; 1450 :     } else {
; 1451 :         _It = _STD forward<_UIter>(_UIt);
; 1452 :     }
; 1453 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@AAPAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@AAPAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Next_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
??$_Next_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z PROC ; std::_Next_iter<luabind::detail::`anonymous namespace'::edge *>, COMDAT

; 1613 : constexpr _InIt _Next_iter(_InIt _First) { // increment iterator

	push	ebp
	mov	ebp, esp

; 1614 :     return ++_First;

	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 8
	mov	DWORD PTR __First$[ebp], eax
	mov	eax, DWORD PTR __First$[ebp]

; 1615 : }

	pop	ebp
	ret	0
??$_Next_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ENDP ; std::_Next_iter<luabind::detail::`anonymous namespace'::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$?RAAUedge@?A0x28cf8a89@detail@luabind@@ABU0123@@?$less@X@std@@QBE_NAAUedge@?A0x28cf8a89@detail@luabind@@ABU2345@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?RAAUedge@?A0x28cf8a89@detail@luabind@@ABU0123@@?$less@X@std@@QBE_NAAUedge@?A0x28cf8a89@detail@luabind@@ABU2345@@Z PROC ; std::less<void>::operator()<luabind::detail::`anonymous namespace'::edge &,luabind::detail::A0x28cf8a89::edge const &>, COMDAT
; _this$ = ecx

; 220  :         -> decltype(static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 221  :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??M?A0x28cf8a89@detail@luabind@@YA_NABUedge@012@0@Z ; luabind::detail::`anonymous namespace'::operator<
	add	esp, 8

; 222  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?RAAUedge@?A0x28cf8a89@detail@luabind@@ABU0123@@?$less@X@std@@QBE_NAAUedge@?A0x28cf8a89@detail@luabind@@ABU2345@@Z ENDP ; std::less<void>::operator()<luabind::detail::`anonymous namespace'::edge &,luabind::detail::A0x28cf8a89::edge const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$next@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@H@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Off$ = 12						; size = 4
??$next@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@H@Z PROC ; std::next<luabind::detail::`anonymous namespace'::edge *>, COMDAT

; 1618 : _NODISCARD _CONSTEXPR17 _InIt next(_InIt _First, _Iter_diff_t<_InIt> _Off = 1) { // increment iterator

	push	ebp
	mov	ebp, esp

; 1619 :     static_assert(_Is_input_iter_v<_InIt>, "next requires input iterator");
; 1620 : 
; 1621 :     _STD advance(_First, _Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$advance@PAUedge@?A0x28cf8a89@detail@luabind@@H@std@@YAXAAPAUedge@?A0x28cf8a89@detail@luabind@@H@Z ; std::advance<luabind::detail::`anonymous namespace'::edge *,int>
	add	esp, 8

; 1622 :     return _First;

	mov	eax, DWORD PTR __First$[ebp]

; 1623 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$next@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@H@Z ENDP ; std::next<luabind::detail::`anonymous namespace'::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$distance@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAHPAUedge@?A0x28cf8a89@detail@luabind@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$distance@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAHPAUedge@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::distance<luabind::detail::`anonymous namespace'::edge *>, COMDAT

; 1596 : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) {

	push	ebp
	mov	ebp, esp

; 1597 :     if constexpr (_Is_random_iter_v<_InIt>) {
; 1598 :         return _Last - _First; // assume the iterator will do debug checking

	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 3

; 1599 :     } else {
; 1600 :         _Adl_verify_range(_First, _Last);
; 1601 :         auto _UFirst             = _Get_unwrapped(_First);
; 1602 :         const auto _ULast        = _Get_unwrapped(_Last);
; 1603 :         _Iter_diff_t<_InIt> _Off = 0;
; 1604 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1605 :             ++_Off;
; 1606 :         }
; 1607 : 
; 1608 :         return _Off;
; 1609 :     }
; 1610 : }

	pop	ebp
	ret	0
??$distance@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAHPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::distance<luabind::detail::`anonymous namespace'::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Get_unwrapped@ABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@std@@YA?A_TABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@std@@YA?A_TABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > const &>, COMDAT

; 1347 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp

; 1348 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1349 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1350 :         return _It + 0;
; 1351 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1352 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	ecx, DWORD PTR __It$[ebp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEPAUedge@?A0x28cf8a89@detail@luabind@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Unwrapped

; 1353 :     } else {
; 1354 :         return static_cast<_Iter&&>(_It);
; 1355 :     }
; 1356 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Get_unwrapped@ABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@std@@YA?A_TABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Get_unwrapped@AAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@std@@YA?A_TAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@AAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@std@@YA?A_TAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > &>, COMDAT

; 1347 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp

; 1348 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1349 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1350 :         return _It + 0;
; 1351 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1352 :         return static_cast<_Iter&&>(_It)._Unwrapped();

	mov	ecx, DWORD PTR __It$[ebp]
	call	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEPAUedge@?A0x28cf8a89@detail@luabind@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Unwrapped

; 1353 :     } else {
; 1354 :         return static_cast<_Iter&&>(_It);
; 1355 :     }
; 1356 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Get_unwrapped@AAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@std@@YA?A_TAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@V12@@std@@YAXABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@V12@@std@@YAXABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >, COMDAT

; 1331 : constexpr void _Adl_verify_range(const _Iter& _First, const _Sentinel& _Last) {

	push	ebp
	mov	ebp, esp

; 1332 :     // check that [_First, _Last) forms an iterator range
; 1333 :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 1334 :         _Verify_range(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	?_Verify_range@std@@YAXABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@0@Z ; std::_Verify_range
	add	esp, 8

; 1335 :     }
; 1336 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@V12@@std@@YAXABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\range\end.hpp
;	COMDAT ??$range_end@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_detail@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_c$ = 12						; size = 4
??$range_end@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_detail@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z PROC ; boost::range_detail::range_end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >, COMDAT

; 40   :         {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR $T1[ebp], 0

; 41   :             //
; 42   :             // If you get a compile-error here, it is most likely because
; 43   :             // you have not implemented range_begin() properly in
; 44   :             // the namespace of C
; 45   :             //
; 46   :             return c.end();

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	call	?end@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::end
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 47   :         }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$range_end@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_detail@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z ENDP ; boost::range_detail::range_end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\range\begin.hpp
;	COMDAT ??$range_begin@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_detail@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_c$ = 12						; size = 4
??$range_begin@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_detail@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z PROC ; boost::range_detail::range_begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >, COMDAT

; 39   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR $T1[ebp], 0

; 40   :         //
; 41   :         // If you get a compile-error here, it is most likely because
; 42   :         // you have not implemented range_begin() properly in
; 43   :         // the namespace of C
; 44   :         //
; 45   :         return c.begin();

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	call	?begin@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::begin
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 46   :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$range_begin@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_detail@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z ENDP ; boost::range_detail::range_begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool const &,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@AB_N@std@@YAAB_NAB_N@Z	; std::forward<bool const &>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [edx+12], al

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
tv141 = -72						; size = 4
$T1 = -68						; size = 4
$T2 = -61						; size = 1
$T3 = -60						; size = 8
$T4 = -49						; size = 1
$T5 = -48						; size = 12
__Keyval$6 = -36					; size = 4
__Inserted$ = -32					; size = 4
__Loc$ = -24						; size = 12
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$_Emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Emplace<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >, COMDAT
; _this$ = ecx

; 992  :     pair<_Nodeptr, bool> _Emplace(_Valtys&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 993  :         using _In_place_key_extractor = typename _Traits::template _In_place_key_extractor<_Remove_cvref_t<_Valtys>...>;
; 994  :         const auto _Scary             = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 995  :         _Tree_find_result<_Nodeptr> _Loc;
; 996  :         _Nodeptr _Inserted;
; 997  :         if constexpr (!_Multi && _In_place_key_extractor::_Extractable) {
; 998  :             const auto& _Keyval = _In_place_key_extractor::_Extract(_Vals...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	?_Extract@?$_In_place_key_extract_map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@@Z ; std::_In_place_key_extract_map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >::_Extract
	add	esp, 4
	mov	DWORD PTR __Keyval$6[ebp], eax

; 999  :             _Loc                = _Find_lower_bound(_Keyval);

	mov	ecx, DWORD PTR __Keyval$6[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Find_lower_bound@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find_lower_bound<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Loc$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Loc$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR __Loc$[ebp+8], eax

; 1000 :             if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

	mov	ecx, DWORD PTR __Keyval$6[ebp]
	push	ecx
	mov	edx, DWORD PTR __Loc$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Lower_bound_duplicate@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Lower_bound_duplicate<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Emplace

; 1001 :                 return {_Loc._Bound, false};

	mov	BYTE PTR $T4[ebp], 0
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	lea	edx, DWORD PTR __Loc$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@AAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool>::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &,bool,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Emplace
$LN2@Emplace:

; 1002 :             }
; 1003 : 
; 1004 :             _Check_grow_by_1();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Check_grow_by_1

; 1005 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::forward<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > ><std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	call	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::_Release
	mov	DWORD PTR __Inserted$[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >

; 1006 :             // nothrow hereafter
; 1007 :         } else {
; 1008 :             _Tree_temp_node<_Alnode> _Newnode(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...);
; 1009 :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 1010 :             if constexpr (_Multi) { // duplicate check if unique
; 1011 :                 _Loc = _Find_upper_bound(_Keyval);
; 1012 :             } else {
; 1013 :                 _Loc = _Find_lower_bound(_Keyval);
; 1014 :                 if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1015 :                     return {_Loc._Bound, false};
; 1016 :                 }
; 1017 :             }
; 1018 : 
; 1019 :             _Check_grow_by_1();
; 1020 :             // nothrow hereafter
; 1021 :             _Inserted = _Newnode._Release();
; 1022 :         }
; 1023 : 
; 1024 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

	mov	eax, DWORD PTR __Inserted$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Loc$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Loc$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Scary$[ebp]
	call	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Insert_node
	mov	DWORD PTR $T1[ebp], eax
	mov	BYTE PTR $T2[ebp], 1
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N$0A@@?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@std@@QAE@$$QAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@$$QA_N@Z ; std::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool>::pair<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,bool,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@Emplace:

; 1025 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Emplace
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@Emplace:
	DD	1
	DD	$LN6@Emplace
$LN6@Emplace:
	DD	-24					; ffffffe8H
	DD	12					; 0000000cH
	DD	$LN5@Emplace
$LN5@Emplace:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
??$_Emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Emplace<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool const &,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@@std@@YA$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@0@AAV10@@Z ; std::forward<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@AB_N@std@@YAAB_NAB_N@Z	; std::forward<bool const &>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax]
	mov	BYTE PTR [edx+12], al

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z
_TEXT	SEGMENT
__Oldlast$1 = -36					; size = 4
__Oldcapacity$2 = -32					; size = 4
__Newlast$3 = -28					; size = 4
__Oldsize$ = -24					; size = 4
__Mylast$ = -20						; size = 4
__Myfirst$ = -16					; size = 4
__My_data$ = -12					; size = 4
__Al$ = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Resize@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Resize<std::_Value_init_tag>, COMDAT
; _this$ = ecx

; 1413 :     _CONSTEXPR20 void _Resize(const size_type _Newsize, const _Ty2& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1414 :         // trim or append elements, provide strong guarantee
; 1415 :         auto& _Al           = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1416 :         auto& _My_data      = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1417 :         pointer& _Myfirst   = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1418 :         pointer& _Mylast    = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1419 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
	mov	DWORD PTR __Oldsize$[ebp], edx

; 1420 :         if (_Newsize < _Oldsize) { // trim

	mov	eax, DWORD PTR __Newsize$[ebp]
	cmp	eax, DWORD PTR __Oldsize$[ebp]
	jae	SHORT $LN2@Resize

; 1421 :             const pointer _Newlast = _Myfirst + _Newsize;

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Newsize$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	mov	DWORD PTR __Newlast$3[ebp], ecx

; 1422 :             _Orphan_range(_Newlast, _Mylast);

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Newlast$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range

; 1423 :             _Destroy_range(_Newlast, _Mylast, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Newlast$3[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
	add	esp, 12					; 0000000cH

; 1424 :             _ASAN_VECTOR_MODIFY(static_cast<difference_type>(_Newsize - _Oldsize));
; 1425 :             _Mylast = _Newlast;

	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Newlast$3[ebp]
	mov	DWORD PTR [eax], ecx

; 1426 :             return;

	jmp	SHORT $LN1@Resize
$LN2@Resize:

; 1427 :         }
; 1428 : 
; 1429 :         if (_Newsize > _Oldsize) { // append

	mov	edx, DWORD PTR __Newsize$[ebp]
	cmp	edx, DWORD PTR __Oldsize$[ebp]
	jbe	SHORT $LN1@Resize

; 1430 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 2
	mov	DWORD PTR __Oldcapacity$2[ebp], edx

; 1431 :             if (_Newsize > _Oldcapacity) { // reallocate

	mov	eax, DWORD PTR __Newsize$[ebp]
	cmp	eax, DWORD PTR __Oldcapacity$2[ebp]
	jbe	SHORT $LN4@Resize

; 1432 :                 _Resize_reallocate(_Newsize, _Val);

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Resize_reallocate<std::_Value_init_tag>

; 1433 :                 return;

	jmp	SHORT $LN1@Resize
$LN4@Resize:

; 1434 :             }
; 1435 : 
; 1436 :             _ASAN_VECTOR_EXTEND_GUARD(_Newsize);
; 1437 :             const pointer _Oldlast = _Mylast;

	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Oldlast$1[ebp], ecx

; 1438 :             if constexpr (is_same_v<_Ty2, _Ty>) {
; 1439 :                 _Mylast = _Uninitialized_fill_n(_Oldlast, _Newsize - _Oldsize, _Val, _Al);
; 1440 :             } else {
; 1441 :                 _STL_INTERNAL_STATIC_ASSERT(is_same_v<_Ty2, _Value_init_tag>);
; 1442 :                 _Mylast = _Uninitialized_value_construct_n(_Oldlast, _Newsize - _Oldsize, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newsize$[ebp]
	sub	eax, DWORD PTR __Oldsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldlast$1[ebp]
	push	ecx
	call	??$_Uninitialized_value_construct_n@V?$allocator@K@std@@@std@@YAPAKPAKIAAV?$allocator@K@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<unsigned long> >
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [edx], eax

; 1443 :             }
; 1444 :             _ASAN_VECTOR_RELEASE_GUARD;
; 1445 :             _Orphan_range(_Oldlast, _Oldlast);

	mov	eax, DWORD PTR __Oldlast$1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldlast$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
$LN1@Resize:

; 1446 :         }
; 1447 : 
; 1448 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1449 :     }

	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Resize@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@K@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@K@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<unsigned long> > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@K@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z PROC ; std::_Destroy_range<std::allocator<unsigned long> >, COMDAT

; 944  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	push	ebp
	mov	ebp, esp

; 945  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 946  :     using _Ty = typename _Alloc::value_type;
; 947  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 948  :         for (; _First != _Last; ++_First) {
; 949  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 950  :         }
; 951  :     }
; 952  : }

	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$03@std@@YAII@Z PROC			; std::_Get_size_of_n<4>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 1073741823 ; 3fffffffH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
$LN3@Get_size_o:

; 66   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$03@std@@YAII@Z ENDP			; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BI@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0BI@@std@@YAII@Z PROC		; std::_Get_size_of_n<24>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 178956970 ; 0aaaaaaaH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 178956970	; 0aaaaaaaH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	eax, DWORD PTR __Count$[ebp], 24
$LN3@Get_size_o:

; 66   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0BI@@std@@YAII@Z ENDP		; std::_Get_size_of_n<24>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CI@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0CI@@std@@YAII@Z PROC		; std::_Get_size_of_n<40>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 107374182 ; 06666666H

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 107374182	; 06666666H
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	eax, DWORD PTR __Count$[ebp], 40
$LN3@Get_size_o:

; 66   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0CI@@std@@YAII@Z ENDP		; std::_Get_size_of_n<40>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0M@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0M@@std@@YAII@Z PROC			; std::_Get_size_of_n<12>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 357913941 ; 15555555H

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	eax, DWORD PTR __Count$[ebp], 12
$LN3@Get_size_o:

; 66   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0M@@std@@YAII@Z ENDP			; std::_Get_size_of_n<12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Destroy_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Destroy_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@@Z PROC ; std::_Destroy_range<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>, COMDAT

; 955  : _CONSTEXPR20 void _Destroy_range(_NoThrowFwdIt _First, const _NoThrowSentinel _Last) noexcept {

	push	ebp
	mov	ebp, esp

; 956  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 957  :     if constexpr (!is_trivially_destructible_v<_Iter_value_t<_NoThrowFwdIt>>) {
; 958  :         for (; _First != _Last; ++_First) {
; 959  :             _Destroy_in_place(*_First);
; 960  :         }
; 961  :     }
; 962  : }

	pop	ebp
	ret	0
??$_Destroy_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@@Z ENDP ; std::_Destroy_range<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n_unchecked1@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@I@Z
_TEXT	SEGMENT
__UFirst$ = 8						; size = 4
__Count$ = 12						; size = 4
??$_Uninitialized_value_construct_n_unchecked1@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@I@Z PROC ; std::_Uninitialized_value_construct_n_unchecked1<luabind::detail::`anonymous namespace'::queue_entry * *,unsigned int>, COMDAT

; 1862 : _NoThrowFwdIt _Uninitialized_value_construct_n_unchecked1(_NoThrowFwdIt _UFirst, _Diff _Count) {

	push	ebp
	mov	ebp, esp

; 1863 :     // value-initialize all elements in [_UFirst, _UFirst + _Count_raw)
; 1864 :     _STL_INTERNAL_CHECK(_Count >= 0);
; 1865 :     if constexpr (_Use_memset_value_construct_v<_NoThrowFwdIt>) {
; 1866 :         return _Zero_range(_UFirst, _UFirst + _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __UFirst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	call	??$_Zero_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0@Z ; std::_Zero_range<luabind::detail::`anonymous namespace'::queue_entry * *>
	add	esp, 8

; 1867 :     } else {
; 1868 :         _Uninitialized_backout<_NoThrowFwdIt> _Backout{_UFirst};
; 1869 :         for (; 0 < _Count; --_Count) {
; 1870 :             _Backout._Emplace_back();
; 1871 :         }
; 1872 : 
; 1873 :         return _Backout._Release();
; 1874 :     }
; 1875 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Uninitialized_value_construct_n_unchecked1@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@I@Z ENDP ; std::_Uninitialized_value_construct_n_unchecked1<luabind::detail::`anonymous namespace'::queue_entry * *,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$uninitialized_copy@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0PAPAU1234@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 4
__UDest$ = -28						; size = 4
__ULast$ = -20						; size = 4
__UFirst$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$uninitialized_copy@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0PAPAU1234@@Z PROC ; std::uninitialized_copy<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>, COMDAT

; 1728 : _NoThrowFwdIt uninitialized_copy(const _InIt _First, const _InIt _Last, _NoThrowFwdIt _Dest) {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 1729 :     // copy [_First, _Last) to raw [_Dest, ...)
; 1730 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z ; std::_Adl_verify_range<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 8

; 1731 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Get_unwrapped@ABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::queue_entry * * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 1732 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::queue_entry * * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax

; 1733 :     auto _UDest       = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

	lea	ecx, DWORD PTR __ULast$[ebp]
	push	ecx
	lea	edx, DWORD PTR __UFirst$[ebp]
	push	edx
	call	??$_Idl_distance@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YA?A_PABQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@0@Z ; std::_Idl_distance<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 8
	push	eax
	lea	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	??$_Get_unwrapped_n@AAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@H@std@@YA?A_TAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@H@Z ; std::_Get_unwrapped_n<luabind::detail::`anonymous namespace'::queue_entry * * &,int>
	add	esp, 8
	mov	DWORD PTR __UDest$[ebp], eax

; 1734 :     _Seek_wrapped(_Dest, _Uninitialized_copy_unchecked(_UFirst, _ULast, _UDest));

	mov	ecx, DWORD PTR __UDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __ULast$[ebp]
	push	edx
	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	call	??$_Uninitialized_copy_unchecked@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@QAPAU1234@0@Z ; std::_Uninitialized_copy_unchecked<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Seek_wrapped@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@$$QAPAPAU1234@@Z ; std::_Seek_wrapped<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 8

; 1735 :     return _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]

; 1736 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@uninitiali:
	DD	2
	DD	$LN5@uninitiali
$LN5@uninitiali:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@uninitiali
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@uninitiali
$LN4@uninitiali:
	DB	95					; 0000005fH
	DB	85					; 00000055H
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN3@uninitiali:
	DB	95					; 0000005fH
	DB	85					; 00000055H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
??$uninitialized_copy@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0PAPAU1234@@Z ENDP ; std::uninitialized_copy<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0ABV?$allocator@K@std@@$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@K@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@K@std@@$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@K@1@@Z PROC ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1><std::allocator<unsigned long> const &>, COMDAT
; _this$ = ecx

; 1380 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@K@std@@@std@@YAABV?$allocator@K@0@ABV10@@Z ; std::forward<std::allocator<unsigned long> const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned long> >::_Vector_val<std::_Simple_types<unsigned long> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@K@std@@$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@K@1@@Z ENDP ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1><std::allocator<unsigned long> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\detail\dynamic_bitset.hpp
;	COMDAT ?left_shift@?$shifter@K$0CA@$0CA@@dynamic_bitset_impl@detail@boost@@SAXAAK@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
_v$ = 8							; size = 4
?left_shift@?$shifter@K$0CA@$0CA@@dynamic_bitset_impl@detail@boost@@SAXAAK@Z PROC ; boost::detail::dynamic_bitset_impl::shifter<unsigned long,32,32>::left_shift, COMDAT

; 55   :         static void left_shift(T & v) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 56   :             amount >= width ? (v = 0)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN3@left_shift
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [ecx], 0
	mov	DWORD PTR tv66[ebp], 0
	jmp	SHORT $LN1@left_shift
$LN3@left_shift:
	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv66[ebp], eax
$LN1@left_shift:

; 57   :                 : (v >>= BOOST_DYNAMIC_BITSET_WRAP_CONSTANT(amount));
; 58   :         }

	mov	esp, ebp
	pop	ebp
	ret	0
?left_shift@?$shifter@K$0CA@$0CA@@dynamic_bitset_impl@detail@boost@@SAXAAK@Z ENDP ; boost::detail::dynamic_bitset_impl::shifter<unsigned long,32,32>::left_shift
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++, COMDAT
; _this$ = ecx

; 276  :     _CONSTEXPR20 _Vector_iterator& operator++() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 277  :         _Mybase::operator++();

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++

; 278  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 279  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*, COMDAT
; _this$ = ecx

; 261  :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 262  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*

; 263  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++, COMDAT
; _this$ = ecx

; 67   :     _CONSTEXPR20 _Vector_const_iterator& operator++() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 68   : #if _ITERATOR_DEBUG_LEVEL != 0
; 69   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 70   :         _STL_VERIFY(_Ptr, "can't increment value-initialized vector iterator");

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	70					; 00000046H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	70					; 00000046H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 71   :         _STL_VERIFY(_Ptr < _Mycont->_Mylast, "can't increment vector iterator past end");

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Mycont$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	71					; 00000047H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	71					; 00000047H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	eax, eax
	jne	SHORT $LN10@operator

; 72   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 73   : 
; 74   :         ++_Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 75   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 76   :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*, COMDAT
; _this$ = ecx

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	48					; 00000030H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	48					; 00000030H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	ja	SHORT $LN13@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Mycont$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	50					; 00000032H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	50					; 00000032H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	eax, eax
	jne	SHORT $LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]

; 54   :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEABKXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >, COMDAT
; _this$ = ecx

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 42   :         this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$destroy@Uedge@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@Uedge@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::destroy<luabind::detail::`anonymous namespace'::edge>, COMDAT

; 687  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 688  : #if _HAS_CXX20
; 689  :         _STD destroy_at(_Ptr);
; 690  : #else // _HAS_CXX20
; 691  :         _Ptr->~_Uty();
; 692  : #endif // _HAS_CXX20
; 693  :     }

	pop	ebp
	ret	0
??$destroy@Uedge@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::destroy<luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 212  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 213  :     if constexpr (is_pointer_v<_Iter>) {
; 214  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 215  :     } else {
; 216  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 217  :     }
; 218  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>, COMDAT

; 231  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 232  : #if _HAS_CXX20
; 233  :     if (_STD is_constant_evaluated()) {
; 234  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 235  :     } else
; 236  : #endif // _HAS_CXX20
; 237  :     {
; 238  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 239  :     }
; 240  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>, COMDAT

; 231  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 232  : #if _HAS_CXX20
; 233  :     if (_STD is_constant_evaluated()) {
; 234  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 235  :     } else
; 236  : #endif // _HAS_CXX20
; 237  :     {
; 238  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 239  :     }
; 240  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Ptr_container$ = -8					; size = 4
__Block_size$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 129  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 130  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 131  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	eax, DWORD PTR __Bytes$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$[ebp], eax

; 132  :     if (_Block_size <= _Bytes) {

	mov	ecx, DWORD PTR __Block_size$[ebp]
	cmp	ecx, DWORD PTR __Bytes$[ebp]
	ja	SHORT $LN8@Allocate_m

; 133  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 134  :     }
; 135  : 
; 136  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	edx, DWORD PTR __Block_size$[ebp]
	push	edx
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 137  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	DWORD PTR __Ptr_container$[ebp], 0
	je	SHORT $LN7@Allocate_m
	jmp	SHORT $LN2@Allocate_m
$LN7@Allocate_m:
	push	OFFSET $SG120437
	push	OFFSET $SG120438
	push	0
	push	137					; 00000089H
	push	OFFSET $SG120439
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
$LN12@Allocate_m:
	push	0
	push	137					; 00000089H
	push	OFFSET $SG120440
	push	OFFSET $SG120441
	push	OFFSET $SG120442
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Allocate_m
$LN2@Allocate_m:
	xor	edx, edx
	jne	SHORT $LN4@Allocate_m

; 138  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	eax, DWORD PTR __Ptr_container$[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax

; 139  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	ecx, 4
	imul	edx, ecx, -1
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [eax+edx], ecx

; 140  : 
; 141  : #ifdef _DEBUG
; 142  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	edx, 4
	imul	eax, edx, -2
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [ecx+eax], -84215046		; fafafafaH

; 143  : #endif // _DEBUG
; 144  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 145  : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z PROC ; std::forward<std::less<luabind::type_id> const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z ENDP ; std::forward<std::less<luabind::type_id> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_Zero_then_variadic_args_t>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@@std@@YAABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@@std@@YAABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABU10@@Z PROC ; std::forward<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@@std@@YAABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABU10@@Z ENDP ; std::forward<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Emplace_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_back<luabind::detail::`anonymous namespace'::vertex>, COMDAT
; _this$ = ecx

; 1661 :     _CONSTEXPR20 void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1662 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$_Unfancy@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$construct@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::construct<luabind::detail::`anonymous namespace'::vertex,luabind::detail::A0x28cf8a89::vertex>
	add	esp, 12					; 0000000cH

; 1663 :         ++_Last;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1664 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_back<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEPAUvertex@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Release
; _this$ = ecx

; 1666 :     constexpr pointer _Release() { // suppress any exception handling backout and return _Last

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1667 :         _First = _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1668 :         return _Last;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 1669 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEPAUvertex@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::~_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
; _this$ = ecx

; 1656 :     _CONSTEXPR20 ~_Uninitialized_backout_al() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1657 :         _Destroy_range(_First, _Last, _Al);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 12					; 0000000cH

; 1658 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::~_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUvertex@?A0x28cf8a89@detail@luabind@@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
; _this$ = ecx

; 1651 :     _CONSTEXPR20 _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUvertex@?A0x28cf8a89@detail@luabind@@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Get_unwrapped@ABQAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUvertex@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Get_unwrapped@ABQAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUvertex@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::vertex * const &>, COMDAT

; 1347 : _NODISCARD constexpr decltype(auto) _Get_unwrapped(_Iter&& _It) {

	push	ebp
	mov	ebp, esp

; 1348 :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 1349 :     if constexpr (is_pointer_v<decay_t<_Iter>>) { // special-case pointers and arrays
; 1350 :         return _It + 0;

	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]

; 1351 :     } else if constexpr (_Unwrappable_v<_Iter>) {
; 1352 :         return static_cast<_Iter&&>(_It)._Unwrapped();
; 1353 :     } else {
; 1354 :         return static_cast<_Iter&&>(_It);
; 1355 :     }
; 1356 : }

	pop	ebp
	ret	0
??$_Get_unwrapped@ABQAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUvertex@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::vertex * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$destroy@Uvertex@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@Uvertex@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::destroy<luabind::detail::`anonymous namespace'::vertex>, COMDAT

; 687  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 688  : #if _HAS_CXX20
; 689  :         _STD destroy_at(_Ptr);
; 690  : #else // _HAS_CXX20
; 691  :         _Ptr->~_Uty();

	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_Gvertex@?A0x28cf8a89@detail@luabind@@QAEPAXI@Z

; 692  : #endif // _HAS_CXX20
; 693  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@Uvertex@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::destroy<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$_Unfancy@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@PAU1234@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@PAU1234@@Z PROC ; std::_Unfancy<luabind::detail::`anonymous namespace'::vertex>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp

; 266  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 267  : }

	pop	ebp
	ret	0
??$_Unfancy@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ENDP ; std::_Unfancy<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$construct@Uqueue_entry@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@Uqueue_entry@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::construct<luabind::detail::`anonymous namespace'::queue_entry,luabind::detail::A0x28cf8a89::queue_entry>, COMDAT

; 675  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 676  : #if _HAS_CXX20
; 677  :         if (_STD is_constant_evaluated()) {
; 678  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 679  :         } else
; 680  : #endif // _HAS_CXX20
; 681  :         {
; 682  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Voidify_iter@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::queue_entry *>
	add	esp, 4
	push	eax
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::queue_entry>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax

; 683  :         }
; 684  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@Uqueue_entry@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::construct<luabind::detail::`anonymous namespace'::queue_entry,luabind::detail::A0x28cf8a89::queue_entry>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z PROC ; std::forward<luabind::detail::`anonymous namespace'::queue_entry>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ENDP ; std::forward<luabind::detail::`anonymous namespace'::queue_entry>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT

; 369  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 370  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 371  :         _Destroy_in_place(_Ptr->_Left);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 372  :         _Destroy_in_place(_Ptr->_Parent);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 373  :         _Destroy_in_place(_Ptr->_Right);

	mov	edx, DWORD PTR __Ptr$[ebp]
	add	edx, 8
	push	edx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 374  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 375  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@Erase_tree:

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	mov	eax, DWORD PTR __Rootnode$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN4@Erase_tree

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	edx, DWORD PTR __Rootnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	lea	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	call	??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 8

; 746  :         }

	jmp	SHORT $LN2@Erase_tree
$LN4@Erase_tree:

; 747  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Lower_bound_duplicate@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@ABVtype_id@luabind@@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Bound$ = 8						; size = 4
__Keyval$ = 12						; size = 4
??$_Lower_bound_duplicate@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@ABVtype_id@luabind@@@Z PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Lower_bound_duplicate<luabind::type_id>, COMDAT
; _this$ = ecx

; 1590 :     bool _Lower_bound_duplicate(const _Nodeptr _Bound, const _Keyty& _Keyval) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	mov	eax, DWORD PTR __Bound$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN3@Lower_boun
	mov	edx, DWORD PTR __Bound$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	??$_Kfn@$$CBVtype_id@luabind@@I@?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@SAABVtype_id@luabind@@ABU?$pair@$$CBVtype_id@luabind@@I@1@@Z ; std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0>::_Kfn<luabind::type_id const ,unsigned int>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABU?$less@Vtype_id@luabind@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@Vtype_id@luabind@@@std@@ABVtype_id@luabind@@ABV34@$0A@@std@@YA_NABU?$less@Vtype_id@luabind@@@0@ABVtype_id@luabind@@1@Z ; std::_Debug_lt_pred<std::less<luabind::type_id> const &,luabind::type_id const &,luabind::type_id const &,0>
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Lower_boun
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@Lower_boun
$LN3@Lower_boun:
	mov	DWORD PTR tv78[ebp], 0
$LN4@Lower_boun:
	mov	al, BYTE PTR tv78[ebp]

; 1592 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Lower_bound_duplicate@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@ABVtype_id@luabind@@@Z ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Lower_bound_duplicate<luabind::type_id>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Find_lower_bound@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@ABVtype_id@luabind@@@Z
_TEXT	SEGMENT
__Trynode$ = -32					; size = 4
__Result$ = -24						; size = 12
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@ABVtype_id@luabind@@@Z PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Find_lower_bound<luabind::type_id>, COMDAT
; _this$ = ecx

; 1595 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1596 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1597 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	eax, DWORD PTR __Scary$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Result$[ebp], edx
	mov	DWORD PTR __Result$[ebp+4], 0
	mov	eax, DWORD PTR __Scary$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Result$[ebp+8], ecx

; 1598 :         _Nodeptr _Trynode = _Result._Location._Parent;

	mov	edx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR __Trynode$[ebp], edx
$LN2@Find_lower:

; 1599 :         while (!_Trynode->_Isnil) {

	mov	eax, DWORD PTR __Trynode$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN3@Find_lower

; 1600 :             _Result._Location._Parent = _Trynode;

	mov	edx, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Result$[ebp], edx

; 1601 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Trynode$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	??$_Kfn@$$CBVtype_id@luabind@@I@?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@SAABVtype_id@luabind@@ABU?$pair@$$CBVtype_id@luabind@@I@1@@Z ; std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0>::_Kfn<luabind::type_id const ,unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABU?$less@Vtype_id@luabind@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@Vtype_id@luabind@@@std@@ABVtype_id@luabind@@ABV34@$0A@@std@@YA_NABU?$less@Vtype_id@luabind@@@0@ABVtype_id@luabind@@1@Z ; std::_Debug_lt_pred<std::less<luabind::type_id> const &,luabind::type_id const &,luabind::type_id const &,0>
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Find_lower

; 1602 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR __Result$[ebp+4], 0

; 1603 :                 _Trynode                 = _Trynode->_Right;

	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Trynode$[ebp], ecx

; 1604 :             } else {

	jmp	SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1605 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR __Result$[ebp+4], 1

; 1606 :                 _Result._Bound           = _Trynode;

	mov	edx, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Result$[ebp+8], edx

; 1607 :                 _Trynode                 = _Trynode->_Left;

	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$[ebp], ecx
$LN5@Find_lower:

; 1608 :             }
; 1609 :         }

	jmp	SHORT $LN2@Find_lower
$LN3@Find_lower:

; 1610 : 
; 1611 :         return _Result;

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Result$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Result$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __Result$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1612 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Find_lower
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN9@Find_lower:
	DD	1
	DD	$LN8@Find_lower
$LN8@Find_lower:
	DD	-24					; ffffffe8H
	DD	12					; 0000000cH
	DD	$LN7@Find_lower
$LN7@Find_lower:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
??$_Find_lower_bound@Vtype_id@luabind@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@ABVtype_id@luabind@@@Z ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Find_lower_bound<luabind::type_id>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
_TEXT	SEGMENT
__Constructed_first$ = -64				; size = 4
__Constructed_last$ = -60				; size = 4
__Newvec$ = -56						; size = 4
__Newcapacity$ = -52					; size = 4
__Newsize$ = -48					; size = 4
__Oldsize$ = -44					; size = 4
__Whereoff$ = -40					; size = 4
__Mylast$ = -36						; size = 4
__Myfirst$ = -32					; size = 4
__My_data$ = -28					; size = 4
__Al$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_reallocate<luabind::detail::`anonymous namespace'::edge>, COMDAT
; _this$ = ecx

; 852  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 853  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 854  :         _Alty& _Al        = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 855  :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 856  :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 857  :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 858  : 
; 859  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 860  : 
; 861  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR __Whereptr$[ebp]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 3
	mov	DWORD PTR __Whereoff$[ebp], ecx

; 862  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax]
	sar	ecx, 3
	mov	DWORD PTR __Oldsize$[ebp], ecx

; 863  : 
; 864  :         if (_Oldsize == max_size()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::max_size
	cmp	DWORD PTR __Oldsize$[ebp], eax
	jne	SHORT $LN2@Emplace_re

; 865  :             _Xlength();

	call	?_Xlength@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@CAXXZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Xlength
$LN2@Emplace_re:

; 866  :         }
; 867  : 
; 868  :         const size_type _Newsize     = _Oldsize + 1;

	mov	edx, DWORD PTR __Oldsize$[ebp]
	add	edx, 1
	mov	DWORD PTR __Newsize$[ebp], edx

; 869  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Calculate_growth
	mov	DWORD PTR __Newcapacity$[ebp], eax

; 870  : 
; 871  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	ecx, DWORD PTR __Newcapacity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUedge@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::edge>::allocate
	mov	DWORD PTR __Newvec$[ebp], eax

; 872  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

	mov	edx, DWORD PTR __Whereoff$[ebp]
	mov	eax, DWORD PTR __Newvec$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+8]
	mov	DWORD PTR __Constructed_last$[ebp], ecx

; 873  :         pointer _Constructed_first      = _Constructed_last;

	mov	edx, DWORD PTR __Constructed_last$[ebp]
	mov	DWORD PTR __Constructed_first$[ebp], edx

; 874  : 
; 875  :         _TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 876  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Whereoff$[ebp]
	mov	edx, DWORD PTR __Newvec$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	push	eax
	call	??$_Unfancy@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$construct@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::construct<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>
	add	esp, 12					; 0000000cH

; 877  :         _Constructed_first = _Newvec + _Whereoff;

	mov	edx, DWORD PTR __Whereoff$[ebp]
	mov	eax, DWORD PTR __Newvec$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR __Constructed_first$[ebp], ecx

; 878  : 
; 879  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR __Whereptr$[ebp]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN4@Emplace_re

; 880  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 881  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::edge *,std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 16					; 00000010H

; 882  :             } else {
; 883  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 884  :             }
; 885  :         } else { // provide basic guarantee

	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 886  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	eax, DWORD PTR __Whereptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::edge *,std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 16					; 00000010H

; 887  :             _Constructed_first = _Newvec;

	mov	eax, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR __Constructed_first$[ebp], eax

; 888  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Whereoff$[ebp]
	mov	eax, DWORD PTR __Newvec$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8+8]
	push	ecx
	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Whereptr$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAUedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::edge *,std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 16					; 00000010H
$LN5@Emplace_re:
	jmp	SHORT $LN7@Emplace_re
__catch$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$0:

; 889  :         }
; 890  :         _CATCH_ALL
; 891  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Constructed_last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Constructed_first$[ebp]
	push	ecx
	call	??$_Destroy_range@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 12					; 0000000cH

; 892  :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	edx, DWORD PTR __Newcapacity$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newvec$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUedge@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::edge>::deallocate

; 893  :         _RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 894  :         _CATCH_END

	mov	eax, $LN10@Emplace_re
	ret	0
$LN7@Emplace_re:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$1
$LN10@Emplace_re:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$1:

; 895  : 
; 896  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	ecx, DWORD PTR __Newcapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newvec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_array@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXQAUedge@?A0x28cf8a89@detail@luabind@@II@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Change_array

; 897  :         return _Newvec + _Whereoff;

	mov	ecx, DWORD PTR __Whereoff$[ebp]
	mov	edx, DWORD PTR __Newvec$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
$LN6@Emplace_re:

; 898  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_reallocate<luabind::detail::`anonymous namespace'::edge>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Move_backward_unchecked@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Move_backward_unchecked@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z PROC ; std::_Move_backward_unchecked<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>, COMDAT

; 4390 : _CONSTEXPR20 _BidIt2 _Move_backward_unchecked(_BidIt1 _First, _BidIt1 _Last, _BidIt2 _Dest) {

	push	ebp
	mov	ebp, esp

; 4391 :     // move [_First, _Last) backwards to [..., _Dest)
; 4392 :     // note: _Move_backward_unchecked has callers other than the move_backward family
; 4393 :     if constexpr (_Iter_move_cat<_BidIt1, _BidIt2>::_Bitcopy_assignable) {
; 4394 : #if _HAS_CXX20
; 4395 :         if (!_STD is_constant_evaluated())
; 4396 : #endif // _HAS_CXX20
; 4397 :         {
; 4398 :             return _Copy_backward_memmove(_First, _Last, _Dest);

	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_backward_memmove@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z ; std::_Copy_backward_memmove<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@Move_backw
$LN2@Move_backw:

; 4399 :         }
; 4400 :     }
; 4401 : 
; 4402 :     while (_First != _Last) {

	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Move_backw

; 4403 :         *--_Dest = _STD move(*--_Last);

	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 8
	mov	DWORD PTR __Last$[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	sub	edx, 8
	mov	DWORD PTR __Dest$[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$move@AAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::edge &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx

; 4404 :     }

	jmp	SHORT $LN2@Move_backw
$LN3@Move_backw:

; 4405 : 
; 4406 :     return _Dest;

	mov	eax, DWORD PTR __Dest$[ebp]
$LN1@Move_backw:

; 4407 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Move_backward_unchecked@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z ENDP ; std::_Move_backward_unchecked<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$_Unfancy@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z PROC ; std::_Unfancy<luabind::detail::`anonymous namespace'::edge>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp

; 266  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 267  : }

	pop	ebp
	ret	0
??$_Unfancy@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ENDP ; std::_Unfancy<luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$construct@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::construct<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>, COMDAT

; 675  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 676  : #if _HAS_CXX20
; 677  :         if (_STD is_constant_evaluated()) {
; 678  :             _STD construct_at(_Ptr, _STD forward<_Types>(_Args)...);
; 679  :         } else
; 680  : #endif // _HAS_CXX20
; 681  :         {
; 682  :             ::new (_Voidify_iter(_Ptr)) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Voidify_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAXPAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Voidify_iter<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 683  :         }
; 684  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::construct<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z PROC ; std::addressof<luabind::detail::`anonymous namespace'::edge>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ENDP ; std::addressof<luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
_<_Vals_0>$ = 12					; size = 4
??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> ><luabind::detail::`anonymous namespace'::edge>, COMDAT
; _this$ = ecx

; 1974 :         : _Al(_Al_) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax], ecx

; 1975 :         _Traits::construct(_Al, _STD addressof(_Get_value()), _STD forward<_Args>(_Vals)...);

	mov	edx, DWORD PTR _<_Vals_0>$[ebp]
	push	edx
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_value@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUedge@?A0x28cf8a89@detail@luabind@@XZ ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Get_value
	push	eax
	call	??$addressof@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::addressof<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$construct@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::construct<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>
	add	esp, 12					; 0000000cH

; 1976 :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> ><luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::~_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >
; _this$ = ecx

; 1981 :     _CONSTEXPR20 ~_Alloc_temporary2() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1982 :         _Traits::destroy(_Al, _STD addressof(_Get_value()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_value@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUedge@?A0x28cf8a89@detail@luabind@@XZ ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Get_value
	push	eax
	call	??$addressof@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::addressof<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$destroy@Uedge@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::destroy<luabind::detail::`anonymous namespace'::edge>
	add	esp, 8

; 1983 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::~_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_value@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUedge@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Get_value
; _this$ = ecx

; 1962 :     _NODISCARD _CONSTEXPR20 value_type& _Get_value() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1963 :         return _Value;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4

; 1964 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_value@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUedge@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Get_value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUedge@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z
_TEXT	SEGMENT
__Result$ = -16						; size = 4
__Mylast$ = -12						; size = 4
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUedge@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_back_with_unused_capacity<luabind::detail::`anonymous namespace'::edge>, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 _Ty& _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 830  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 831  :         auto& _My_data   = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 832  :         pointer& _Mylast = _My_data._Mylast;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Mylast$[ebp], ecx

; 833  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 834  :         if constexpr (conjunction_v<is_nothrow_constructible<_Ty, _Valty...>,
; 835  :                           _Uses_default_construct<_Alloc, _Ty*, _Valty...>>) {
; 836  :             _ASAN_VECTOR_MODIFY(1);
; 837  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Construct_in_place@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@std@@YAXAAUedge@?A0x28cf8a89@detail@luabind@@$$QAU1234@@Z ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>
	add	esp, 8

; 838  :         } else {
; 839  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 840  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 841  :             _ASAN_VECTOR_RELEASE_GUARD;
; 842  :         }
; 843  : 
; 844  :         _Orphan_range(_Mylast, _Mylast);

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range

; 845  :         _Ty& _Result = *_Mylast;

	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Result$[ebp], ecx

; 846  :         ++_Mylast;

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 8
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [ecx], eax

; 847  : 
; 848  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 849  :     }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back_with_unused_capacity@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUedge@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_back_with_unused_capacity<luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z PROC ; std::forward<luabind::detail::`anonymous namespace'::edge>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ENDP ; std::forward<luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT

; 369  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 370  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 371  :         _Destroy_in_place(_Ptr->_Left);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4

; 372  :         _Destroy_in_place(_Ptr->_Parent);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4

; 373  :         _Destroy_in_place(_Ptr->_Right);

	mov	edx, DWORD PTR __Ptr$[ebp]
	add	edx, 8
	push	edx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *>
	add	esp, 4

; 374  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 375  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT

; 378  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 379  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 380  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$addressof@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@QAU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::destroy<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >
	add	esp, 8

; 381  :         _Freenode0(_Al, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
	add	esp, 8

; 382  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@0@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>, COMDAT

; 723  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 724  :     // assign _New_val to _Val, return previous _Val
; 725  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 726  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 727  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 728  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Lower_bound_duplicate@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Bound$ = 8						; size = 4
__Keyval$ = 12						; size = 4
??$_Lower_bound_duplicate@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Lower_bound_duplicate<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >, COMDAT
; _this$ = ecx

; 1590 :     bool _Lower_bound_duplicate(const _Nodeptr _Bound, const _Keyty& _Keyval) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1591 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

	mov	eax, DWORD PTR __Bound$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN3@Lower_boun
	mov	edx, DWORD PTR __Bound$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	??$_Kfn@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0>::_Kfn<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABV345@$0A@@std@@YA_NABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@1@Z ; std::_Debug_lt_pred<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,0>
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@Lower_boun
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@Lower_boun
$LN3@Lower_boun:
	mov	DWORD PTR tv78[ebp], 0
$LN4@Lower_boun:
	mov	al, BYTE PTR tv78[ebp]

; 1592 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Lower_bound_duplicate@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Lower_bound_duplicate<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Find_lower_bound@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z
_TEXT	SEGMENT
__Trynode$ = -32					; size = 4
__Result$ = -24						; size = 12
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
??$_Find_lower_bound@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find_lower_bound<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >, COMDAT
; _this$ = ecx

; 1595 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1596 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1597 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

	mov	eax, DWORD PTR __Scary$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Result$[ebp], edx
	mov	DWORD PTR __Result$[ebp+4], 0
	mov	eax, DWORD PTR __Scary$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Result$[ebp+8], ecx

; 1598 :         _Nodeptr _Trynode = _Result._Location._Parent;

	mov	edx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR __Trynode$[ebp], edx
$LN2@Find_lower:

; 1599 :         while (!_Trynode->_Isnil) {

	mov	eax, DWORD PTR __Trynode$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN3@Find_lower

; 1600 :             _Result._Location._Parent = _Trynode;

	mov	edx, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Result$[ebp], edx

; 1601 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Trynode$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	??$_Kfn@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@SAABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0>::_Kfn<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getcomp
	push	eax
	call	??$_Debug_lt_pred@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@ABV345@$0A@@std@@YA_NABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@1@Z ; std::_Debug_lt_pred<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const &,0>
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@Find_lower

; 1602 :                 _Result._Location._Child = _Tree_child::_Right;

	mov	DWORD PTR __Result$[ebp+4], 0

; 1603 :                 _Trynode                 = _Trynode->_Right;

	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Trynode$[ebp], ecx

; 1604 :             } else {

	jmp	SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1605 :                 _Result._Location._Child = _Tree_child::_Left;

	mov	DWORD PTR __Result$[ebp+4], 1

; 1606 :                 _Result._Bound           = _Trynode;

	mov	edx, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Result$[ebp+8], edx

; 1607 :                 _Trynode                 = _Trynode->_Left;

	mov	eax, DWORD PTR __Trynode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$[ebp], ecx
$LN5@Find_lower:

; 1608 :             }
; 1609 :         }

	jmp	SHORT $LN2@Find_lower
$LN3@Find_lower:

; 1610 : 
; 1611 :         return _Result;

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __Result$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __Result$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR __Result$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1612 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Find_lower
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN9@Find_lower:
	DD	1
	DD	$LN8@Find_lower
$LN8@Find_lower:
	DD	-24					; ffffffe8H
	DD	12					; 0000000cH
	DD	$LN7@Find_lower
$LN7@Find_lower:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
??$_Find_lower_bound@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find_lower_bound<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??$?0$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI0ABHABUnull_type@12@222222@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
_t1$ = 8						; size = 4
_t2$ = 12						; size = 4
_t3$ = 16						; size = 4
_t4$ = 20						; size = 4
_t5$ = 24						; size = 4
_t6$ = 28						; size = 4
_t7$ = 32						; size = 4
_t8$ = 36						; size = 4
_t9$ = 40						; size = 4
_t10$ = 44						; size = 4
??$?0$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI0ABHABUnull_type@12@222222@Z PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > ><unsigned int const ,unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >, COMDAT
; _this$ = ecx

; 304  :       {}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 302  :     : head (t1),

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 303  :       tail (t2, t3, t4, t5, t6, t7, t8, t9, t10, detail::cnull())

	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T1[ebp], al
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _t10$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t9$[ebp]
	push	edx
	mov	eax, DWORD PTR _t8$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t7$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t6$[ebp]
	push	edx
	mov	eax, DWORD PTR _t5$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t4$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t3$[ebp]
	push	edx
	mov	eax, DWORD PTR _t2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABIABHABUnull_type@12@2222222@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> ><unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >

; 304  :       {}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
??$?0$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI0ABHABUnull_type@12@222222@Z ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > ><unsigned int const ,unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
_TEXT	SEGMENT
__Constructed_first$ = -64				; size = 4
__Constructed_last$ = -60				; size = 4
__Newvec$ = -56						; size = 4
__Newcapacity$ = -52					; size = 4
__Newsize$ = -48					; size = 4
__Oldsize$ = -44					; size = 4
__Whereoff$ = -40					; size = 4
__Mylast$ = -36						; size = 4
__Myfirst$ = -32					; size = 4
__My_data$ = -28					; size = 4
__Al$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_reallocate<luabind::detail::`anonymous namespace'::vertex>, COMDAT
; _this$ = ecx

; 852  :     _CONSTEXPR20 pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 48					; 00000030H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 853  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 854  :         _Alty& _Al        = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 855  :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 856  :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 857  :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 858  : 
; 859  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 860  : 
; 861  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR __Whereptr$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR __Whereoff$[ebp], eax

; 862  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, DWORD PTR [eax]
	mov	eax, ecx
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR __Oldsize$[ebp], eax

; 863  : 
; 864  :         if (_Oldsize == max_size()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::max_size
	cmp	DWORD PTR __Oldsize$[ebp], eax
	jne	SHORT $LN2@Emplace_re

; 865  :             _Xlength();

	call	?_Xlength@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@CAXXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Xlength
$LN2@Emplace_re:

; 866  :         }
; 867  : 
; 868  :         const size_type _Newsize     = _Oldsize + 1;

	mov	edx, DWORD PTR __Oldsize$[ebp]
	add	edx, 1
	mov	DWORD PTR __Newsize$[ebp], edx

; 869  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Calculate_growth
	mov	DWORD PTR __Newcapacity$[ebp], eax

; 870  : 
; 871  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	ecx, DWORD PTR __Newcapacity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::allocate
	mov	DWORD PTR __Newvec$[ebp], eax

; 872  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

	imul	edx, DWORD PTR __Whereoff$[ebp], 20
	mov	eax, DWORD PTR __Newvec$[ebp]
	lea	ecx, DWORD PTR [eax+edx+20]
	mov	DWORD PTR __Constructed_last$[ebp], ecx

; 873  :         pointer _Constructed_first      = _Constructed_last;

	mov	edx, DWORD PTR __Constructed_last$[ebp]
	mov	DWORD PTR __Constructed_first$[ebp], edx

; 874  : 
; 875  :         _TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 876  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	imul	ecx, DWORD PTR __Whereoff$[ebp], 20
	add	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	call	??$_Unfancy@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$construct@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::construct<luabind::detail::`anonymous namespace'::vertex,luabind::detail::A0x28cf8a89::vertex>
	add	esp, 12					; 0000000cH

; 877  :         _Constructed_first = _Newvec + _Whereoff;

	imul	eax, DWORD PTR __Whereoff$[ebp], 20
	add	eax, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR __Constructed_first$[ebp], eax

; 878  : 
; 879  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR __Whereptr$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@Emplace_re

; 880  :             if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 881  :                 _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::vertex *,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 16					; 00000010H

; 882  :             } else {
; 883  :                 _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 884  :             }
; 885  :         } else { // provide basic guarantee

	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 886  :             _Uninitialized_move(_Myfirst, _Whereptr, _Newvec, _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Whereptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::vertex *,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 16					; 00000010H

; 887  :             _Constructed_first = _Newvec;

	mov	edx, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR __Constructed_first$[ebp], edx

; 888  :             _Uninitialized_move(_Whereptr, _Mylast, _Newvec + _Whereoff + 1, _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	imul	ecx, DWORD PTR __Whereoff$[ebp], 20
	mov	edx, DWORD PTR __Newvec$[ebp]
	lea	eax, DWORD PTR [edx+ecx+20]
	push	eax
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Whereptr$[ebp]
	push	eax
	call	??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::vertex *,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 16					; 00000010H
$LN5@Emplace_re:
	jmp	SHORT $LN7@Emplace_re
__catch$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$0:

; 889  :         }
; 890  :         _CATCH_ALL
; 891  :         _Destroy_range(_Constructed_first, _Constructed_last, _Al);

	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Constructed_last$[ebp]
	push	edx
	mov	eax, DWORD PTR __Constructed_first$[ebp]
	push	eax
	call	??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 12					; 0000000cH

; 892  :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	ecx, DWORD PTR __Newcapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::deallocate

; 893  :         _RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 894  :         _CATCH_END

	mov	eax, $LN10@Emplace_re
	ret	0
$LN7@Emplace_re:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$1
$LN10@Emplace_re:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z$1:

; 895  : 
; 896  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newvec$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_array@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXQAUvertex@?A0x28cf8a89@detail@luabind@@II@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Change_array

; 897  :         return _Newvec + _Whereoff;

	imul	eax, DWORD PTR __Whereoff$[ebp], 20
	add	eax, DWORD PTR __Newvec$[ebp]
$LN6@Emplace_re:

; 898  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-68]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_reallocate<luabind::detail::`anonymous namespace'::vertex>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z
_TEXT	SEGMENT
__Result$ = -16						; size = 4
__Mylast$ = -12						; size = 4
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_back_with_unused_capacity<luabind::detail::`anonymous namespace'::vertex>, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 _Ty& _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 830  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 831  :         auto& _My_data   = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 832  :         pointer& _Mylast = _My_data._Mylast;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Mylast$[ebp], ecx

; 833  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 834  :         if constexpr (conjunction_v<is_nothrow_constructible<_Ty, _Valty...>,
; 835  :                           _Uses_default_construct<_Alloc, _Ty*, _Valty...>>) {
; 836  :             _ASAN_VECTOR_MODIFY(1);
; 837  :             _Construct_in_place(*_Mylast, _STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$_Construct_in_place@Uvertex@?A0x28cf8a89@detail@luabind@@U1234@@std@@YAXAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU1234@@Z ; std::_Construct_in_place<luabind::detail::`anonymous namespace'::vertex,luabind::detail::A0x28cf8a89::vertex>
	add	esp, 8

; 838  :         } else {
; 839  :             _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Mylast - _My_data._Myfirst) + 1);
; 840  :             _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);
; 841  :             _ASAN_VECTOR_RELEASE_GUARD;
; 842  :         }
; 843  : 
; 844  :         _Orphan_range(_Mylast, _Mylast);

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range

; 845  :         _Ty& _Result = *_Mylast;

	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Result$[ebp], ecx

; 846  :         ++_Mylast;

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [ecx], eax

; 847  : 
; 848  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 849  :     }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back_with_unused_capacity@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_back_with_unused_capacity<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 977  : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 978  :     // deallocate a plain pointer using an allocator
; 979  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 980  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 981  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	add	esp, 12					; 0000000cH

; 982  :     } else {
; 983  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 984  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 985  :     }
; 986  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
tv83 = -40						; size = 4
$T1 = -36						; size = 4
$T2 = -32						; size = 12
__Result$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::emplace<std::pair<luabind::type_id,unsigned int> >, COMDAT
; _this$ = ecx

; 1029 :     pair<iterator, bool> emplace(_Valtys&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1030 :         const auto _Result = _Emplace(_STD forward<_Valtys>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z ; std::forward<std::pair<luabind::type_id,unsigned int> >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Emplace<std::pair<luabind::type_id,unsigned int> >

; 1031 :         return {iterator(_Result.first, _Get_scary()), _Result.second};

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
	push	eax
	mov	edx, DWORD PTR __Result$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z
	mov	DWORD PTR tv83[ebp], eax
	lea	eax, DWORD PTR __Result$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR tv83[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@1@AB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool const &,0>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1032 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@emplace
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@emplace:
	DD	1
	DD	$LN7@emplace
$LN7@emplace:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN6@emplace
$LN6@emplace:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
??$emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::emplace<std::pair<luabind::type_id,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z PROC ; std::forward<std::pair<luabind::type_id,unsigned int> >, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z ENDP ; std::forward<std::pair<luabind::type_id,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0ABVtype_id@luabind@@AAI$0A@@?$pair@Vtype_id@luabind@@I@std@@QAE@ABVtype_id@luabind@@AAI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0ABVtype_id@luabind@@AAI$0A@@?$pair@Vtype_id@luabind@@I@std@@QAE@ABVtype_id@luabind@@AAI@Z PROC ; std::pair<luabind::type_id,unsigned int>::pair<luabind::type_id,unsigned int><luabind::type_id const &,unsigned int &,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABVtype_id@luabind@@@std@@YAABVtype_id@luabind@@ABV12@@Z ; std::forward<luabind::type_id const &>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAI@std@@YAAAIAAI@Z		; std::forward<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABVtype_id@luabind@@AAI$0A@@?$pair@Vtype_id@luabind@@I@std@@QAE@ABVtype_id@luabind@@AAI@Z ENDP ; std::pair<luabind::type_id,unsigned int>::pair<luabind::type_id,unsigned int><luabind::type_id const &,unsigned int &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__UMid$3 = -36						; size = 4
__Count2$4 = -32					; size = 4
__Count$ = -28						; size = 4
__UFirst$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
__Val$ = 36						; size = 4
__Pred$ = 40						; size = 1
??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z PROC ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge,std::less<void> >, COMDAT

; 6072 : _NODISCARD _CONSTEXPR20 _FwdIt lower_bound(_FwdIt _First, const _FwdIt _Last, const _Ty& _Val, _Pr _Pred) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 6073 :     // find first element not before _Val
; 6074 :     _Adl_verify_range(_First, _Last);

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@V12@@std@@YAXABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >
	add	esp, 8

; 6075 :     auto _UFirst                = _Get_unwrapped(_First);

	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Get_unwrapped@AAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@std@@YA?A_TAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 6076 :     _Iter_diff_t<_FwdIt> _Count = _STD distance(_UFirst, _Get_unwrapped(_Last));

	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@std@@YA?A_TABV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __UFirst$[ebp]
	push	ecx
	call	??$distance@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAHPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ; std::distance<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 8
	mov	DWORD PTR __Count$[ebp], eax
$LN2@lower_boun:

; 6077 : 
; 6078 :     while (0 < _Count) { // divide and conquer, find half that contains answer

	cmp	DWORD PTR __Count$[ebp], 0
	jle	SHORT $LN3@lower_boun

; 6079 :         const _Iter_diff_t<_FwdIt> _Count2 = _Count / 2;

	mov	eax, DWORD PTR __Count$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR __Count2$4[ebp], eax

; 6080 :         const auto _UMid                   = _STD next(_UFirst, _Count2);

	mov	edx, DWORD PTR __Count2$4[ebp]
	push	edx
	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	call	??$next@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@H@Z ; std::next<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 8
	mov	DWORD PTR __UMid$3[ebp], eax

; 6081 :         if (_Pred(*_UMid, _Val)) { // try top half

	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __UMid$3[ebp]
	push	edx
	lea	ecx, DWORD PTR __Pred$[ebp]
	call	??$?RAAUedge@?A0x28cf8a89@detail@luabind@@ABU0123@@?$less@X@std@@QBE_NAAUedge@?A0x28cf8a89@detail@luabind@@ABU2345@@Z ; std::less<void>::operator()<luabind::detail::`anonymous namespace'::edge &,luabind::detail::A0x28cf8a89::edge const &>
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@lower_boun

; 6082 :             _UFirst = _Next_iter(_UMid);

	mov	ecx, DWORD PTR __UMid$3[ebp]
	push	ecx
	call	??$_Next_iter@PAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Next_iter<luabind::detail::`anonymous namespace'::edge *>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 6083 :             _Count -= _Count2 + 1;

	mov	edx, DWORD PTR __Count2$4[ebp]
	add	edx, 1
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, edx
	mov	DWORD PTR __Count$[ebp], eax

; 6084 :         } else {

	jmp	SHORT $LN5@lower_boun
$LN4@lower_boun:

; 6085 :             _Count = _Count2;

	mov	ecx, DWORD PTR __Count2$4[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN5@lower_boun:

; 6086 :         }
; 6087 :     }

	jmp	SHORT $LN2@lower_boun
$LN3@lower_boun:

; 6088 : 
; 6089 :     _Seek_wrapped(_First, _UFirst);

	lea	edx, DWORD PTR __UFirst$[ebp]
	push	edx
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@AAPAUedge@?A0x28cf8a89@detail@luabind@@@std@@YAXAAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@AAPAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge * &>
	add	esp, 8

; 6090 :     return _First;

	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 6091 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@lower_boun
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@lower_boun:
	DD	1
	DD	$LN13@lower_boun
$LN13@lower_boun:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN11@lower_boun
$LN11@lower_boun:
	DB	95					; 0000005fH
	DB	85					; 00000055H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z ENDP ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge,std::less<void> >
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$auto_any_cast@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABUauto_any_base@01@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
??$auto_any_cast@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABUauto_any_base@01@@Z PROC ; boost::foreach_detail_::auto_any_cast<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<0> >, COMDAT

; 277  : {

	push	ebp
	mov	ebp, esp

; 278  :     return static_cast<auto_any<T> const &>(a).item;

	mov	eax, DWORD PTR _a$[ebp]

; 279  : }

	pop	ebp
	ret	0
??$auto_any_cast@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABUauto_any_base@01@@Z ENDP ; boost::foreach_detail_::auto_any_cast<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\range\end.hpp
;	COMDAT ??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_adl_barrier@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_r$ = 12						; size = 4
??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_adl_barrier@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z PROC ; boost::range_adl_barrier::end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >, COMDAT

; 105  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR $T1[ebp], 0

; 106  : #if !BOOST_WORKAROUND(BOOST_BORLANDC, BOOST_TESTED_AT(0x564))
; 107  :     using namespace range_detail;
; 108  : #endif
; 109  :     return range_end( r );

	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$range_end@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_detail@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z ; boost::range_detail::range_end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >
	add	esp, 8
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 110  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_adl_barrier@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z ENDP ; boost::range_adl_barrier::end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\range\begin.hpp
;	COMDAT ??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_adl_barrier@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_r$ = 12						; size = 4
??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_adl_barrier@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z PROC ; boost::range_adl_barrier::begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >, COMDAT

; 111  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR $T1[ebp], 0

; 112  : #if !BOOST_WORKAROUND(BOOST_BORLANDC, BOOST_TESTED_AT(0x564))
; 113  :     using namespace range_detail;
; 114  : #endif
; 115  :     return range_begin( r );

	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	??$range_begin@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_detail@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z ; boost::range_detail::range_begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >
	add	esp, 8
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 116  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_adl_barrier@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z ENDP ; boost::range_adl_barrier::begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$auto_any_cast@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABUauto_any_base@01@@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
??$auto_any_cast@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABUauto_any_base@01@@Z PROC ; boost::foreach_detail_::auto_any_cast<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *,boost::mpl::bool_<0> >, COMDAT

; 277  : {

	push	ebp
	mov	ebp, esp

; 278  :     return static_cast<auto_any<T> const &>(a).item;

	mov	eax, DWORD PTR _a$[ebp]

; 279  : }

	pop	ebp
	ret	0
??$auto_any_cast@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABUauto_any_base@01@@Z ENDP ; boost::foreach_detail_::auto_any_cast<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *,boost::mpl::bool_<0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\core\addressof.hpp
;	COMDAT ??$addressof@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@YAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV12@@Z
_TEXT	SEGMENT
_o$ = 8							; size = 4
??$addressof@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@YAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV12@@Z PROC ; boost::addressof<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp

; 40   :     return __builtin_addressof(o);

	mov	eax, DWORD PTR _o$[ebp]

; 41   : }

	pop	ebp
	ret	0
??$addressof@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@YAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV12@@Z ENDP ; boost::addressof<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0PADAAH$0A@@?$pair@PADH@std@@QAE@$$QAPADAAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0PADAAH$0A@@?$pair@PADH@std@@QAE@$$QAPADAAH@Z PROC	; std::pair<char *,int>::pair<char *,int><char *,int &,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@PAD@std@@YA$$QAPADAAPAD@Z	; std::forward<char *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAH@std@@YAAAHAAH@Z		; std::forward<int &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PADAAH$0A@@?$pair@PADH@std@@QAE@$$QAPADAAH@Z ENDP	; std::pair<char *,int>::pair<char *,int><char *,int &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@PAD@std@@YA$$QAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAD@std@@YA$$QAPADAAPAD@Z PROC		; std::forward<char *>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@PAD@std@@YA$$QAPADAAPAD@Z ENDP		; std::forward<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@PAX@std@@YA$$QAPAXAAPAX@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAX@std@@YA$$QAPAXAAPAX@Z PROC		; std::forward<void *>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@PAX@std@@YA$$QAPAXAAPAX@Z ENDP		; std::forward<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0ABQAXH$0A@@?$pair@PAXH@std@@QAE@ABQAX$$QAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0ABQAXH$0A@@?$pair@PAXH@std@@QAE@ABQAX$$QAH@Z PROC	; std::pair<void *,int>::pair<void *,int><void * const &,int,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABQAX@std@@YAABQAXABQAX@Z	; std::forward<void * const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@H@std@@YA$$QAHAAH@Z		; std::forward<int>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABQAXH$0A@@?$pair@PAXH@std@@QAE@ABQAX$$QAH@Z ENDP	; std::pair<void *,int>::pair<void *,int><void * const &,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@ABQAX@std@@YAABQAXABQAX@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAX@std@@YAABQAXABQAX@Z PROC		; std::forward<void * const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@ABQAX@std@@YAABQAXABQAX@Z ENDP		; std::forward<void * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
tv83 = -40						; size = 4
$T1 = -36						; size = 4
$T2 = -32						; size = 12
__Result$ = -16						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::emplace<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >, COMDAT
; _this$ = ecx

; 1029 :     pair<iterator, bool> emplace(_Valtys&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1030 :         const auto _Result = _Emplace(_STD forward<_Valtys>(_Vals)...);

	mov	eax, DWORD PTR _<_Vals_0>$[ebp]
	push	eax
	call	??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::forward<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Result$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Emplace<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >

; 1031 :         return {iterator(_Result.first, _Get_scary()), _Result.second};

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	push	eax
	mov	edx, DWORD PTR __Result$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z
	mov	DWORD PTR tv83[ebp], eax
	lea	eax, DWORD PTR __Result$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR tv83[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@AB_N$0A@@?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@$$QAV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@1@AB_N@Z ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool><std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool const &,0>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1032 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@emplace
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN8@emplace:
	DD	1
	DD	$LN7@emplace
$LN7@emplace:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN6@emplace
$LN6@emplace:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
??$emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::emplace<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z PROC ; std::forward<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ENDP ; std::forward<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@1@@Z PROC ; std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> ><boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@YA$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@AAV123@@Z ; std::forward<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@$$QAV012@@Z
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@U?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z ; std::forward<std::pair<int,int> >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+20], eax

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@1@@Z ENDP ; std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> ><boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@U?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z PROC ; std::forward<std::pair<int,int> >, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@U?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z ENDP ; std::forward<std::pair<int,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@YA$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@AAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@YA$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@AAV123@@Z PROC ; std::forward<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@YA$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@AAV123@@Z ENDP ; std::forward<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@AAI@std@@YAAAIAAI@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAI@std@@YAAAIAAI@Z PROC			; std::forward<unsigned int &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@AAI@std@@YAAAIAAI@Z ENDP			; std::forward<unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@AAH@std@@YAAAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAH@std@@YAAAHAAH@Z PROC			; std::forward<int &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@AAH@std@@YAAAHAAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@ABH@std@@YAABHABH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABH@std@@YAABHABH@Z PROC			; std::forward<int const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@ABH@std@@YAABHABH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@ABVtype_id@luabind@@@std@@YAABVtype_id@luabind@@ABV12@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABVtype_id@luabind@@@std@@YAABVtype_id@luabind@@ABV12@@Z PROC ; std::forward<luabind::type_id const &>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@ABVtype_id@luabind@@@std@@YAABVtype_id@luabind@@ABV12@@Z ENDP ; std::forward<luabind::type_id const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 536870911 ; 1fffffffH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
$LN3@Get_size_o:

; 66   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 231  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 232  : #if _HAS_CXX20
; 233  :     if (_STD is_constant_evaluated()) {
; 234  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 235  :     } else
; 236  : #endif // _HAS_CXX20
; 237  :     {
; 238  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 239  :     }
; 240  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp

; 266  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 267  : }

	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
__Al$ = 8						; size = 4
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z PROC ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT

; 342  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 343  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buyheadnode call");
; 344  :         const auto _Pnode = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 345  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
	add	esp, 8

; 346  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	lea	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
	push	eax
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
	add	esp, 8

; 347  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	add	edx, 8
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
	add	esp, 8

; 348  :         _Pnode->_Color = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+12], 1

; 349  :         _Pnode->_Isnil = true;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [ecx+13], 1

; 350  :         return _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]

; 351  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Buyheadnod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@Buyheadnod:
	DD	1
	DD	$LN4@Buyheadnod
$LN4@Buyheadnod:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Buyheadnod
$LN3@Buyheadnod:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
__Al$ = 8						; size = 4
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT

; 342  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 343  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buyheadnode call");
; 344  :         const auto _Pnode = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 345  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>
	add	esp, 8

; 346  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	lea	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
	push	eax
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>
	add	esp, 8

; 347  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	add	edx, 8
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * const &>
	add	esp, 8

; 348  :         _Pnode->_Color = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+12], 1

; 349  :         _Pnode->_Isnil = true;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [ecx+13], 1

; 350  :         return _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]

; 351  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Buyheadnod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@Buyheadnod:
	DD	1
	DD	$LN4@Buyheadnod
$LN4@Buyheadnod:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Buyheadnod
$LN3@Buyheadnod:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1339 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1340 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Container_

; 1341 :             _Delete_plain_internal(_Al, _Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
$LN3@Container_:

; 1342 :         }
; 1343 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
__Mycont$ = 12						; size = 4
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1325 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Basic_container_proxy_ptr12@std@@IAE@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1326 :         // create a new _Container_proxy pointing at _Mycont
; 1327 :         _Ptr = _Unfancy(_Al_.allocate(1));

	push	1
	mov	ecx, DWORD PTR __Al_$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 1328 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	eax, DWORD PTR __Mycont$[ebp]
	push	eax
	call	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8

; 1329 :         _Mycont._Myproxy = _Ptr;

	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 1330 :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 223  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp

; 224  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 225  : #if defined(_M_IX86) || defined(_M_X64)
; 226  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 227  :     if (!_STD is_constant_evaluated())
; 228  : #endif // _HAS_CXX20
; 229  :     {
; 230  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 231  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 232  :         }
; 233  :     }
; 234  : #endif // defined(_M_IX86) || defined(_M_X64)
; 235  : 
; 236  :     if (_Bytes != 0) {

	cmp	DWORD PTR __Bytes$[ebp], 0
	je	SHORT $LN3@Allocate

; 237  :         return _Traits::_Allocate(_Bytes);

	mov	ecx, DWORD PTR __Bytes$[ebp]
	push	ecx
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 238  :     }
; 239  : 
; 240  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 241  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BE@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0BE@@std@@YAII@Z PROC		; std::_Get_size_of_n<20>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 214748364 ; 0cccccccH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 214748364	; 0cccccccH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	eax, DWORD PTR __Count$[ebp], 20
$LN3@Get_size_o:

; 66   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0BE@@std@@YAII@Z ENDP		; std::_Get_size_of_n<20>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 244  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 245  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 246  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 247  :     if (_STD is_constant_evaluated()) {
; 248  :         ::operator delete(_Ptr);
; 249  :     } else
; 250  : #endif // _HAS_CXX20
; 251  :     {
; 252  : #if defined(_M_IX86) || defined(_M_X64)
; 253  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 254  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
	add	esp, 8
$LN2@Deallocate:

; 255  :         }
; 256  : #endif // defined(_M_IX86) || defined(_M_X64)
; 257  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, DWORD PTR __Bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 258  :     }
; 259  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1><>, COMDAT
; _this$ = ecx

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1><std::less<luabind::type_id> const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx

; 1380 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z ; std::forward<std::less<luabind::type_id> const &>
	add	esp, 4
	mov	ecx, DWORD PTR _<_Val2_0>$[ebp]
	push	ecx
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
	add	esp, 4
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1><>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1><std::less<luabind::type_id> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > const >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z PROC ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::edge> >, COMDAT

; 944  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	push	ebp
	mov	ebp, esp

; 945  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 946  :     using _Ty = typename _Alloc::value_type;
; 947  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 948  :         for (; _First != _Last; ++_First) {
; 949  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 950  :         }
; 951  :     }
; 952  : }

	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::edge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1><>, COMDAT
; _this$ = ecx

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1>::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1><std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx

; 1380 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@@std@@YAABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@0@ABU10@@Z ; std::forward<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &>
	add	esp, 4
	mov	ecx, DWORD PTR _<_Val2_0>$[ebp]
	push	ecx
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
	add	esp, 4
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1><>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1>::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1><std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > const >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z
_TEXT	SEGMENT
$T2 = -44						; size = 4
__Backout$ = -36					; size = 12
__ULast$ = -20						; size = 4
__UFirst$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z PROC ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::vertex *,std::allocator<luabind::detail::`anonymous namespace'::vertex> >, COMDAT

; 1740 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1741 :     // move [_First, _Last) to raw _Dest, using _Al
; 1742 :     // note: only called internally from elsewhere in the STL
; 1743 :     using _Ptrval     = typename _Alloc::value_type*;
; 1744 :     auto _UFirst      = _Get_unwrapped(_First);

	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Get_unwrapped@ABQAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUvertex@?A0x28cf8a89@detail@luabind@@@Z ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::vertex * const &>
	add	esp, 4
	mov	DWORD PTR __UFirst$[ebp], eax

; 1745 :     const auto _ULast = _Get_unwrapped(_Last);

	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Get_unwrapped@ABQAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA?A_TABQAUvertex@?A0x28cf8a89@detail@luabind@@@Z ; std::_Get_unwrapped<luabind::detail::`anonymous namespace'::vertex * const &>
	add	esp, 4
	mov	DWORD PTR __ULast$[ebp], eax

; 1746 :     if constexpr (conjunction_v<bool_constant<_Iter_move_cat<decltype(_UFirst), _Ptrval>::_Bitcopy_constructible>,
; 1747 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1748 : #if _HAS_CXX20
; 1749 :         if (!_STD is_constant_evaluated())
; 1750 : #endif // _HAS_CXX20
; 1751 :         {
; 1752 :             _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1753 :             return _Dest + (_ULast - _UFirst);
; 1754 :         }
; 1755 :     }
; 1756 : 
; 1757 :     _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUvertex@?A0x28cf8a89@detail@luabind@@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1758 :     for (; _UFirst != _ULast; ++_UFirst) {

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	ecx, DWORD PTR __UFirst$[ebp]
	add	ecx, 20					; 00000014H
	mov	DWORD PTR __UFirst$[ebp], ecx
$LN4@Uninitiali:
	mov	edx, DWORD PTR __UFirst$[ebp]
	cmp	edx, DWORD PTR __ULast$[ebp]
	je	SHORT $LN3@Uninitiali

; 1759 :         _Backout._Emplace_back(_STD move(*_UFirst));

	mov	eax, DWORD PTR __UFirst$[ebp]
	push	eax
	call	??$move@AAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::vertex &>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??$_Emplace_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_back<luabind::detail::`anonymous namespace'::vertex>

; 1760 :     }

	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1761 : 
; 1762 :     return _Backout._Release();

	lea	ecx, DWORD PTR __Backout$[ebp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEPAUvertex@?A0x28cf8a89@detail@luabind@@XZ ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Release
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Backout$[ebp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::~_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	mov	eax, DWORD PTR $T2[ebp]

; 1763 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Uninitiali
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@Uninitiali:
	DD	1
	DD	$LN9@Uninitiali
$LN9@Uninitiali:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN7@Uninitiali
$LN7@Uninitiali:
	DB	95					; 0000005fH
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z$0:
	lea	ecx, DWORD PTR __Backout$[ebp]
	jmp	??1?$_Uninitialized_backout_al@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::~_Uninitialized_backout_al<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ENDP ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::vertex *,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT

; 64   :     (min) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Right < _Left)) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 65   :     // return smaller of _Left and _Right
; 66   :     return _Right < _Left ? _Right : _Left;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@min
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@min:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]

; 67   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z PROC ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::vertex> >, COMDAT

; 944  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 945  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 946  :     using _Ty = typename _Alloc::value_type;
; 947  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 948  :         for (; _First != _Last; ++_First) {

	jmp	SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR __First$[ebp], eax
$LN4@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN5@Destroy_ra

; 949  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Unfancy@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$destroy@Uvertex@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@QAUvertex@?A0x28cf8a89@detail@luabind@@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::destroy<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 8

; 950  :         }

	jmp	SHORT $LN2@Destroy_ra
$LN5@Destroy_ra:

; 951  :     }
; 952  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
;	COMDAT ??$_Emplace_back_internal@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
tv161 = -20						; size = 4
tv84 = -16						; size = 4
__Block$ = -12						; size = 4
__Newoff$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back_internal@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Emplace_back_internal<luabind::detail::`anonymous namespace'::queue_entry>, COMDAT
; _this$ = ecx

; 1108 :     void _Emplace_back_internal(_Tys&&... _Vals) {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1109 :         if ((_Myoff() + _Mysize()) % _Block_size == 0 && _Mapsize() <= (_Mysize() + _Block_size) / _Block_size) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	add	ecx, DWORD PTR [eax]
	mov	eax, ecx
	xor	edx, edx
	mov	ecx, 1
	div	ecx
	test	edx, edx
	jne	SHORT $LN2@Emplace_ba
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	mov	edx, DWORD PTR [eax]
	add	edx, 1
	cmp	DWORD PTR [esi], edx
	ja	SHORT $LN2@Emplace_ba

; 1110 :             _Growmap(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Growmap@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Growmap
$LN2@Emplace_ba:

; 1111 :         }
; 1112 :         _Myoff() &= _Mapsize() * _Block_size - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	DWORD PTR tv84[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	sub	eax, 1
	mov	ecx, DWORD PTR tv84[ebp]
	and	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR tv84[ebp]
	mov	DWORD PTR [edx], eax

; 1113 :         size_type _Newoff = _Myoff() + _Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	add	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Newoff$[ebp], ecx

; 1114 :         size_type _Block  = _Getblock(_Newoff);

	mov	edx, DWORD PTR __Newoff$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 1115 :         if (_Map()[_Block] == nullptr) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Block$[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	jne	SHORT $LN3@Emplace_ba

; 1116 :             _Map()[_Block] = _Getal().allocate(_Block_size);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	mov	ecx, eax
	call	?allocate@?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::allocate
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Block$[ebp]
	mov	DWORD PTR [edx+eax*4], esi
$LN3@Emplace_ba:

; 1117 :         }
; 1118 : 
; 1119 :         _Alty_traits::construct(

	mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
	push	ecx
	call	??$forward@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::queue_entry>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Newoff$[ebp]
	xor	edx, edx
	mov	esi, 1
	div	esi
	imul	edx, edx, 12
	mov	eax, DWORD PTR __Block$[ebp]
	add	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	??$_Unfancy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::queue_entry>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	push	eax
	call	??$construct@Uqueue_entry@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::construct<luabind::detail::`anonymous namespace'::queue_entry,luabind::detail::A0x28cf8a89::queue_entry>
	add	esp, 12					; 0000000cH

; 1120 :             _Getal(), _Unfancy(_Map()[_Block] + _Newoff % _Block_size), _STD forward<_Tys>(_Vals)...);
; 1121 : 
; 1122 :         ++_Mysize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	mov	DWORD PTR tv161[ebp], eax
	mov	ecx, DWORD PTR tv161[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv161[ebp]
	mov	DWORD PTR [eax], edx

; 1123 :     }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_back_internal@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Emplace_back_internal<luabind::detail::`anonymous namespace'::queue_entry>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::operator*
; _this$ = ecx

; 169  :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 170  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEABUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::operator*

; 171  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
__Off$ = -12						; size = 4
__Block$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEABUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::operator*
; _this$ = ecx

; 45   :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         _Size_type _Block = _Mycont->_Getblock(_Myoff);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock
	mov	DWORD PTR __Block$[ebp], eax

; 47   :         _Size_type _Off   = _Myoff % _Block_size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	xor	edx, edx
	mov	ecx, 1
	div	ecx
	mov	DWORD PTR __Off$[ebp], edx

; 48   :         return _Mycont->_Map[_Block][_Off];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	imul	eax, DWORD PTR __Off$[ebp], 12
	mov	edx, DWORD PTR __Block$[ebp]
	add	eax, DWORD PTR [ecx+edx*4]

; 49   :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEABUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Pdeque$ = 12						; size = 4
??0?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z PROC ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >
; _this$ = ecx

; 43   :         : _Mycont(static_cast<const _Mydeque*>(_Pdeque)), _Myoff(_Off) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pdeque$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Deque_unchecked_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z ENDP ; std::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::_Deque_unchecked_const_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$destroy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::destroy<luabind::detail::`anonymous namespace'::queue_entry>, COMDAT

; 687  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 688  : #if _HAS_CXX20
; 689  :         _STD destroy_at(_Ptr);
; 690  : #else // _HAS_CXX20
; 691  :         _Ptr->~_Uty();
; 692  : #endif // _HAS_CXX20
; 693  :     }

	pop	ebp
	ret	0
??$destroy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::destroy<luabind::detail::`anonymous namespace'::queue_entry>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$_Unfancy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAU1234@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAU1234@@Z PROC ; std::_Unfancy<luabind::detail::`anonymous namespace'::queue_entry>, COMDAT

; 265  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp

; 266  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 267  : }

	pop	ebp
	ret	0
??$_Unfancy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ENDP ; std::_Unfancy<luabind::detail::`anonymous namespace'::queue_entry>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Destroy_in_place<luabind::detail::`anonymous namespace'::queue_entry *>, COMDAT

; 296  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp

; 297  :     if constexpr (is_array_v<_Ty>) {
; 298  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 299  :     } else {
; 300  :         _Obj.~_Ty();
; 301  :     }
; 302  : }

	pop	ebp
	ret	0
??$_Destroy_in_place@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Destroy_in_place<luabind::detail::`anonymous namespace'::queue_entry *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::allocator<luabind::detail::`anonymous namespace'::queue_entry *><luabind::detail::`anonymous namespace'::queue_entry>, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::allocator<luabind::detail::`anonymous namespace'::queue_entry *><luabind::detail::`anonymous namespace'::queue_entry>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@$$CBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@ABU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@ABU10@@Z PROC ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > const >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@$$CBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@ABU10@@Z ENDP ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z PROC ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ENDP ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\core\checked_delete.hpp
;	COMDAT ??$checked_delete@Vimpl@cast_graph@detail@luabind@@@boost@@YAXPAVimpl@cast_graph@detail@luabind@@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
$T1 = -4						; size = 4
_x$ = 8							; size = 4
??$checked_delete@Vimpl@cast_graph@detail@luabind@@@boost@@YAXPAVimpl@cast_graph@detail@luabind@@@Z PROC ; boost::checked_delete<luabind::detail::cast_graph::impl>, COMDAT

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 33   :     // intentionally complex - simplification causes regressions
; 34   :     typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];
; 35   :     (void) sizeof(type_must_be_complete);
; 36   :     delete x;

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@checked_de
	push	1
	mov	ecx, DWORD PTR $T1[ebp]
	call	??_Gimpl@cast_graph@detail@luabind@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN2@checked_de
$LN3@checked_de:
	mov	DWORD PTR tv68[ebp], 0
$LN2@checked_de:

; 37   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$checked_delete@Vimpl@cast_graph@detail@luabind@@@boost@@YAXPAVimpl@cast_graph@detail@luabind@@@Z ENDP ; boost::checked_delete<luabind::detail::cast_graph::impl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 750  :     void _Erase_head(_Alnode& _Al) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 751  :         this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >

; 753  :         _Alnode::value_type::_Freenode0(_Al, _Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 8

; 754  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@SAPAU?$pair@$$CBVtype_id@luabind@@I@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@SAPAU?$pair@$$CBVtype_id@luabind@@I@2@AAU32@@Z PROC ; std::pointer_traits<std::pair<luabind::type_id const ,unsigned int> *>::pointer_to, COMDAT

; 274  :     _NODISCARD static _CONSTEXPR20 pointer pointer_to(_Reftype _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 275  :         return _STD addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
	add	esp, 4

; 276  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@SAPAU?$pair@$$CBVtype_id@luabind@@I@2@AAU32@@Z ENDP ; std::pointer_traits<std::pair<luabind::type_id const ,unsigned int> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1><>, COMDAT
; _this$ = ecx

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ; std::allocator<luabind::detail::`anonymous namespace'::edge>::allocator<luabind::detail::`anonymous namespace'::edge>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::edge>, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
$T2 = -56						; size = 4
__Obj$3 = -48						; size = 12
__Al$4 = -32						; size = 4
__Oldlast$ = -28					; size = 4
__My_data$ = -24					; size = 4
__Whereptr$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
_<_Val_0>$ = 24						; size = 4
??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::emplace<luabind::detail::`anonymous namespace'::edge>, COMDAT
; _this$ = ecx

; 922  :     _CONSTEXPR20 iterator emplace(const_iterator _Where, _Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 923  :         // insert by perfectly forwarding _Val at _Where
; 924  :         const pointer _Whereptr = _Where._Ptr;

	mov	eax, DWORD PTR __Where$[ebp+8]
	mov	DWORD PTR __Whereptr$[ebp], eax

; 925  :         auto& _My_data          = _Mypair._Myval2;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], ecx

; 926  :         const pointer _Oldlast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Oldlast$[ebp], eax
$LN4@emplace:

; 927  : #if _ITERATOR_DEBUG_LEVEL == 2
; 928  :         _STL_VERIFY(

	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	push	ecx
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	cmp	esi, eax
	jne	SHORT $LN7@emplace
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR __Whereptr$[ebp]
	cmp	eax, DWORD PTR [edx+4]
	jb	SHORT $LN7@emplace
	mov	ecx, DWORD PTR __Oldlast$[ebp]
	cmp	ecx, DWORD PTR __Whereptr$[ebp]
	jb	SHORT $LN7@emplace
	jmp	SHORT $LN2@emplace
$LN7@emplace:
	push	OFFSET ??_C@_0CG@PHHCFCMA@vector?5emplace?5iterator?5outside@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	930					; 000003a2H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN14@emplace
	int	3
$LN14@emplace:
	push	0
	push	930					; 000003a2H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1FA@JJEJIKGE@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAm?$AAp?$AAl?$AAa?$AAc?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	eax, eax
	jne	SHORT $LN7@emplace
$LN2@emplace:
	xor	ecx, ecx
	jne	SHORT $LN4@emplace

; 929  :             _Where._Getcont() == _STD addressof(_My_data) && _Whereptr >= _My_data._Myfirst && _Oldlast >= _Whereptr,
; 930  :             "vector emplace iterator outside range");
; 931  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 932  : 
; 933  :         if (_Oldlast != _My_data._Myend) {

	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR __Oldlast$[ebp]
	cmp	eax, DWORD PTR [edx+12]
	je	$LN10@emplace

; 934  :             if (_Whereptr == _Oldlast) { // at back, provide strong guarantee

	mov	ecx, DWORD PTR __Whereptr$[ebp]
	cmp	ecx, DWORD PTR __Oldlast$[ebp]
	jne	SHORT $LN11@emplace

; 935  :                 _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_back_with_unused_capacity@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUedge@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_back_with_unused_capacity<luabind::detail::`anonymous namespace'::edge>

; 936  :             } else {

	jmp	$LN12@emplace
$LN11@emplace:

; 937  :                 auto& _Al = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	mov	DWORD PTR __Al$4[ebp], eax

; 938  :                 _Alloc_temporary2<_Alty> _Obj(_Al, _STD forward<_Valty>(_Val)...); // handle aliasing

	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$4[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Obj$3[ebp]
	call	??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> ><luabind::detail::`anonymous namespace'::edge>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 939  :                 // after constructing _Obj, provide basic guarantee
; 940  :                 _Orphan_range(_Whereptr, _Oldlast);

	mov	edx, DWORD PTR __Oldlast$[ebp]
	push	edx
	mov	eax, DWORD PTR __Whereptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range

; 941  :                 _ASAN_VECTOR_EXTEND_GUARD(static_cast<size_type>(_Oldlast - _My_data._Myfirst) + 1);
; 942  :                 _Alty_traits::construct(_Al, _Unfancy(_Oldlast), _STD move(_Oldlast[-1]));

	mov	ecx, 8
	imul	edx, ecx, -1
	add	edx, DWORD PTR __Oldlast$[ebp]
	push	edx
	call	??$move@AAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::edge &>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Oldlast$[ebp]
	push	eax
	call	??$_Unfancy@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$4[ebp]
	push	ecx
	call	??$construct@Uedge@?A0x28cf8a89@detail@luabind@@U1234@@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@QAUedge@?A0x28cf8a89@detail@luabind@@$$QAU3456@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::construct<luabind::detail::`anonymous namespace'::edge,luabind::detail::A0x28cf8a89::edge>
	add	esp, 12					; 0000000cH

; 943  :                 _ASAN_VECTOR_RELEASE_GUARD;
; 944  :                 ++_My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 8
	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 945  :                 _Move_backward_unchecked(_Whereptr, _Oldlast - 1, _Oldlast);

	mov	edx, DWORD PTR __Oldlast$[ebp]
	push	edx
	mov	eax, DWORD PTR __Oldlast$[ebp]
	sub	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Whereptr$[ebp]
	push	ecx
	call	??$_Move_backward_unchecked@PAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@00@Z ; std::_Move_backward_unchecked<luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *>
	add	esp, 12					; 0000000cH

; 946  :                 *_Whereptr = _STD move(_Obj._Get_value());

	lea	ecx, DWORD PTR __Obj$3[ebp]
	call	?_Get_value@?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUedge@?A0x28cf8a89@detail@luabind@@XZ ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Get_value
	push	eax
	call	??$move@AAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::edge &>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR __Whereptr$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax

; 947  :             }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Obj$3[ebp]
	call	??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::~_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >
$LN12@emplace:

; 948  : 
; 949  :             return _Make_iterator(_Whereptr);

	mov	edx, DWORD PTR __Whereptr$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iterator@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@QAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Make_iterator
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@emplace
$LN10@emplace:

; 950  :         }
; 951  : 
; 952  :         return _Make_iterator(_Emplace_reallocate(_Whereptr, _STD forward<_Valty>(_Val)...));

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Whereptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_reallocate@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUedge@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Emplace_reallocate<luabind::detail::`anonymous namespace'::edge>
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iterator@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@QAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Make_iterator
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@emplace:

; 953  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@emplace
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN22@emplace:
	DD	1
	DD	$LN21@emplace
$LN21@emplace:
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN19@emplace
$LN19@emplace:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z$1:
	lea	ecx, DWORD PTR __Obj$3[ebp]
	jmp	??1?$_Alloc_temporary2@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >::~_Alloc_temporary2<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::emplace<luabind::detail::`anonymous namespace'::edge>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$move@AAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z PROC ; std::move<luabind::detail::`anonymous namespace'::edge &>, COMDAT

; 1422 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1423 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1424 : }

	pop	ebp
	ret	0
??$move@AAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ENDP ; std::move<luabind::detail::`anonymous namespace'::edge &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >, COMDAT

; 252  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 253  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 254  : }

	pop	ebp
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT
; _this$ = ecx

; 750  :     void _Erase_head(_Alnode& _Al) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 751  :         this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 752  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >

; 753  :         _Alnode::value_type::_Freenode0(_Al, _Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
	add	esp, 8

; 754  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >, COMDAT
; _this$ = ecx

; 742  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@Erase_tree:

; 743  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	mov	eax, DWORD PTR __Rootnode$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN4@Erase_tree

; 744  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	edx, DWORD PTR __Rootnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >

; 745  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	lea	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	call	??$exchange@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> *,std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> * &>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
	add	esp, 8

; 746  :         }

	jmp	SHORT $LN2@Erase_tree
$LN4@Erase_tree:

; 747  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??$_Find@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z
_TEXT	SEGMENT
__Loc$ = -20						; size = 12
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
??$_Find@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >, COMDAT
; _this$ = ecx

; 1352 :     _NODISCARD _Nodeptr _Find(const _Other& _Keyval) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1353 :         const _Tree_find_result<_Nodeptr> _Loc = _Find_lower_bound(_Keyval);

	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Loc$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Find_lower_bound@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find_lower_bound<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >

; 1354 :         if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Loc$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Lower_bound_duplicate@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBE_NQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Lower_bound_duplicate<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Find

; 1355 :             return _Loc._Bound;

	mov	eax, DWORD PTR __Loc$[ebp+8]
	jmp	SHORT $LN1@Find
$LN2@Find:

; 1356 :         }
; 1357 : 
; 1358 :         return _Get_scary()->_Myhead;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	mov	eax, DWORD PTR [eax+4]
$LN1@Find:

; 1359 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Find
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@Find:
	DD	1
	DD	$LN5@Find
$LN5@Find:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN4@Find
$LN4@Find:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	0
??$_Find@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@ABU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@ABU32@@Z PROC ; std::pointer_traits<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > const *>::pointer_to, COMDAT

; 274  :     _NODISCARD static _CONSTEXPR20 pointer pointer_to(_Reftype _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 275  :         return _STD addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@ABU10@@Z ; std::addressof<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > const >
	add	esp, 4

; 276  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@ABU32@@Z ENDP ; std::pointer_traits<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > const *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??$?0$$CBI$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI00ABHABUnull_type@12@22222@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
_t1$ = 8						; size = 4
_t2$ = 12						; size = 4
_t3$ = 16						; size = 4
_t4$ = 20						; size = 4
_t5$ = 24						; size = 4
_t6$ = 28						; size = 4
_t7$ = 32						; size = 4
_t8$ = 36						; size = 4
_t9$ = 40						; size = 4
_t10$ = 44						; size = 4
??$?0$$CBI$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI00ABHABUnull_type@12@22222@Z PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > ><unsigned int const ,unsigned int const ,unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >, COMDAT
; _this$ = ecx

; 304  :       {}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 302  :     : head (t1),

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 303  :       tail (t2, t3, t4, t5, t6, t7, t8, t9, t10, detail::cnull())

	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T1[ebp], al
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _t10$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t9$[ebp]
	push	edx
	mov	eax, DWORD PTR _t8$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t7$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t6$[ebp]
	push	edx
	mov	eax, DWORD PTR _t5$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t4$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t3$[ebp]
	push	edx
	mov	eax, DWORD PTR _t2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI0ABHABUnull_type@12@222222@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > ><unsigned int const ,unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >

; 304  :       {}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
??$?0$$CBI$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI00ABHABUnull_type@12@22222@Z ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > ><unsigned int const ,unsigned int const ,unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1><>, COMDAT
; _this$ = ecx

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::allocator<luabind::detail::`anonymous namespace'::vertex>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0Uvertex@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0Uvertex@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::vertex>, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0Uvertex@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$_Emplace_one_at_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z
_TEXT	SEGMENT
__Mylast$ = -12						; size = 4
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Emplace_one_at_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_one_at_back<luabind::detail::`anonymous namespace'::vertex>, COMDAT
; _this$ = ecx

; 816  :     _CONSTEXPR20 _Ty& _Emplace_one_at_back(_Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 817  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 818  :         auto& _My_data   = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 819  :         pointer& _Mylast = _My_data._Mylast;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Mylast$[ebp], ecx

; 820  : 
; 821  :         if (_Mylast != _My_data._Myend) {

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [edx]
	cmp	ecx, DWORD PTR [eax+12]
	je	SHORT $LN2@Emplace_on

; 822  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_back_with_unused_capacity@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_back_with_unused_capacity<luabind::detail::`anonymous namespace'::vertex>
	jmp	SHORT $LN1@Emplace_on
$LN2@Emplace_on:

; 823  :         }
; 824  : 
; 825  :         return *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_reallocate@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEPAUvertex@?A0x28cf8a89@detail@luabind@@QAU2345@$$QAU2345@@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_reallocate<luabind::detail::`anonymous namespace'::vertex>
$LN1@Emplace_on:

; 826  :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Emplace_one_at_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_one_at_back<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z PROC ; std::forward<luabind::detail::`anonymous namespace'::vertex>, COMDAT

; 1411 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1412 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1413 : }

	pop	ebp
	ret	0
??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ENDP ; std::forward<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??$emplace_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?A_T$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$emplace_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?A_T$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::emplace_back<luabind::detail::`anonymous namespace'::vertex>, COMDAT
; _this$ = ecx

; 902  :     _CONSTEXPR20 decltype(auto) emplace_back(_Valty&&... _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 903  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 904  :         _Ty& _Result = _Emplace_one_at_back(_STD forward<_Valty>(_Val)...);

	mov	eax, DWORD PTR _<_Val_0>$[ebp]
	push	eax
	call	??$forward@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::forward<luabind::detail::`anonymous namespace'::vertex>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_one_at_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAUvertex@?A0x28cf8a89@detail@luabind@@$$QAU2345@@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Emplace_one_at_back<luabind::detail::`anonymous namespace'::vertex>
	mov	DWORD PTR __Result$[ebp], eax

; 905  : #if _HAS_CXX17
; 906  :         return _Result;
; 907  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 908  :         (void) _Result;
; 909  : #endif // _HAS_CXX17
; 910  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$emplace_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?A_T$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::emplace_back<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$move@AAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z PROC ; std::move<luabind::detail::`anonymous namespace'::vertex &>, COMDAT

; 1422 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1423 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1424 : }

	pop	ebp
	ret	0
??$move@AAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ENDP ; std::move<luabind::detail::`anonymous namespace'::vertex &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__New_proxy$ = -8					; size = 4
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1061 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1062 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	DWORD PTR __New_proxy$[ebp], eax

; 1063 :         _Construct_in_place(*_New_proxy, this);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_proxy$[ebp]
	push	edx
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8

; 1064 :         _Myproxy            = _New_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_proxy$[ebp]
	mov	DWORD PTR [eax], ecx

; 1065 :         _New_proxy->_Mycont = this;

	mov	edx, DWORD PTR __New_proxy$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 1066 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1><>, COMDAT
; _this$ = ecx

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::allocator<luabind::detail::`anonymous namespace'::queue_entry>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 989  : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

	push	ebp
	mov	ebp, esp

; 990  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 991  :     using _Ty = typename _Alloc::value_type;
; 992  :     _Ptr->~_Ty();
; 993  :     _Deallocate_plain(_Al, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 994  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 723  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 724  :     // assign _New_val to _Val, return previous _Val
; 725  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 726  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 727  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 728  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::queue_entry>, COMDAT
; _this$ = ecx

; 825  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::queue_entry>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 835  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 836  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 837  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$07@std@@YAII@Z	; std::_Get_size_of_n<8>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 838  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\type_traits
;	COMDAT ??$move@AAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z PROC ; std::move<luabind::detail::`anonymous namespace'::queue_entry &>, COMDAT

; 1422 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

	push	ebp
	mov	ebp, esp

; 1423 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1424 : }

	pop	ebp
	ret	0
??$move@AAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ENDP ; std::move<luabind::detail::`anonymous namespace'::queue_entry &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\map
;	COMDAT ??$insert@U?$pair@Vtype_id@luabind@@I@std@@$0A@@?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@Vtype_id@luabind@@I@std@@$0A@@?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z PROC ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::insert<std::pair<luabind::type_id,unsigned int>,0>, COMDAT
; _this$ = ecx

; 162  :     pair<iterator, bool> insert(_Valty&& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 163  :         return this->emplace(_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$pair@Vtype_id@luabind@@I@std@@@std@@YA$$QAU?$pair@Vtype_id@luabind@@I@0@AAU10@@Z ; std::forward<std::pair<luabind::type_id,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@U?$pair@Vtype_id@luabind@@I@std@@@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::emplace<std::pair<luabind::type_id,unsigned int> >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 164  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$insert@U?$pair@Vtype_id@luabind@@I@std@@$0A@@?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ENDP ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::insert<std::pair<luabind::type_id,unsigned int>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0Vtype_id@luabind@@I$0A@@?$pair@$$CBVtype_id@luabind@@I@std@@QAE@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0Vtype_id@luabind@@I$0A@@?$pair@$$CBVtype_id@luabind@@I@std@@QAE@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z PROC ; std::pair<luabind::type_id const ,unsigned int>::pair<luabind::type_id const ,unsigned int><luabind::type_id,unsigned int,0>, COMDAT
; _this$ = ecx

; 256  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@Vtype_id@luabind@@@std@@YA$$QAVtype_id@luabind@@AAV12@@Z ; std::forward<luabind::type_id>
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	call	??$forward@I@std@@YA$$QAIAAI@Z		; std::forward<unsigned int>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0Vtype_id@luabind@@I$0A@@?$pair@$$CBVtype_id@luabind@@I@std@@QAE@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ENDP ; std::pair<luabind::type_id const ,unsigned int>::pair<luabind::type_id const ,unsigned int><luabind::type_id,unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$make_pair@ABVtype_id@luabind@@AAI@std@@YA?AU?$pair@Vtype_id@luabind@@I@0@ABVtype_id@luabind@@AAI@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@ABVtype_id@luabind@@AAI@std@@YA?AU?$pair@Vtype_id@luabind@@I@0@ABVtype_id@luabind@@AAI@Z PROC ; std::make_pair<luabind::type_id const &,unsigned int &>, COMDAT

; 515  :         is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) /* strengthened */ {

	push	ebp
	mov	ebp, esp

; 516  :     // return pair composed from arguments
; 517  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 518  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAI@std@@YAAAIAAI@Z		; std::forward<unsigned int &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@ABVtype_id@luabind@@@std@@YAABVtype_id@luabind@@ABV12@@Z ; std::forward<luabind::type_id const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0ABVtype_id@luabind@@AAI$0A@@?$pair@Vtype_id@luabind@@I@std@@QAE@ABVtype_id@luabind@@AAI@Z ; std::pair<luabind::type_id,unsigned int>::pair<luabind::type_id,unsigned int><luabind::type_id const &,unsigned int &,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 519  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$make_pair@ABVtype_id@luabind@@AAI@std@@YA?AU?$pair@Vtype_id@luabind@@I@0@ABVtype_id@luabind@@AAI@Z ENDP ; std::make_pair<luabind::type_id const &,unsigned int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fregistered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z@YAXXZ
text$yd	SEGMENT
??__Fregistered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z@YAXXZ PROC ; `luabind::detail::allocate_class_id'::`2'::`dynamic atexit destructor for 'registered'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?registered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4V?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@A
	call	??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__Fregistered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z@YAXXZ ENDP ; `luabind::detail::allocate_class_id'::`2'::`dynamic atexit destructor for 'registered''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xutility
;	COMDAT ??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z
_TEXT	SEGMENT
tv66 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 4
$T4 = -20						; size = 4
$T5 = -13						; size = 1
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
__Val$ = 36						; size = 4
??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge>, COMDAT

; 6094 : _NODISCARD _CONSTEXPR20 _FwdIt lower_bound(_FwdIt _First, _FwdIt _Last, const _Ty& _Val) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 6095 :     // find first element not before _Val
; 6096 :     return _STD lower_bound(_First, _Last, _Val, less<>{});

	xor	eax, eax
	mov	BYTE PTR $T5[ebp], al
	movzx	ecx, BYTE PTR $T5[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@V10@ABUedge@?A0x28cf8a89@detail@luabind@@U?$less@X@0@@Z ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge,std::less<void> >
	add	esp, 36					; 00000024H
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 6097 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge>
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEPAUedge@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Unwrapped
; _this$ = ecx

; 328  :     _NODISCARD _CONSTEXPR20 value_type* _Unwrapped() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 329  :         return _Unfancy(this->_Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	??$_Unfancy@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::edge>
	add	esp, 4

; 330  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEPAUedge@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEPAUedge@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator->
; _this$ = ecx

; 265  :     _NODISCARD _CONSTEXPR20 pointer operator->() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 266  : #if _ITERATOR_DEBUG_LEVEL != 0
; 267  :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 268  :         _STL_VERIFY(this->_Ptr, "can't dereference value-initialized vector iterator");

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	268					; 0000010cH
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	268					; 0000010cH
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 269  :         _STL_VERIFY(_Mycont->_Myfirst <= this->_Ptr && this->_Ptr < _Mycont->_Mylast,

	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	ja	SHORT $LN13@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Mycont$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	270					; 0000010eH
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	270					; 0000010eH
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	eax, eax
	jne	SHORT $LN10@operator

; 270  :             "can't dereference out of range vector iterator");
; 271  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 272  : 
; 273  :         return this->_Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]

; 274  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEPAUedge@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$max@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@I@std@@YAABIABI0@Z PROC				; std::max<unsigned int>, COMDAT

; 41   :     (max) (const _Ty& _Left, const _Ty& _Right) noexcept(noexcept(_Left < _Right)) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 42   :     // return larger of _Left and _Right
; 43   :     return _Left < _Right ? _Right : _Left;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]

; 44   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$max@I@std@@YAABIABI0@Z ENDP				; std::max<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$deref@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YAABUedge@?A0x28cf8a89@detail@luabind@@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z
_TEXT	SEGMENT
_cur$ = 8						; size = 4
___formal$ = 12						; size = 4
??$deref@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YAABUedge@?A0x28cf8a89@detail@luabind@@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z PROC ; boost::foreach_detail_::deref<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >, COMDAT

; 776  : {

	push	ebp
	mov	ebp, esp

; 777  :     typedef BOOST_DEDUCED_TYPENAME foreach_iterator<T, C>::type iter_t;
; 778  :     return *auto_any_cast<iter_t, boost::mpl::false_>(cur);

	mov	eax, DWORD PTR _cur$[ebp]
	push	eax
	call	??$auto_any_cast@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABUauto_any_base@01@@Z ; boost::foreach_detail_::auto_any_cast<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<0> >
	add	esp, 4
	mov	ecx, eax
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEABUedge@?A0x28cf8a89@detail@luabind@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator*

; 779  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$deref@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YAABUedge@?A0x28cf8a89@detail@luabind@@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z ENDP ; boost::foreach_detail_::deref<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$next@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YAXABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z
_TEXT	SEGMENT
_cur$ = 8						; size = 4
___formal$ = 12						; size = 4
??$next@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YAXABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z PROC ; boost::foreach_detail_::next<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >, COMDAT

; 765  : {

	push	ebp
	mov	ebp, esp

; 766  :     typedef BOOST_DEDUCED_TYPENAME foreach_iterator<T, C>::type iter_t;
; 767  :     ++auto_any_cast<iter_t, boost::mpl::false_>(cur);

	mov	eax, DWORD PTR _cur$[ebp]
	push	eax
	call	??$auto_any_cast@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABUauto_any_base@01@@Z ; boost::foreach_detail_::auto_any_cast<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<0> >
	add	esp, 4
	mov	ecx, eax
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator++

; 768  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$next@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YAXABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z ENDP ; boost::foreach_detail_::next<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$done@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA_NABUauto_any_base@01@0PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z
_TEXT	SEGMENT
_cur$ = 8						; size = 4
_end$ = 12						; size = 4
___formal$ = 16						; size = 4
??$done@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA_NABUauto_any_base@01@0PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z PROC ; boost::foreach_detail_::done<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >, COMDAT

; 747  : {

	push	ebp
	mov	ebp, esp

; 748  :     typedef BOOST_DEDUCED_TYPENAME foreach_iterator<T, C>::type iter_t;
; 749  :     return auto_any_cast<iter_t, boost::mpl::false_>(cur) == auto_any_cast<iter_t, boost::mpl::false_>(end);

	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	call	??$auto_any_cast@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABUauto_any_base@01@@Z ; boost::foreach_detail_::auto_any_cast<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	call	??$auto_any_cast@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABUauto_any_base@01@@Z ; boost::foreach_detail_::auto_any_cast<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<0> >
	add	esp, 4
	mov	ecx, eax
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator==

; 750  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$done@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA_NABUauto_any_base@01@0PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z ENDP ; boost::foreach_detail_::done<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z
_TEXT	SEGMENT
tv76 = -36						; size = 4
tv65 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 12
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_col$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z PROC ; boost::foreach_detail_::end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >, COMDAT

; 716  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 717  :     typedef BOOST_DEDUCED_TYPENAME type2type<T, C>::type type;
; 718  :     typedef BOOST_DEDUCED_TYPENAME foreach_iterator<T, C>::type iterator;
; 719  :     return auto_any<BOOST_DEDUCED_TYPENAME foreach_iterator<T, C>::type>(

	mov	eax, DWORD PTR _col$[ebp]
	push	eax
	call	??$auto_any_cast@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABUauto_any_base@01@@Z ; boost::foreach_detail_::auto_any_cast<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *,boost::mpl::bool_<0> >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_adl_barrier@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z ; boost::range_adl_barrier::end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	mov	DWORD PTR tv65[ebp], eax
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv76[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv76[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@Z ; boost::foreach_detail_::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 720  :         iterator(boost::end(BOOST_FOREACH_DEREFOF((auto_any_cast<type *, boost::mpl::false_>(col))))));
; 721  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z ENDP ; boost::foreach_detail_::end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@XZ PROC ; boost::foreach_detail_::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >::~auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@XZ ENDP ; boost::foreach_detail_::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >::~auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
__It$ = 8						; size = 4
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEXPBUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Seek_to
; _this$ = ecx

; 204  :     _CONSTEXPR20 void _Seek_to(const value_type* _It) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 205  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

	mov	eax, DWORD PTR __It$[ebp]
	push	eax
	call	??$_Refancy@PAUedge@?A0x28cf8a89@detail@luabind@@$0A@@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Refancy<luabind::detail::`anonymous namespace'::edge *,0>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 206  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEXPBUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Verify_range@std@@YAXABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@0@Z PROC ; std::_Verify_range

; 192  :         const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) noexcept {

	push	ebp
	mov	ebp, esp
	push	esi
$LN4@Verify_ran:

; 193  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

	mov	ecx, DWORD PTR __First$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Last$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	jne	SHORT $LN7@Verify_ran
	jmp	SHORT $LN2@Verify_ran
$LN7@Verify_ran:
	push	OFFSET ??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	193					; 000000c1H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@Verify_ran
	int	3
$LN19@Verify_ran:
	push	0
	push	193					; 000000c1H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Verify_ran
$LN2@Verify_ran:
	xor	edx, edx
	jne	SHORT $LN4@Verify_ran
$LN10@Verify_ran:

; 194  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

	mov	eax, DWORD PTR __First$[ebp]
	mov	ecx, DWORD PTR __Last$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN13@Verify_ran
	jmp	SHORT $LN8@Verify_ran
$LN13@Verify_ran:
	push	OFFSET ??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	194					; 000000c2H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@Verify_ran
	int	3
$LN20@Verify_ran:
	push	0
	push	194					; 000000c2H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN13@Verify_ran
$LN8@Verify_ran:
	xor	edx, edx
	jne	SHORT $LN10@Verify_ran

; 195  :     }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Verify_range@std@@YAXABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Compat
; _this$ = ecx

; 181  :     _CONSTEXPR20 void _Compat(const _Vector_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@Compat:

; 182  :         // test for compatible iterator pair
; 183  : #if _ITERATOR_DEBUG_LEVEL == 0
; 184  :         (void) _Right;
; 185  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 186  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector iterators incompatible");

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	jne	SHORT $LN7@Compat
	jmp	SHORT $LN2@Compat
$LN7@Compat:
	push	OFFSET ??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	186					; 000000baH
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@Compat
	int	3
$LN11@Compat:
	push	0
	push	186					; 000000baH
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Compat
$LN2@Compat:
	xor	edx, edx
	jne	SHORT $LN4@Compat

; 187  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 188  :     }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator==
; _this$ = ecx

; 148  :     _NODISCARD _CONSTEXPR20 bool operator==(const _Vector_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 149  :         _Compat(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Compat

; 150  :         return _Ptr == _Right._Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 151  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator++
; _this$ = ecx

; 67   :     _CONSTEXPR20 _Vector_const_iterator& operator++() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 68   : #if _ITERATOR_DEBUG_LEVEL != 0
; 69   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 70   :         _STL_VERIFY(_Ptr, "can't increment value-initialized vector iterator");

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	70					; 00000046H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	70					; 00000046H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 71   :         _STL_VERIFY(_Ptr < _Mycont->_Mylast, "can't increment vector iterator past end");

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Mycont$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	71					; 00000047H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	71					; 00000047H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	eax, eax
	jne	SHORT $LN10@operator

; 72   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 73   : 
; 74   :         ++_Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx

; 75   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 76   :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEABUedge@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator*
; _this$ = ecx

; 45   :     _NODISCARD _CONSTEXPR20 reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 46   : #if _ITERATOR_DEBUG_LEVEL != 0
; 47   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 48   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	48					; 00000030H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	48					; 00000030H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator
$LN10@operator:

; 49   :         _STL_VERIFY(

	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	ja	SHORT $LN13@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Mycont$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	50					; 00000032H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	50					; 00000032H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	eax, eax
	jne	SHORT $LN10@operator

; 50   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");
; 51   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 52   : 
; 53   :         return *_Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+8]

; 54   :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEABUedge@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
; _this$ = ecx

; 41   :     _CONSTEXPR20 _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) noexcept : _Ptr(_Parg) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 42   :         this->_Adopt(_Pvector);

	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 43   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
??0?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@Z PROC ; boost::foreach_detail_::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >
; _this$ = ecx

; 264  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 263  :       : item(t)

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z

; 265  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@Z ENDP ; boost::foreach_detail_::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z
_TEXT	SEGMENT
tv76 = -36						; size = 4
tv65 = -32						; size = 4
$T2 = -28						; size = 4
$T3 = -24						; size = 12
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_col$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z PROC ; boost::foreach_detail_::begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >, COMDAT

; 676  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0

; 677  :     typedef BOOST_DEDUCED_TYPENAME type2type<T, C>::type type;
; 678  :     typedef BOOST_DEDUCED_TYPENAME foreach_iterator<T, C>::type iterator;
; 679  :     return auto_any<BOOST_DEDUCED_TYPENAME foreach_iterator<T, C>::type>(

	mov	eax, DWORD PTR _col$[ebp]
	push	eax
	call	??$auto_any_cast@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$0A@@mpl@boost@@@foreach_detail_@boost@@YAAAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABUauto_any_base@01@@Z ; boost::foreach_detail_::auto_any_cast<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *,boost::mpl::bool_<0> >
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@range_adl_barrier@boost@@YA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@3@@Z ; boost::range_adl_barrier::begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	mov	DWORD PTR tv65[ebp], eax
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv76[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv76[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@ABV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@Z ; boost::foreach_detail_::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >::auto_any<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > > >
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 680  :         iterator(boost::begin(BOOST_FOREACH_DEREFOF((auto_any_cast<type *, boost::mpl::false_>(col))))));
; 681  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z ENDP ; boost::foreach_detail_::begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$encode_type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$00@mpl@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$encode_type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$00@mpl@1@@Z PROC ; boost::foreach_detail_::encode_type<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >, COMDAT

; 417  : inline type2type<T, const_> *encode_type(T const &, boost::mpl::true_*) { return 0; }

	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
??$encode_type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$00@mpl@1@@Z ENDP ; boost::foreach_detail_::encode_type<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$is_const_@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$bool_@$00@mpl@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$is_const_@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$bool_@$00@mpl@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z PROC ; boost::foreach_detail_::is_const_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >, COMDAT

; 232  : inline boost::mpl::true_ *is_const_(T const &) { return 0; }

	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
??$is_const_@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$bool_@$00@mpl@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z ENDP ; boost::foreach_detail_::is_const_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
??0?$auto_any@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@QAE@ABQBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z PROC ; boost::foreach_detail_::auto_any<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *>::auto_any<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *>
; _this$ = ecx

; 264  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 263  :       : item(t)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 265  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$auto_any@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@QAE@ABQBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z ENDP ; boost::foreach_detail_::auto_any<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *>::auto_any<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$contain@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YA?AU?$auto_any@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$0A@@mpl@1@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_t$ = 12						; size = 4
___formal$ = 16						; size = 4
??$contain@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YA?AU?$auto_any@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$0A@@mpl@1@@Z PROC ; boost::foreach_detail_::contain<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >, COMDAT

; 644  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 645  :     // Cannot seem to get sunpro to handle addressof() with array types.
; 646  :     #if BOOST_WORKAROUND(__SUNPRO_CC, BOOST_TESTED_AT(0x570))
; 647  :     return auto_any<T *>(&t);
; 648  :     #else
; 649  :     return auto_any<T *>(boost::addressof(t));

	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	??$addressof@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@YAPBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV12@@Z ; boost::addressof<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$auto_any@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@QAE@ABQBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z ; boost::foreach_detail_::auto_any<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *>::auto_any<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const *>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 650  :     #endif
; 651  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$contain@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YA?AU?$auto_any@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$0A@@mpl@1@@Z ENDP ; boost::foreach_detail_::contain<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@@foreach_detail_@boost@@YAPAU?$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@U?$bool_@$0A@@42@U542@U542@@mpl@1@PAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@PAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@31@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@@foreach_detail_@boost@@YAPAU?$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@U?$bool_@$0A@@42@U542@U542@@mpl@1@PAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@PAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@31@@Z PROC ; boost::foreach_detail_::or_<boost::is_rvalue_reference<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>,boost::mpl::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<1>,boost::mpl::bool_<1>,boost::mpl::bool_<1> > >, COMDAT

; 216  : inline boost::mpl::or_<Bool1, Bool2> *or_(Bool1 *, Bool2 *) { return 0; }

	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
??$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@@foreach_detail_@boost@@YAPAU?$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@U?$bool_@$0A@@42@U542@U542@@mpl@1@PAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@PAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@31@@Z ENDP ; boost::foreach_detail_::or_<boost::is_rvalue_reference<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>,boost::mpl::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<1>,boost::mpl::bool_<1>,boost::mpl::bool_<1> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@@foreach_detail_@boost@@YAPAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@1@PAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@31@PAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@@foreach_detail_@boost@@YAPAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@1@PAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@31@PAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z PROC ; boost::foreach_detail_::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >, COMDAT

; 210  : inline boost::mpl::and_<Bool1, Bool2> *and_(Bool1 *, Bool2 *) { return 0; }

	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
??$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@@foreach_detail_@boost@@YAPAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@1@PAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@31@PAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z ENDP ; boost::foreach_detail_::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$boost_foreach_is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$boost_foreach_is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z PROC ; boost_foreach_is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >, COMDAT

; 173  : boost_foreach_is_lightweight_proxy(T *&, BOOST_FOREACH_TAG_DEFAULT) { return 0; }

	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
??$boost_foreach_is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z ENDP ; boost_foreach_is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@foreach_detail_@boost@@YAPAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@1@PAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@foreach_detail_@boost@@YAPAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@1@PAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z PROC ; boost::foreach_detail_::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >, COMDAT

; 222  : inline boost::mpl::not_<Bool1> *not_(Bool1 *) { return 0; }

	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
??$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@foreach_detail_@boost@@YAPAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@1@PAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z ENDP ; boost::foreach_detail_::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$boost_foreach_is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$boost_foreach_is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z PROC ; boost_foreach_is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >, COMDAT

; 198  : boost_foreach_is_noncopyable(T *&, BOOST_FOREACH_TAG_DEFAULT) { return 0; }

	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
??$boost_foreach_is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z ENDP ; boost_foreach_is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z PROC ; boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >, COMDAT

; 433  : {

	push	ebp
	mov	ebp, esp

; 434  :     static T *t = 0;
; 435  :     return t;

	mov	eax, OFFSET ?t@?1???$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV34@@Z@4PAV34@A

; 436  : }

	pop	ebp
	ret	0
??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z ENDP ; boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??$is_rvalue_@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@H@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$is_rvalue_@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@H@Z PROC ; boost::foreach_detail_::is_rvalue_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>, COMDAT

; 243  : inline boost::is_rvalue_reference<T &&> *is_rvalue_(T &&, int) { return 0; }

	push	ebp
	mov	ebp, esp
	xor	eax, eax
	pop	ebp
	ret	0
??$is_rvalue_@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@H@Z ENDP ; boost::foreach_detail_::is_rvalue_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$make_pair@ABQAXABH@std@@YA?AU?$pair@PAXH@0@ABQAXABH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@ABQAXABH@std@@YA?AU?$pair@PAXH@0@ABQAXABH@Z PROC ; std::make_pair<void * const &,int const &>, COMDAT

; 515  :         is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) /* strengthened */ {

	push	ebp
	mov	ebp, esp

; 516  :     // return pair composed from arguments
; 517  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 518  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@ABH@std@@YAABHABH@Z		; std::forward<int const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@ABQAX@std@@YAABQAXABQAX@Z	; std::forward<void * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@ABQAXABH@Z ; std::pair<void *,int>::pair<void *,int><void *,int,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 519  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$make_pair@ABQAXABH@std@@YA?AU?$pair@PAXH@0@ABQAXABH@Z ENDP ; std::make_pair<void * const &,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?do_assign@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEX_N@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_x$ = 8							; size = 1
?do_assign@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEX_N@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_assign, COMDAT
; _this$ = ecx

; 125  :         void do_assign(bool x) { x? do_set() : do_reset(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _x$[ebp]
	test	eax, eax
	je	SHORT $LN3@do_assign
	mov	ecx, DWORD PTR _this$[ebp]
	call	?do_set@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_set
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN1@do_assign
$LN3@do_assign:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?do_reset@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_reset
	mov	DWORD PTR tv68[ebp], 0
$LN1@do_assign:
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?do_assign@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEX_N@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?do_reset@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?do_reset@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_reset, COMDAT
; _this$ = ecx

; 123  :         void do_reset() { m_block &= ~m_mask; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	not	eax
	and	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	esp, ebp
	pop	ebp
	ret	0
?do_reset@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?do_set@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?do_set@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_set, COMDAT
; _this$ = ecx

; 122  :         void do_set() { m_block |= m_mask; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	or	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	esp, ebp
	pop	ebp
	ret	0
?do_set@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXXZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ??4reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAEAAV012@_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 1
??4reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAEAAV012@_N@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::operator=, COMDAT
; _this$ = ecx

; 110  :         reference& operator=(bool x)               { do_assign(x);   return *this; } // for b[i] = x

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?do_assign@reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEX_N@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::do_assign
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAEAAV012@_N@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ??Breference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBE_NXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
??Breference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBE_NXZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::operator bool, COMDAT
; _this$ = ecx

; 105  :         operator bool() const { return (m_block & m_mask) != 0; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	and	eax, DWORD PTR [edx+4]
	je	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??Breference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBE_NXZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ??0reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAE@AAKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_b$ = 8							; size = 4
_pos$ = 12						; size = 4
??0reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAE@AAKI@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::reference, COMDAT
; _this$ = ecx

; 97   :         { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 93   :             :m_block(b),

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR [eax], ecx

; 94   :              m_mask( (assert(pos < bits_per_block),

	cmp	DWORD PTR _pos$[ebp], 32		; 00000020H
	jb	SHORT $LN3@reference
	push	94					; 0000005eH
	push	OFFSET ??_C@_1KC@IDNIIAGO@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
	push	OFFSET ??_C@_1CK@LKHICBBG@?$AAp?$AAo?$AAs?$AA?5?$AA?$DM?$AA?5?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@reference:
	mov	eax, 1
	mov	ecx, DWORD PTR _pos$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 97   :         { }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAE@AAKI@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::reference
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?m_highest_block@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEABKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?m_highest_block@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEABKXZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::m_highest_block, COMDAT
; _this$ = ecx

; 2045 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2046 :     assert(size() > 0 && num_blocks() > 0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::size
	test	eax, eax
	jbe	SHORT $LN3@m_highest_
	mov	ecx, DWORD PTR _this$[ebp]
	call	?num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::num_blocks
	test	eax, eax
	ja	SHORT $LN4@m_highest_
$LN3@m_highest_:
	push	2046					; 000007feH
	push	OFFSET ??_C@_1KC@IDNIIAGO@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
	push	OFFSET ??_C@_1DO@DNNHOGGG@?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAn@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@m_highest_:

; 2047 :     return m_bits.back();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?back@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::back

; 2048 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?m_highest_block@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEABKXZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::m_highest_block
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?calc_num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
_num_bits$ = 8						; size = 4
?calc_num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::calc_num_blocks, COMDAT

; 2027 : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 2028 :     return num_bits / bits_per_block

	mov	eax, DWORD PTR _num_bits$[ebp]
	xor	edx, edx
	mov	ecx, 32					; 00000020H
	div	ecx
	test	edx, edx
	je	SHORT $LN3@calc_num_b
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@calc_num_b
$LN3@calc_num_b:
	mov	DWORD PTR tv67[ebp], 0
$LN4@calc_num_b:
	mov	eax, DWORD PTR _num_bits$[ebp]
	shr	eax, 5
	add	eax, DWORD PTR tv67[ebp]

; 2029 :            + static_cast<size_type>( num_bits % bits_per_block != 0 );
; 2030 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?calc_num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::calc_num_blocks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z
_TEXT	SEGMENT
_it$ = -36						; size = 12
_mask$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_num_bits$ = 8						; size = 4
_value$ = 12						; size = 4
?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::init_from_unsigned_long, COMDAT
; _this$ = ecx

; 472  :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 473  : 
; 474  :         assert(m_bits.size() == 0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
	test	eax, eax
	je	SHORT $LN7@init_from_
	push	474					; 000001daH
	push	OFFSET ??_C@_1KC@IDNIIAGO@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
	push	OFFSET ??_C@_1CG@GFHFJNC@?$AAm?$AA_?$AAb?$AAi?$AAt?$AAs?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@init_from_:

; 475  : 
; 476  :         m_bits.resize(calc_num_blocks(num_bits));

	mov	ecx, DWORD PTR _num_bits$[ebp]
	push	ecx
	call	?calc_num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::calc_num_blocks
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?resize@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::resize

; 477  :         m_num_bits = num_bits;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _num_bits$[ebp]
	mov	DWORD PTR [edx+16], eax

; 478  : 
; 479  :         typedef unsigned long num_type;
; 480  :         typedef boost::detail::dynamic_bitset_impl
; 481  :             ::shifter<num_type, bits_per_block, ulong_width> shifter;
; 482  : 
; 483  :         //if (num_bits == 0)
; 484  :         //    return;
; 485  : 
; 486  :         // zero out all bits at pos >= num_bits, if any;
; 487  :         // note that: num_bits == 0 implies value == 0
; 488  :         if (num_bits < static_cast<size_type>(ulong_width)) {

	cmp	DWORD PTR _num_bits$[ebp], 32		; 00000020H
	jae	SHORT $LN5@init_from_

; 489  :             const num_type mask = (num_type(1) << num_bits) - 1;

	mov	edx, 1
	mov	ecx, DWORD PTR _num_bits$[ebp]
	shl	edx, cl
	sub	edx, 1
	mov	DWORD PTR _mask$2[ebp], edx

; 490  :             value &= mask;

	mov	eax, DWORD PTR _value$[ebp]
	and	eax, DWORD PTR _mask$2[ebp]
	mov	DWORD PTR _value$[ebp], eax
$LN5@init_from_:

; 491  :         }
; 492  : 
; 493  :         typename buffer_type::iterator it = m_bits.begin();

	lea	ecx, DWORD PTR _it$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 494  :         for( ; value; shifter::left_shift(value), ++it) {

	jmp	SHORT $LN4@init_from_
$LN2@init_from_:
	lea	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?left_shift@?$shifter@K$0CA@$0CA@@dynamic_bitset_impl@detail@boost@@SAXAAK@Z ; boost::detail::dynamic_bitset_impl::shifter<unsigned long,32,32>::left_shift
	add	esp, 4
	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator++
$LN4@init_from_:
	cmp	DWORD PTR _value$[ebp], 0
	je	SHORT $LN3@init_from_

; 495  :             *it = static_cast<block_type>(value);

	lea	ecx, DWORD PTR _it$[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QBEAAKXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned long> > >::operator*
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx

; 496  :         }

	jmp	SHORT $LN2@init_from_
$LN3@init_from_:

; 497  : 
; 498  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@init_from_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN12@init_from_:
	DD	1
	DD	$LN11@init_from_
$LN11@init_from_:
	DD	-36					; ffffffdcH
	DD	12					; 0000000cH
	DD	$LN9@init_from_
$LN9@init_from_:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::init_from_unsigned_long
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?bit_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 4
?bit_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::bit_index, COMDAT

; 385  :     static block_width_type bit_index(size_type pos) BOOST_NOEXCEPT { return static_cast<block_width_type>(pos % bits_per_block); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pos$[ebp]
	xor	edx, edx
	mov	ecx, 32					; 00000020H
	div	ecx
	mov	eax, edx
	pop	ebp
	ret	0
?bit_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::bit_index
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?block_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z
_TEXT	SEGMENT
_pos$ = 8						; size = 4
?block_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::block_index, COMDAT

; 384  :     static size_type block_index(size_type pos) BOOST_NOEXCEPT { return pos / bits_per_block; }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pos$[ebp]
	shr	eax, 5
	pop	ebp
	ret	0
?block_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::block_index
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?count_extra_bits@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?count_extra_bits@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEIXZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::count_extra_bits, COMDAT
; _this$ = ecx

; 383  :     block_width_type count_extra_bits() const BOOST_NOEXCEPT { return bit_index(size()); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::size
	push	eax
	call	?bit_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::bit_index
	add	esp, 4
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?count_extra_bits@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEIXZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::count_extra_bits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?m_check_invariants@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABE_NXZ
_TEXT	SEGMENT
_mask$1 = -12						; size = 4
_extra_bits$ = -8					; size = 4
_this$ = -4						; size = 4
?m_check_invariants@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABE_NXZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::m_check_invariants, COMDAT
; _this$ = ecx

; 2128 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2129 :     const block_width_type extra_bits = count_extra_bits();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?count_extra_bits@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::count_extra_bits
	mov	DWORD PTR _extra_bits$[ebp], eax

; 2130 :     if (extra_bits > 0) {

	cmp	DWORD PTR _extra_bits$[ebp], 0
	jbe	SHORT $LN2@m_check_in

; 2131 :         const block_type mask = detail::dynamic_bitset_impl::max_limit<Block>::value << extra_bits;

	or	eax, -1
	mov	ecx, DWORD PTR _extra_bits$[ebp]
	shl	eax, cl
	mov	DWORD PTR _mask$1[ebp], eax

; 2132 :         if ((m_highest_block() & mask) != 0)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?m_highest_block@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABEABKXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::m_highest_block
	mov	ecx, DWORD PTR [eax]
	and	ecx, DWORD PTR _mask$1[ebp]
	je	SHORT $LN2@m_check_in

; 2133 :             return false;

	xor	al, al
	jmp	SHORT $LN1@m_check_in
$LN2@m_check_in:

; 2134 :     }
; 2135 :     if (m_bits.size() > m_bits.capacity() || num_blocks() != calc_num_blocks(size()))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
	cmp	esi, eax
	ja	SHORT $LN5@m_check_in
	mov	ecx, DWORD PTR _this$[ebp]
	call	?num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::num_blocks
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::size
	push	eax
	call	?calc_num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::calc_num_blocks
	add	esp, 4
	cmp	esi, eax
	je	SHORT $LN4@m_check_in
$LN5@m_check_in:

; 2136 :         return false;

	xor	al, al
	jmp	SHORT $LN1@m_check_in
$LN4@m_check_in:

; 2137 : 
; 2138 :     return true;

	mov	al, 1
$LN1@m_check_in:

; 2139 : 
; 2140 : }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?m_check_invariants@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABE_NXZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::m_check_invariants
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::num_blocks, COMDAT
; _this$ = ecx

; 1363 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1364 :     return m_bits.size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size

; 1365 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?num_blocks@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::num_blocks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ?size@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 1356 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1357 :     return m_num_bits;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]

; 1358 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBEIXZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ??A?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE?AVreference@01@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_pos$ = 12						; size = 4
??A?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE?AVreference@01@I@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::operator[], COMDAT
; _this$ = ecx

; 307  :     reference operator[](size_type pos) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 308  :         return reference(m_bits[block_index(pos)], bit_index(pos));

	mov	eax, DWORD PTR _pos$[ebp]
	push	eax
	call	?bit_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::bit_index
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	call	?block_index@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@CAII@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::block_index
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAE@AAKI@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::reference
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 309  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??A?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE?AVreference@01@I@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::~dynamic_bitset<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 703  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 704  :     assert(m_check_invariants());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?m_check_invariants@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@ABE_NXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::m_check_invariants
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@dynamic_bi
	push	704					; 000002c0H
	push	OFFSET ??_C@_1KC@IDNIIAGO@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
	push	OFFSET ??_C@_1CK@KJLAJJPB@?$AAm?$AA_?$AAc?$AAh?$AAe?$AAc?$AAk?$AA_?$AAi?$AAn?$AAv?$AAa?$AAr?$AAi?$AAa@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@dynamic_bi:

; 705  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::~dynamic_bitset<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\dynamic_bitset\dynamic_bitset.hpp
;	COMDAT ??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_num_bits$ = 8						; size = 4
_value$ = 12						; size = 4
_alloc$ = 16						; size = 4
??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z PROC ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::dynamic_bitset<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 687  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 685  :     : m_bits(alloc),

	mov	eax, DWORD PTR _alloc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 686  :       m_num_bits(0)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 688  :     init_from_unsigned_long(num_bits, value);

	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _num_bits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init_from_unsigned_long@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@AAEXIK@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::init_from_unsigned_long

; 689  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z ENDP ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::dynamic_bitset<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QBEABV?$allocator@K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QBEABV?$allocator@K@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1386 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1388 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QBEABV?$allocator@K@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAEAAV?$allocator@K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAEAAV?$allocator@K@2@XZ PROC ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAEAAV?$allocator@K@2@XZ ENDP ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned long> >::_Vector_val<std::_Simple_types<unsigned long> >, COMDAT
; _this$ = ecx

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@K@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned long> >::_Vector_val<std::_Simple_types<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Getal@?$vector@KV?$allocator@K@std@@@std@@ABEABV?$allocator@K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$vector@KV?$allocator@K@std@@@std@@ABEABV?$allocator@K@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal, COMDAT
; _this$ = ecx

; 2047 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2048 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QBEABV?$allocator@K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Get_first

; 2049 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@KV?$allocator@K@std@@@std@@ABEABV?$allocator@K@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal, COMDAT
; _this$ = ecx

; 2043 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2044 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAEAAV?$allocator@K@2@XZ ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Get_first

; 2045 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range, COMDAT
; _this$ = ecx

; 2028 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2029 :         // orphan iterators within specified (inclusive) range
; 2030 : #if _HAS_CXX20
; 2031 :         if (_STD is_constant_evaluated()) {
; 2032 :             _Orphan_range_unlocked(_First, _Last);
; 2033 :         } else
; 2034 : #endif // _HAS_CXX20
; 2035 :         {
; 2036 :             _Orphan_range_locked(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range_locked

; 2037 :         }
; 2038 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range_locked, COMDAT
; _this$ = ecx

; 2023 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2024 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2025 :         _Orphan_range_unlocked(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range_unlocked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range_unlocked

; 2026 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@Orphan_ran:
	DD	1
	DD	$LN6@Orphan_ran
$LN6@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Orphan_ran
$LN4@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range_locked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range_locked
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Orphan_range_unlocked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z
_TEXT	SEGMENT
__Temp$1 = -20						; size = 4
__Temp$2 = -16						; size = 4
__Pnextptr$3 = -12					; size = 4
__Pnext$ = -8						; size = 4
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range_unlocked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range_unlocked, COMDAT
; _this$ = ecx

; 2008 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 2009 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx
$LN2@Orphan_ran:

; 2010 :         while (*_Pnext) {

	mov	edx, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@Orphan_ran

; 2011 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Pnextptr$3[ebp], edx

; 2012 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	eax, DWORD PTR __Pnextptr$3[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN6@Orphan_ran
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Pnextptr$3[ebp]
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 2013 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Temp$2[ebp], eax

; 2014 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	ecx, DWORD PTR __Temp$2[ebp]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 2015 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2016 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Temp$1[ebp], eax

; 2017 :                 _Temp->_Myproxy  = nullptr;

	mov	ecx, DWORD PTR __Temp$1[ebp]
	mov	DWORD PTR [ecx], 0

; 2018 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR __Temp$1[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx], ecx
$LN5@Orphan_ran:

; 2019 :             }
; 2020 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN1@Orphan_ran:

; 2021 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range_unlocked@?$vector@KV?$allocator@K@std@@@std@@ABEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Xlength@?$vector@KV?$allocator@K@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@KV?$allocator@K@std@@@std@@CAXXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlength, COMDAT

; 1999 :     [[noreturn]] static void _Xlength() {

	push	ebp
	mov	ebp, esp

; 2000 :         _Xlength_error("vector too long");

	push	OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 2001 :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Xlength@?$vector@KV?$allocator@K@std@@@std@@CAXXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ
_TEXT	SEGMENT
__Myend$ = -36						; size = 4
__Mylast$ = -32						; size = 4
__Myfirst$ = -28					; size = 4
__My_data$ = -24					; size = 4
__Al$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 1897 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1898 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1899 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1900 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1901 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1902 :         pointer& _Myend   = _My_data._Myend;

	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax

; 1903 : 
; 1904 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1905 : 
; 1906 :         if (_Myfirst) { // destroy and deallocate old array

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Tidy

; 1907 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
	add	esp, 12					; 0000000cH

; 1908 :             _ASAN_VECTOR_REMOVE;
; 1909 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@K@std@@QAEXQAKI@Z ; std::allocator<unsigned long>::deallocate

; 1910 : 
; 1911 :             _Myfirst = nullptr;

	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	DWORD PTR [eax], 0

; 1912 :             _Mylast  = nullptr;

	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [ecx], 0

; 1913 :             _Myend   = nullptr;

	mov	edx, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@Tidy:

; 1914 :         }
; 1915 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Change_array@?$vector@KV?$allocator@K@std@@@std@@AAEXQAKII@Z
_TEXT	SEGMENT
__Myend$ = -24						; size = 4
__Mylast$ = -20						; size = 4
__Myfirst$ = -16					; size = 4
__My_data$ = -12					; size = 4
__Al$ = -8						; size = 4
_this$ = -4						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@KV?$allocator@K@std@@@std@@AAEXQAKII@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Change_array, COMDAT
; _this$ = ecx

; 1875 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1876 :         // orphan all iterators, discard old array, acquire new array
; 1877 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1878 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1879 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1880 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1881 :         pointer& _Myend   = _My_data._Myend;

	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax

; 1882 : 
; 1883 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1884 : 
; 1885 :         if (_Myfirst) { // destroy and deallocate old array

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@Change_arr

; 1886 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@V?$allocator@K@std@@@std@@YAXPAKQAKAAV?$allocator@K@0@@Z ; std::_Destroy_range<std::allocator<unsigned long> >
	add	esp, 12					; 0000000cH

; 1887 :             _ASAN_VECTOR_REMOVE;
; 1888 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@K@std@@QAEXQAKI@Z ; std::allocator<unsigned long>::deallocate
$LN2@Change_arr:

; 1889 :         }
; 1890 : 
; 1891 :         _Myfirst = _Newvec;

	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR [eax], ecx

; 1892 :         _Mylast  = _Newvec + _Newsize;

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	eax, DWORD PTR __Newvec$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [edx], ecx

; 1893 :         _Myend   = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	mov	ecx, DWORD PTR __Newvec$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [eax], edx

; 1894 :         _ASAN_VECTOR_CREATE;
; 1895 :     }

	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Change_array@?$vector@KV?$allocator@K@std@@@std@@AAEXQAKII@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?_Calculate_growth@?$vector@KV?$allocator@K@std@@@std@@ABEII@Z
_TEXT	SEGMENT
__Geometric$ = -16					; size = 4
__Max$ = -12						; size = 4
__Oldcapacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@KV?$allocator@K@std@@@std@@ABEII@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1823 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1824 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1825 :         const size_type _Oldcapacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
	mov	DWORD PTR __Oldcapacity$[ebp], eax

; 1826 :         const auto _Max              = max_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
	mov	DWORD PTR __Max$[ebp], eax

; 1827 : 
; 1828 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	eax, DWORD PTR __Oldcapacity$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR __Max$[ebp]
	sub	ecx, eax
	cmp	DWORD PTR __Oldcapacity$[ebp], ecx
	jbe	SHORT $LN2@Calculate_

; 1829 :             return _Max; // geometric growth would overflow

	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1830 :         }
; 1831 : 
; 1832 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	mov	edx, DWORD PTR __Oldcapacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Oldcapacity$[ebp]
	mov	DWORD PTR __Geometric$[ebp], edx

; 1833 : 
; 1834 :         if (_Geometric < _Newsize) {

	mov	eax, DWORD PTR __Geometric$[ebp]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN3@Calculate_

; 1835 :             return _Newsize; // geometric growth would be insufficient

	mov	eax, DWORD PTR __Newsize$[ebp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1836 :         }
; 1837 : 
; 1838 :         return _Geometric; // geometric growth is sufficient

	mov	eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:

; 1839 :     }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Calculate_growth@?$vector@KV?$allocator@K@std@@@std@@ABEII@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?back@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
?back@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::back, COMDAT
; _this$ = ecx

; 1809 :     _NODISCARD _CONSTEXPR20 const _Ty& back() const noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1810 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
$LN4@back:

; 1811 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1812 :         _STL_VERIFY(_My_data._Myfirst != _My_data._Mylast, "back() called on empty vector");

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+8]
	je	SHORT $LN7@back
	jmp	SHORT $LN2@back
$LN7@back:
	push	OFFSET ??_C@_0BO@OKMPKPLD@back?$CI?$CJ?5called?5on?5empty?5vector@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1812					; 00000714H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@back
	int	3
$LN11@back:
	push	0
	push	1812					; 00000714H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1EA@OBAHGFFK@?$AA?$CC?$AAb?$AAa?$AAc?$AAk?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd?$AA?5@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@back
$LN2@back:
	xor	eax, eax
	jne	SHORT $LN4@back

; 1813 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1814 : 
; 1815 :         return _My_data._Mylast[-1];

	mov	ecx, 4
	imul	eax, ecx, -1
	mov	edx, DWORD PTR __My_data$[ebp]
	add	eax, DWORD PTR [edx+8]

; 1816 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?back@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[], COMDAT
; _this$ = ecx

; 1744 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1745 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
$LN4@operator:

; 1746 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1747 :         _STL_VERIFY(

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	cmp	DWORD PTR __Pos$[ebp], eax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1748					; 000006d4H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	push	0
	push	1748					; 000006d4H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN4@operator

; 1748 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1749 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1750 : 
; 1751 :         return _My_data._Myfirst[_Pos];

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [edx+eax*4]

; 1752 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity, COMDAT
; _this$ = ecx

; 1739 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1740 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1741 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2

; 1742 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 1734 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1735 :         return (_STD min)(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@KV?$allocator@K@std@@@std@@ABEABV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z ; std::_Default_allocator_traits<std::allocator<unsigned long> >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1736 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1737 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 1729 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1730 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1731 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2

; 1732 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 1656 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1657 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1658 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	ecx, DWORD PTR __My_data$[ebp]
	push	ecx
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@K@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<unsigned long> > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@std@@QAE@PAKPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1659 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@K@std@@@std@@@2@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ?resize@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?resize@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::resize, COMDAT
; _this$ = ecx

; 1452 :     _CONSTEXPR20 void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1453 :         // trim or append value-initialized elements, provide strong guarantee
; 1454 :         _Resize(_Newsize, _Value_init_tag{});

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Resize@U_Value_init_tag@std@@@?$vector@KV?$allocator@K@std@@@std@@AAEXIABU_Value_init_tag@1@@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Resize<std::_Value_init_tag>

; 1455 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?resize@?$vector@KV?$allocator@K@std@@@std@@QAEXI@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -24						; size = 4
_$S21$ = -13						; size = 1
__Alproxy$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 806  :     _CONSTEXPR20 ~vector() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 807  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@AAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy

; 808  : #if _ITERATOR_DEBUG_LEVEL != 0
; 809  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S21$[ebp]
	call	??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>
	lea	eax, DWORD PTR _$S21$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 810  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 811  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 812  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@vector
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@vector:
	DD	1
	DD	$LN4@vector
$LN4@vector:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN3@vector
$LN3@vector:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	49					; 00000031H
	DB	0
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z
_TEXT	SEGMENT
$T2 = -18						; size = 1
$T3 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z PROC ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 679  :     _CONSTEXPR20 explicit vector(const _Alloc& _Al) noexcept : _Mypair(_One_then_variadic_args_t{}, _Al) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABV?$allocator@K@std@@$$V@?$_Compressed_pair@V?$allocator@K@std@@V?$_Vector_val@U?$_Simple_types@K@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@K@1@@Z ; std::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1>::_Compressed_pair<std::allocator<unsigned long>,std::_Vector_val<std::_Simple_types<unsigned long> >,1><std::allocator<unsigned long> const &>

; 680  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@KV?$allocator@K@std@@@std@@AAEAAV?$allocator@K@2@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0K@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@K@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><unsigned long>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 681  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@KV?$allocator@K@std@@@std@@QAE@ABV?$allocator@K@1@@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<unsigned long> >::max_size, COMDAT

; 695  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp

; 696  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 1073741823				; 3fffffffH

; 697  :     }

	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@K@std@@@std@@SAIABV?$allocator@K@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<unsigned long> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC		; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 835  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 836  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 837  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$03@std@@YAII@Z	; std::_Get_size_of_n<4>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 838  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXQAKI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXQAKI@Z PROC		; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@deallocate:

; 830  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN10@deallocate
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN7@deallocate
$LN10@deallocate:
	jmp	SHORT $LN2@deallocate
$LN7@deallocate:
	push	OFFSET ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@deallocate
$LN2@deallocate:
	xor	edx, edx
	jne	SHORT $LN4@deallocate

; 831  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 832  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 833  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@K@std@@QAEXQAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@K@std@@QAE@XZ PROC			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 821  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ PROC ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::~queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::~deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ ENDP ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::~queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\queue
_TEXT	SEGMENT
_this$ = -4						; size = 4
?pop@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEXXZ PROC ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::pop
; _this$ = ecx

; 116  :     void pop() noexcept(noexcept(c.pop_front())) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 117  :         c.pop_front();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::pop_front

; 118  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pop@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEXXZ ENDP ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\queue
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::push
; _this$ = ecx

; 103  :     void push(value_type&& _Val) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 104  :         c.push_back(_STD move(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$move@AAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::queue_entry &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::push_back

; 105  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\queue
_TEXT	SEGMENT
_this$ = -4						; size = 4
?front@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::front
; _this$ = ecx

; 83   :     _NODISCARD reference front() noexcept(noexcept(c.front())) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 84   :         return c.front();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::front

; 85   :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\queue
_TEXT	SEGMENT
_this$ = -4						; size = 4
?empty@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBE_NXZ PROC ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::empty
; _this$ = ecx

; 75   :     _NODISCARD bool empty() const noexcept(noexcept(c.empty())) /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 76   :         return c.empty();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE_NXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::empty

; 77   :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBE_NXZ ENDP ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\queue
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ PROC ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >
; _this$ = ecx

; 34   :     queue() = default;

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 
; 36   :     explicit queue(const _Container& _Cont) : c(_Cont) {}
; 37   : 
; 38   :     explicit queue(_Container&& _Cont) noexcept(is_nothrow_move_constructible_v<_Container>) // strengthened
; 39   :         : c(_STD move(_Cont)) {}
; 40   : 
; 41   : #if _HAS_CXX23
; 42   :     template <class _InIt, enable_if_t<_Is_iterator_v<_InIt>, int> = 0>
; 43   :     queue(_InIt _First, _InIt _Last) noexcept(is_nothrow_constructible_v<_Container, _InIt, _InIt>) // strengthened
; 44   :         : c(_STD move(_First), _STD move(_Last)) {}
; 45   : #endif // _HAS_CXX23
; 46   : 
; 47   :     template <class _Alloc, enable_if_t<uses_allocator_v<_Container, _Alloc>, int> = 0>
; 48   :     explicit queue(const _Alloc& _Al) noexcept(is_nothrow_constructible_v<_Container, const _Alloc&>) // strengthened
; 49   :         : c(_Al) {}
; 50   : 
; 51   :     template <class _Alloc, enable_if_t<uses_allocator_v<_Container, _Alloc>, int> = 0>
; 52   :     queue(const _Container& _Cont, const _Alloc& _Al) : c(_Cont, _Al) {}
; 53   : 
; 54   :     template <class _Alloc, enable_if_t<uses_allocator_v<_Container, _Alloc>, int> = 0>
; 55   :     queue(_Container&& _Cont, const _Alloc& _Al) noexcept(
; 56   :         is_nothrow_constructible_v<_Container, _Container, const _Alloc&>) // strengthened
; 57   :         : c(_STD move(_Cont), _Al) {}
; 58   : 
; 59   :     template <class _Alloc, enable_if_t<uses_allocator_v<_Container, _Alloc>, int> = 0>
; 60   :     queue(const queue& _Right, const _Alloc& _Al) : c(_Right.c, _Al) {}
; 61   : 
; 62   :     template <class _Alloc, enable_if_t<uses_allocator_v<_Container, _Alloc>, int> = 0>
; 63   :     queue(queue&& _Right, const _Alloc& _Al) noexcept(
; 64   :         is_nothrow_constructible_v<_Container, _Container, const _Alloc&>) // strengthened
; 65   :         : c(_STD move(_Right.c), _Al) {}
; 66   : 
; 67   : #if _HAS_CXX23
; 68   :     template <class _InIt, class _Alloc,
; 69   :         enable_if_t<conjunction_v<_Is_iterator<_InIt>, uses_allocator<_Container, _Alloc>>, int> = 0>
; 70   :     queue(_InIt _First, _InIt _Last, const _Alloc& _Al) noexcept(
; 71   :         is_nothrow_constructible_v<_Container, _InIt, _InIt, const _Alloc&>) // strengthened
; 72   :         : c(_STD move(_First), _STD move(_Last), _Al) {}
; 73   : #endif // _HAS_CXX23
; 74   : 
; 75   :     _NODISCARD bool empty() const noexcept(noexcept(c.empty())) /* strengthened */ {
; 76   :         return c.empty();
; 77   :     }
; 78   : 
; 79   :     _NODISCARD size_type size() const noexcept(noexcept(c.size())) /* strengthened */ {
; 80   :         return c.size();
; 81   :     }
; 82   : 
; 83   :     _NODISCARD reference front() noexcept(noexcept(c.front())) /* strengthened */ {
; 84   :         return c.front();
; 85   :     }
; 86   : 
; 87   :     _NODISCARD const_reference front() const noexcept(noexcept(c.front())) /* strengthened */ {
; 88   :         return c.front();
; 89   :     }
; 90   : 
; 91   :     _NODISCARD reference back() noexcept(noexcept(c.back())) /* strengthened */ {
; 92   :         return c.back();
; 93   :     }
; 94   : 
; 95   :     _NODISCARD const_reference back() const noexcept(noexcept(c.back())) /* strengthened */ {
; 96   :         return c.back();
; 97   :     }
; 98   : 
; 99   :     void push(const value_type& _Val) {
; 100  :         c.push_back(_Val);
; 101  :     }
; 102  : 
; 103  :     void push(value_type&& _Val) {
; 104  :         c.push_back(_STD move(_Val));
; 105  :     }
; 106  : 
; 107  :     template <class... _Valty>
; 108  :     decltype(auto) emplace(_Valty&&... _Val) {
; 109  : #if _HAS_CXX17
; 110  :         return c.emplace_back(_STD forward<_Valty>(_Val)...);
; 111  : #else // ^^^ C++17 or newer / C++14 vvv
; 112  :         c.emplace_back(_STD forward<_Valty>(_Val)...);
; 113  : #endif // _HAS_CXX17
; 114  :     }
; 115  : 
; 116  :     void pop() noexcept(noexcept(c.pop_front())) /* strengthened */ {
; 117  :         c.pop_front();
; 118  :     }
; 119  : 
; 120  :     void swap(queue& _Right) noexcept(_Is_nothrow_swappable<_Container>::value) {
; 121  :         _Swap_adl(c, _Right.c);
; 122  :     }
; 123  : 
; 124  :     _NODISCARD const _Container& _Get_container() const noexcept {
; 125  :         return c;
; 126  :     }
; 127  : 
; 128  : protected:
; 129  :     _Container c{};

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >

; 34   :     queue() = default;

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ ENDP ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Get_first
; _this$ = ecx

; 1386 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1388 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Get_first
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABIXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
; _this$ = ecx

; 1574 :     const size_type& _Mysize() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1575 :         return _Get_data()._Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	add	eax, 16					; 00000010H

; 1576 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABIXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
; _this$ = ecx

; 1570 :     size_type& _Mysize() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1571 :         return _Get_data()._Mysize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	add	eax, 16					; 00000010H

; 1572 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABIXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
; _this$ = ecx

; 1566 :     const size_type& _Myoff() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1567 :         return _Get_data()._Myoff;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	add	eax, 12					; 0000000cH

; 1568 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABIXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
; _this$ = ecx

; 1562 :     size_type& _Myoff() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1563 :         return _Get_data()._Myoff;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	add	eax, 12					; 0000000cH

; 1564 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
; _this$ = ecx

; 1554 :     size_type& _Mapsize() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1555 :         return _Get_data()._Mapsize;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	add	eax, 8

; 1556 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
; _this$ = ecx

; 1546 :     _Mapptr& _Map() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1547 :         return _Get_data()._Map;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	add	eax, 4

; 1548 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
; _this$ = ecx

; 1542 :     const _Scary_val& _Get_data() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1543 :         return _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 1544 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
; _this$ = ecx

; 1538 :     _Scary_val& _Get_data() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1539 :         return _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]

; 1540 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
; _this$ = ecx

; 1534 :     const _Alty& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1535 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Get_first

; 1536 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
; _this$ = ecx

; 1530 :     _Alty& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1531 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Get_first

; 1532 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Orphan_all
; _this$ = ecx

; 1526 :     void _Orphan_all() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1527 :         _Get_data()._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	mov	ecx, eax
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1528 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?_Getblock@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock
; _this$ = ecx

; 1522 :     size_type _Getblock(size_type _Off) const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1523 :         return _Get_data()._Getblock(_Off);

	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	mov	ecx, eax
	call	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEII@Z ; std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock

; 1524 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getblock@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
tv71 = -32						; size = 4
__Pnextoff$1 = -28					; size = 4
__Pnext$ = -24						; size = 4
__Lock$ = -16						; size = 4
__Offhigh$ = -8						; size = 4
_this$ = -4						; size = 4
__Offlo$ = 8						; size = 4
?_Orphan_off@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXI@Z PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Orphan_off
; _this$ = ecx

; 1502 :     void _Orphan_off(size_type _Offlo) const noexcept { // orphan iterators with specified offset(s)

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1503 :         size_type _Offhigh = _Myoff() + _Mysize() <= _Offlo + 1 ? static_cast<size_type>(-1) : _Offlo;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	add	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Offlo$[ebp]
	add	edx, 1
	cmp	ecx, edx
	ja	SHORT $LN9@Orphan_off
	mov	DWORD PTR tv71[ebp], -1
	jmp	SHORT $LN10@Orphan_off
$LN9@Orphan_off:
	mov	eax, DWORD PTR __Offlo$[ebp]
	mov	DWORD PTR tv71[ebp], eax
$LN10@Orphan_off:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR __Offhigh$[ebp], ecx

; 1504 :         if (_Offlo == _Myoff()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	edx, DWORD PTR __Offlo$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Orphan_off

; 1505 :             _Offlo = 0;

	mov	DWORD PTR __Offlo$[ebp], 0
$LN4@Orphan_off:

; 1506 :         }
; 1507 : 
; 1508 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1509 :         _Iterator_base12** _Pnext = &_Get_data()._Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	mov	eax, DWORD PTR [eax]
	add	eax, 4
	mov	DWORD PTR __Pnext$[ebp], eax
$LN2@Orphan_off:

; 1510 :         while (*_Pnext) {

	mov	ecx, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Orphan_off

; 1511 :             const auto _Pnextoff = static_cast<const_iterator&>(**_Pnext)._Myoff;

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnextoff$1[ebp], ecx

; 1512 :             if (_Pnextoff < _Offlo || _Offhigh < _Pnextoff) {

	mov	edx, DWORD PTR __Pnextoff$1[ebp]
	cmp	edx, DWORD PTR __Offlo$[ebp]
	jb	SHORT $LN7@Orphan_off
	mov	eax, DWORD PTR __Offhigh$[ebp]
	cmp	eax, DWORD PTR __Pnextoff$1[ebp]
	jae	SHORT $LN5@Orphan_off
$LN7@Orphan_off:

; 1513 :                 _Pnext = &(*_Pnext)->_Mynextiter;

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$[ebp], edx

; 1514 :             } else { // orphan the iterator

	jmp	SHORT $LN6@Orphan_off
$LN5@Orphan_off:

; 1515 :                 (*_Pnext)->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0

; 1516 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], edx
$LN6@Orphan_off:

; 1517 :             }
; 1518 :         }

	jmp	SHORT $LN2@Orphan_off
$LN3@Orphan_off:

; 1519 :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_off
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@Orphan_off:
	DD	1
	DD	$LN12@Orphan_off
$LN12@Orphan_off:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN11@Orphan_off
$LN11@Orphan_off:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_off@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXI@Z ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Orphan_off
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
__Block$2 = -32						; size = 4
__Almap$ = -21						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Tidy
; _this$ = ecx

; 1478 :     void _Tidy() noexcept { // free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1479 :         _Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Orphan_all

; 1480 : 
; 1481 :         _Alpty _Almap(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::allocator<luabind::detail::`anonymous namespace'::queue_entry *><luabind::detail::`anonymous namespace'::queue_entry>
$LN2@Tidy:

; 1482 :         while (!empty()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE_NXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@Tidy

; 1483 :             pop_back();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?pop_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::pop_back

; 1484 :         }

	jmp	SHORT $LN2@Tidy
$LN3@Tidy:

; 1485 : 
; 1486 :         for (size_type _Block = _Mapsize(); 0 < _Block;) { // free storage for a block and destroy pointer

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Block$2[ebp], ecx
$LN6@Tidy:
	cmp	DWORD PTR __Block$2[ebp], 0
	jbe	SHORT $LN5@Tidy

; 1487 :             if (_Map()[--_Block]) { // free block and destroy its pointer

	mov	edx, DWORD PTR __Block$2[ebp]
	sub	edx, 1
	mov	DWORD PTR __Block$2[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Block$2[ebp]
	cmp	DWORD PTR [eax+ecx*4], 0
	je	SHORT $LN7@Tidy

; 1488 :                 _Getal().deallocate(_Map()[_Block], _Block_size);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Block$2[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	mov	ecx, eax
	call	?deallocate@?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::deallocate

; 1489 :                 _Destroy_in_place(_Map()[_Block]);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Block$2[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	??$_Destroy_in_place@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAXAAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Destroy_in_place<luabind::detail::`anonymous namespace'::queue_entry *>
	add	esp, 4
$LN7@Tidy:

; 1490 :             }
; 1491 :         }

	jmp	SHORT $LN6@Tidy
$LN5@Tidy:

; 1492 : 
; 1493 :         if (_Map() != _Mapptr()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN8@Tidy

; 1494 :             _Almap.deallocate(_Map(), _Mapsize()); // free storage for map

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?deallocate@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::deallocate
$LN8@Tidy:

; 1495 :         }
; 1496 : 
; 1497 :         _Mapsize() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	DWORD PTR [eax], 0

; 1498 :         _Map()     = _Mapptr();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	DWORD PTR [eax], 0

; 1499 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Tidy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@Tidy:
	DD	1
	DD	$LN12@Tidy
$LN12@Tidy:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN10@Tidy
$LN10@Tidy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?_Tidy@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Tidy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
tv212 = -40						; size = 4
tv73 = -36						; size = 4
__Myptr$ = -32						; size = 4
__Newmap$ = -28						; size = 4
__Myboff$ = -24						; size = 4
__Newsize$ = -20					; size = 4
__Almap$ = -9						; size = 1
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Growmap@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Growmap
; _this$ = ecx

; 1439 :     void _Growmap(size_type _Count) { // grow map by at least _Count pointers, _Mapsize() a power of 2

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1440 :         static_assert(1 < _Minimum_map_size, "The _Xlen() test should always be performed.");
; 1441 : 
; 1442 :         _Alpty _Almap(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::allocator<luabind::detail::`anonymous namespace'::queue_entry *><luabind::detail::`anonymous namespace'::queue_entry>

; 1443 :         size_type _Newsize = 0 < _Mapsize() ? _Mapsize() : 1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	cmp	DWORD PTR [eax], 0
	jbe	SHORT $LN10@Growmap
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN11@Growmap
$LN10@Growmap:
	mov	DWORD PTR tv73[ebp], 1
$LN11@Growmap:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Newsize$[ebp], ecx
$LN2@Growmap:

; 1444 :         while (_Newsize - _Mapsize() < _Count || _Newsize < _Minimum_map_size) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	edx, DWORD PTR __Newsize$[ebp]
	sub	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Count$[ebp]
	jb	SHORT $LN4@Growmap
	cmp	DWORD PTR __Newsize$[ebp], 8
	jae	SHORT $LN3@Growmap
$LN4@Growmap:

; 1445 :             // scale _Newsize to 2^N >= _Mapsize() + _Count
; 1446 :             if (max_size() / _Block_size - _Newsize < _Newsize) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::max_size
	sub	eax, DWORD PTR __Newsize$[ebp]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Growmap

; 1447 :                 _Xlen(); // result too long

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Xlen
$LN5@Growmap:

; 1448 :             }
; 1449 : 
; 1450 :             _Newsize *= 2;

	mov	eax, DWORD PTR __Newsize$[ebp]
	shl	eax, 1
	mov	DWORD PTR __Newsize$[ebp], eax

; 1451 :         }

	jmp	SHORT $LN2@Growmap
$LN3@Growmap:

; 1452 :         _Count = _Newsize - _Mapsize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Count$[ebp], ecx

; 1453 : 
; 1454 :         size_type _Myboff = _Myoff() / _Block_size;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Myboff$[ebp], edx

; 1455 :         _Mapptr _Newmap   = _Almap.allocate(_Mapsize() + _Count);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?allocate@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::allocate
	mov	DWORD PTR __Newmap$[ebp], eax

; 1456 :         _Mapptr _Myptr    = _Newmap + _Myboff;

	mov	ecx, DWORD PTR __Myboff$[ebp]
	mov	edx, DWORD PTR __Newmap$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Myptr$[ebp], eax

; 1457 : 
; 1458 :         _Myptr = _STD uninitialized_copy(_Map() + _Myboff, _Map() + _Mapsize(), _Myptr); // copy initial to end

	mov	ecx, DWORD PTR __Myptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Myboff$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	??$uninitialized_copy@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0PAPAU1234@@Z ; std::uninitialized_copy<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Myptr$[ebp], eax

; 1459 :         if (_Myboff <= _Count) { // increment greater than offset of initial block

	mov	edx, DWORD PTR __Myboff$[ebp]
	cmp	edx, DWORD PTR __Count$[ebp]
	ja	SHORT $LN6@Growmap

; 1460 :             _Myptr = _STD uninitialized_copy(_Map(), _Map() + _Myboff, _Myptr); // copy rest of old

	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Myboff$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$uninitialized_copy@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0PAPAU1234@@Z ; std::uninitialized_copy<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Myptr$[ebp], eax

; 1461 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count - _Myboff); // clear suffix of new

	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, DWORD PTR __Myboff$[ebp]
	push	edx
	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	call	??$_Uninitialized_value_construct_n_unchecked1@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<luabind::detail::`anonymous namespace'::queue_entry * *,unsigned int>
	add	esp, 8

; 1462 :             _Uninitialized_value_construct_n_unchecked1(_Newmap, _Myboff); // clear prefix of new

	mov	ecx, DWORD PTR __Myboff$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newmap$[ebp]
	push	edx
	call	??$_Uninitialized_value_construct_n_unchecked1@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<luabind::detail::`anonymous namespace'::queue_entry * *,unsigned int>
	add	esp, 8

; 1463 :         } else { // increment not greater than offset of initial block

	jmp	SHORT $LN7@Growmap
$LN6@Growmap:

; 1464 :             _STD uninitialized_copy(_Map(), _Map() + _Count, _Myptr); // copy more old

	mov	eax, DWORD PTR __Myptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$uninitialized_copy@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0PAPAU1234@@Z ; std::uninitialized_copy<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 12					; 0000000cH

; 1465 :             _Myptr = _STD uninitialized_copy(_Map() + _Count, _Map() + _Myboff, _Newmap); // copy rest of old

	mov	edx, DWORD PTR __Newmap$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Myboff$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	call	??$uninitialized_copy@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@0PAPAU1234@@Z ; std::uninitialized_copy<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Myptr$[ebp], eax

; 1466 :             _Uninitialized_value_construct_n_unchecked1(_Myptr, _Count); // clear rest to initial block

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Myptr$[ebp]
	push	ecx
	call	??$_Uninitialized_value_construct_n_unchecked1@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@std@@YAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@I@Z ; std::_Uninitialized_value_construct_n_unchecked1<luabind::detail::`anonymous namespace'::queue_entry * *,unsigned int>
	add	esp, 8
$LN7@Growmap:

; 1467 :         }
; 1468 : 
; 1469 :         _Destroy_range(_Map() + _Myboff, _Map() + _Mapsize());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Myboff$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	??$_Destroy_range@PAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAPAU1234@@std@@YAXPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@QAPAU1234@@Z ; std::_Destroy_range<luabind::detail::`anonymous namespace'::queue_entry * *,luabind::detail::A0x28cf8a89::queue_entry * *>
	add	esp, 8

; 1470 :         if (_Map() != _Mapptr()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN8@Growmap

; 1471 :             _Almap.deallocate(_Map(), _Mapsize()); // free storage for old

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR __Almap$[ebp]
	call	?deallocate@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::deallocate
$LN8@Growmap:

; 1472 :         }
; 1473 : 
; 1474 :         _Map() = _Newmap; // point at new

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	ecx, DWORD PTR __Newmap$[ebp]
	mov	DWORD PTR [eax], ecx

; 1475 :         _Mapsize() += _Count;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mapsize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mapsize
	mov	DWORD PTR tv212[ebp], eax
	mov	edx, DWORD PTR tv212[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR tv212[ebp]
	mov	DWORD PTR [ecx], eax
$LN9@Growmap:

; 1476 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@Growmap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN14@Growmap:
	DD	1
	DD	$LN13@Growmap
$LN13@Growmap:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN12@Growmap
$LN12@Growmap:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
?_Growmap@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Growmap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Xlen
; _this$ = ecx

; 1431 :     [[noreturn]] void _Xlen() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1432 :         _Xlength_error("deque<T> too long");

	push	OFFSET ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen:

; 1433 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
tv141 = -28						; size = 4
__Block$2 = -24						; size = 4
__Newoff$3 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?pop_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::pop_back
; _this$ = ecx

; 1131 :     void pop_back() noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?pop_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1132 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1133 :         if (empty()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE_NXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@pop_back
$LN4@pop_back:

; 1134 :             _STL_REPORT_ERROR("deque empty before pop");

	push	OFFSET ??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1134					; 0000046eH
	push	OFFSET ??_C@_0GA@KKMOOLCJ@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN9@pop_back
	int	3
$LN9@pop_back:
	push	0
	push	1134					; 0000046eH
	push	OFFSET ??_C@_1MA@PNGIEGJG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN4@pop_back

; 1135 :         } else { // something to erase, do it

	jmp	$LN8@pop_back
$LN5@pop_back:

; 1136 :             size_type _Newoff = _Myoff() + _Mysize() - 1;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	DWORD PTR __Newoff$3[ebp], eax

; 1137 :             _Orphan_off(_Newoff);

	mov	ecx, DWORD PTR __Newoff$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_off@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXI@Z ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Orphan_off

; 1138 :             size_type _Block = _Getblock(_Newoff);

	mov	edx, DWORD PTR __Newoff$3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock
	mov	DWORD PTR __Block$2[ebp], eax

; 1139 :             _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Newoff % _Block_size));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR __Newoff$3[ebp]
	xor	edx, edx
	mov	esi, 1
	div	esi
	imul	edx, edx, 12
	mov	eax, DWORD PTR __Block$2[ebp]
	add	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	??$_Unfancy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::queue_entry>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	push	eax
	call	??$destroy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::destroy<luabind::detail::`anonymous namespace'::queue_entry>
	add	esp, 8

; 1140 :             if (--_Mysize() == 0) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR tv141[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN8@pop_back

; 1141 :                 _Myoff() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	DWORD PTR [eax], 0
$LN8@pop_back:

; 1142 :             }
; 1143 :         }
; 1144 : 
; 1145 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1146 :         size_type _Newoff = _Myoff() + _Mysize() - 1;
; 1147 :         size_type _Block  = _Getblock(_Newoff);
; 1148 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Newoff % _Block_size));
; 1149 :         if (--_Mysize() == 0) {
; 1150 :             _Myoff() = 0;
; 1151 :         }
; 1152 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1153 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?pop_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?pop_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?pop_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::pop_back
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
tv148 = -28						; size = 4
tv141 = -24						; size = 4
__Block$2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?pop_front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::pop_front
; _this$ = ecx

; 1080 :     void pop_front() noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?pop_front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1081 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1082 :         if (empty()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE_NXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@pop_front
$LN4@pop_front:

; 1083 :             _STL_REPORT_ERROR("deque empty before pop");

	push	OFFSET ??_C@_0BH@EDKEEENI@deque?5empty?5before?5pop@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1083					; 0000043bH
	push	OFFSET ??_C@_0GA@KKMOOLCJ@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN10@pop_front
	int	3
$LN10@pop_front:
	push	0
	push	1083					; 0000043bH
	push	OFFSET ??_C@_1MA@PNGIEGJG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1DC@NJAACHCD@?$AA?$CC?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN4@pop_front

; 1084 :         } else { // something to erase, do it

	jmp	$LN9@pop_front
$LN5@pop_front:

; 1085 :             _Orphan_off(_Myoff());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_off@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXI@Z ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Orphan_off

; 1086 :             size_type _Block = _Getblock(_Myoff());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getblock@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock
	mov	DWORD PTR __Block$2[ebp], eax

; 1087 :             _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Myoff() % _Block_size));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Map@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Map
	mov	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	eax, DWORD PTR [eax]
	xor	edx, edx
	mov	ecx, 1
	div	ecx
	imul	edx, edx, 12
	mov	eax, DWORD PTR __Block$2[ebp]
	add	edx, DWORD PTR [esi+eax*4]
	push	edx
	call	??$_Unfancy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@PAU1234@@Z ; std::_Unfancy<luabind::detail::`anonymous namespace'::queue_entry>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	push	eax
	call	??$destroy@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAXAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::destroy<luabind::detail::`anonymous namespace'::queue_entry>
	add	esp, 8

; 1088 :             if (--_Mysize() == 0) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR tv141[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN7@pop_front

; 1089 :                 _Myoff() = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	DWORD PTR [eax], 0

; 1090 :             } else {

	jmp	SHORT $LN9@pop_front
$LN7@pop_front:

; 1091 :                 ++_Myoff();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	DWORD PTR tv148[ebp], eax
	mov	edx, DWORD PTR tv148[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR tv148[ebp]
	mov	DWORD PTR [ecx], eax
$LN9@pop_front:

; 1092 :             }
; 1093 :         }
; 1094 : 
; 1095 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1096 :         size_type _Block = _Getblock(_Myoff());
; 1097 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Map()[_Block] + _Myoff() % _Block_size));
; 1098 :         if (--_Mysize() == 0) {
; 1099 :             _Myoff() = 0;
; 1100 :         } else {
; 1101 :             ++_Myoff();
; 1102 :         }
; 1103 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1104 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?pop_front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?pop_front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?pop_front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::pop_front
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
?front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::front
; _this$ = ecx

; 1044 :     _NODISCARD reference front() noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@front:

; 1045 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1046 :         _STL_VERIFY(!empty(), "front() called on empty deque");

	mov	ecx, DWORD PTR _this$[ebp]
	call	?empty@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE_NXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@front
	jmp	SHORT $LN2@front
$LN7@front:
	push	OFFSET ??_C@_0BO@PEOHNLIM@front?$CI?$CJ?5called?5on?5empty?5deque@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1046					; 00000416H
	push	OFFSET ??_C@_0GA@KKMOOLCJ@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@front
	int	3
$LN11@front:
	push	0
	push	1046					; 00000416H
	push	OFFSET ??_C@_1MA@PNGIEGJG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1EA@EELNAHHD@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@front
$LN2@front:
	xor	eax, eax
	jne	SHORT $LN4@front

; 1047 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1048 : 
; 1049 :         return *_Unchecked_begin();

	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_begin@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Unchecked_begin
	mov	ecx, eax
	call	??D?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::_Deque_unchecked_iterator<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >::operator*

; 1050 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?front@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE_NXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::empty
; _this$ = ecx

; 1004 :     _NODISCARD bool empty() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1005 :         return _Mysize() == 0;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Mysize@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Mysize
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv67[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv67[ebp]

; 1006 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE_NXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::max_size
; _this$ = ecx

; 999  :     _NODISCARD size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1000 :         return (_STD min)(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1001 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1002 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Unchecked_begin
; _this$ = ecx

; 907  :     _Unchecked_iterator _Unchecked_begin() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 908  :         return _Unchecked_iterator(_Myoff(), _STD addressof(_Get_data()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	push	eax
	call	??$addressof@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z ; std::addressof<std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myoff@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAIXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Myoff
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 909  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Deque_unchecked_iterator@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
$T1 = -20						; size = 4
__Proxy_allocator$ = -9					; size = 1
_this$ = -4						; size = 4
??1?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::~deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >
; _this$ = ecx

; 865  :     ~deque() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 866  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Tidy

; 867  :         _Alproxy_ty _Proxy_allocator(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Proxy_allocator$[ebp]
	call	??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::queue_entry>

; 868  :         _Delete_plain_internal(_Proxy_allocator, _STD exchange(_Get_data()._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	push	eax
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	lea	ecx, DWORD PTR __Proxy_allocator$[ebp]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 869  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@deque
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@deque:
	DD	1
	DD	$LN4@deque
$LN4@deque:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@deque
$LN3@deque:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
??1?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::~deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::push_back
; _this$ = ecx

; 782  :     void push_back(_Ty&& _Val) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 783  :         _Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Orphan_all

; 784  :         _Emplace_back_internal(_STD move(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$move@AAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::queue_entry &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace_back_internal@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Emplace_back_internal<luabind::detail::`anonymous namespace'::queue_entry>

; 785  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
$T1 = -6						; size = 1
$T2 = -5						; size = 1
_this$ = -4						; size = 4
??0?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >
; _this$ = ecx

; 621  :     deque() : _Mypair(_Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@V?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::queue_entry>,std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >,1><>

; 622  :         _Get_data()._Alloc_proxy(static_cast<_Alproxy_ty>(_Getal()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	call	??$?0Uqueue_entry@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::queue_entry>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_data@?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@2@XZ ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::_Get_data
	mov	ecx, eax
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 623  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEII@Z PROC ; std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock
; _this$ = ecx

; 569  :     size_type _Getblock(size_type _Off) const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 570  :         // NB: _Mapsize and _Block_size are guaranteed to be powers of 2
; 571  :         return (_Off / _Block_size) & (_Mapsize - 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, 1
	and	eax, DWORD PTR __Off$[ebp]

; 572  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEII@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\deque
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >
; _this$ = ecx

; 567  :     _Deque_val() noexcept : _Map(), _Mapsize(0), _Myoff(0), _Mysize(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Deque_val@U?$_Deque_simple_types@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >::_Deque_val<std::_Deque_simple_types<luabind::detail::`anonymous namespace'::queue_entry> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::allocate
; _this$ = ecx

; 835  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 836  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 837  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$03@std@@YAII@Z	; std::_Get_size_of_n<4>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 838  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::deallocate
; _this$ = ecx

; 829  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@deallocate:

; 830  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN10@deallocate
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN7@deallocate
$LN10@deallocate:
	jmp	SHORT $LN2@deallocate
$LN7@deallocate:
	push	OFFSET ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@deallocate
$LN2@deallocate:
	xor	edx, edx
	jne	SHORT $LN4@deallocate

; 831  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 832  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 833  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAUqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::max_size

; 695  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp

; 696  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 357913941				; 15555555H

; 697  :     }

	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::queue_entry> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::allocate
; _this$ = ecx

; 835  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 836  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 837  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0M@@std@@YAII@Z	; std::_Get_size_of_n<12>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 838  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::deallocate
; _this$ = ecx

; 829  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@deallocate:

; 830  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN10@deallocate
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN7@deallocate
$LN10@deallocate:
	jmp	SHORT $LN2@deallocate
$LN7@deallocate:
	push	OFFSET ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@deallocate
$LN2@deallocate:
	xor	edx, edx
	jne	SHORT $LN4@deallocate

; 831  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 832  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 833  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUqueue_entry@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ PROC ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::allocator<luabind::detail::`anonymous namespace'::queue_entry>
; _this$ = ecx

; 821  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ENDP ; std::allocator<luabind::detail::`anonymous namespace'::queue_entry>::allocator<luabind::detail::`anonymous namespace'::queue_entry>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0PADH$0A@@?$pair@PAXH@std@@QAE@$$QAU?$pair@PADH@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0PADH$0A@@?$pair@PAXH@std@@QAE@$$QAU?$pair@PADH@1@@Z PROC ; std::pair<void *,int>::pair<void *,int><char *,int,0>, COMDAT
; _this$ = ecx

; 256  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@PAD@std@@YA$$QAPADAAPAD@Z	; std::forward<char *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	call	??$forward@H@std@@YA$$QAHAAH@Z		; std::forward<int>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PADH$0A@@?$pair@PAXH@std@@QAE@$$QAU?$pair@PADH@1@@Z ENDP ; std::pair<void *,int>::pair<void *,int><char *,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$make_pair@PADAAH@std@@YA?AU?$pair@PADH@0@$$QAPADAAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@PADAAH@std@@YA?AU?$pair@PADH@0@$$QAPADAAH@Z PROC ; std::make_pair<char *,int &>, COMDAT

; 515  :         is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) /* strengthened */ {

	push	ebp
	mov	ebp, esp

; 516  :     // return pair composed from arguments
; 517  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 518  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAH@std@@YAAAHAAH@Z		; std::forward<int &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@PAD@std@@YA$$QAPADAAPAD@Z	; std::forward<char *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PADAAH$0A@@?$pair@PADH@std@@QAE@$$QAPADAAH@Z ; std::pair<char *,int>::pair<char *,int><char *,int &,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 519  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$make_pair@PADAAH@std@@YA?AU?$pair@PADH@0@$$QAPADAAH@Z ENDP ; std::make_pair<char *,int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@ABQAXABH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@ABQAXABH@Z PROC	; std::pair<void *,int>::pair<void *,int><void *,int,0>, COMDAT
; _this$ = ecx

; 160  :         : first(_Val1), second(_Val2) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@ABQAXABH@Z ENDP	; std::pair<void *,int>::pair<void *,int><void *,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@$$QAPAX$$QAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@$$QAPAX$$QAH@Z PROC	; std::pair<void *,int>::pair<void *,int><void *,int,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@PAX@std@@YA$$QAPAXAAPAX@Z	; std::forward<void *>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@H@std@@YA$$QAHAAH@Z		; std::forward<int>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@$$QAPAX$$QAH@Z ENDP	; std::pair<void *,int>::pair<void *,int><void *,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$make_pair@ABQAXH@std@@YA?AU?$pair@PAXH@0@ABQAX$$QAH@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@ABQAXH@std@@YA?AU?$pair@PAXH@0@ABQAX$$QAH@Z PROC ; std::make_pair<void * const &,int>, COMDAT

; 515  :         is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) /* strengthened */ {

	push	ebp
	mov	ebp, esp

; 516  :     // return pair composed from arguments
; 517  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 518  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@H@std@@YA$$QAHAAH@Z		; std::forward<int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@ABQAX@std@@YAABQAXABQAX@Z	; std::forward<void * const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0ABQAXH$0A@@?$pair@PAXH@std@@QAE@ABQAX$$QAH@Z ; std::pair<void *,int>::pair<void *,int><void * const &,int,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 519  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$make_pair@ABQAXH@std@@YA?AU?$pair@PAXH@0@ABQAX$$QAH@Z ENDP ; std::make_pair<void * const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
_vertex_id$ = 12					; size = 4
_distance$ = 16						; size = 4
??0queue_entry@?A0x28cf8a89@detail@luabind@@QAE@PAXIH@Z PROC ; luabind::detail::`anonymous namespace'::queue_entry::queue_entry
; _this$ = ecx

; 130  :       {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 127  :         : p(p)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx

; 128  :         , vertex_id(vertex_id)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _vertex_id$[ebp]
	mov	DWORD PTR [edx+4], eax

; 129  :         , distance(distance)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _distance$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 130  :       {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0queue_entry@?A0x28cf8a89@detail@luabind@@QAE@PAXIH@Z ENDP ; luabind::detail::`anonymous namespace'::queue_entry::queue_entry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gimpl@cast_graph@detail@luabind@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gimpl@cast_graph@detail@luabind@@QAEPAXI@Z PROC	; luabind::detail::cast_graph::impl::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1impl@cast_graph@detail@luabind@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gimpl@cast_graph@detail@luabind@@QAEPAXI@Z ENDP	; luabind::detail::cast_graph::impl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1impl@cast_graph@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1impl@cast_graph@detail@luabind@@QAE@XZ PROC		; luabind::detail::cast_graph::impl::~impl, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1cache@?A0x28cf8a89@detail@luabind@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::~vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1impl@cast_graph@detail@luabind@@QAE@XZ ENDP		; luabind::detail::cast_graph::impl::~impl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0impl@cast_graph@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0impl@cast_graph@detail@luabind@@QAE@XZ PROC		; luabind::detail::cast_graph::impl::impl, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0impl@cast_graph@detail@luabind@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0cache@?A0x28cf8a89@detail@luabind@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0impl@cast_graph@detail@luabind@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::~vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0impl@cast_graph@detail@luabind@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0impl@cast_graph@detail@luabind@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0impl@cast_graph@detail@luabind@@QAE@XZ ENDP		; luabind::detail::cast_graph::impl::impl
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Get_first
; _this$ = ecx

; 1386 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1388 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Get_first
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >
; _this$ = ecx

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
; _this$ = ecx

; 2047 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2048 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Get_first

; 2049 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
; _this$ = ecx

; 2043 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2044 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Get_first

; 2045 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range
; _this$ = ecx

; 2028 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2029 :         // orphan iterators within specified (inclusive) range
; 2030 : #if _HAS_CXX20
; 2031 :         if (_STD is_constant_evaluated()) {
; 2032 :             _Orphan_range_unlocked(_First, _Last);
; 2033 :         } else
; 2034 : #endif // _HAS_CXX20
; 2035 :         {
; 2036 :             _Orphan_range_locked(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range_locked

; 2037 :         }
; 2038 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range_locked
; _this$ = ecx

; 2023 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2024 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2025 :         _Orphan_range_unlocked(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range_unlocked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range_unlocked

; 2026 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@Orphan_ran:
	DD	1
	DD	$LN6@Orphan_ran
$LN6@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Orphan_ran
$LN4@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range_locked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range_locked
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Temp$1 = -20						; size = 4
__Temp$2 = -16						; size = 4
__Pnextptr$3 = -12					; size = 4
__Pnext$ = -8						; size = 4
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range_unlocked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range_unlocked
; _this$ = ecx

; 2008 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 2009 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx
$LN2@Orphan_ran:

; 2010 :         while (*_Pnext) {

	mov	edx, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@Orphan_ran

; 2011 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Pnextptr$3[ebp], edx

; 2012 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	eax, DWORD PTR __Pnextptr$3[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN6@Orphan_ran
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Pnextptr$3[ebp]
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 2013 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Temp$2[ebp], eax

; 2014 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	ecx, DWORD PTR __Temp$2[ebp]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 2015 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2016 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Temp$1[ebp], eax

; 2017 :                 _Temp->_Myproxy  = nullptr;

	mov	ecx, DWORD PTR __Temp$1[ebp]
	mov	DWORD PTR [ecx], 0

; 2018 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR __Temp$1[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx], ecx
$LN5@Orphan_ran:

; 2019 :             }
; 2020 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN1@Orphan_ran:

; 2021 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range_unlocked@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUvertex@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
?_Xlength@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@CAXXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Xlength

; 1999 :     [[noreturn]] static void _Xlength() {

	push	ebp
	mov	ebp, esp

; 2000 :         _Xlength_error("vector too long");

	push	OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 2001 :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Xlength@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@CAXXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Myend$ = -36						; size = 4
__Mylast$ = -32						; size = 4
__Myfirst$ = -28					; size = 4
__My_data$ = -24					; size = 4
__Al$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Tidy
; _this$ = ecx

; 1897 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1898 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1899 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1900 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1901 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1902 :         pointer& _Myend   = _My_data._Myend;

	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax

; 1903 : 
; 1904 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1905 : 
; 1906 :         if (_Myfirst) { // destroy and deallocate old array

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Tidy

; 1907 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 12					; 0000000cH

; 1908 :             _ASAN_VECTOR_REMOVE;
; 1909 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::deallocate

; 1910 : 
; 1911 :             _Myfirst = nullptr;

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	DWORD PTR [ecx], 0

; 1912 :             _Mylast  = nullptr;

	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [edx], 0

; 1913 :             _Myend   = nullptr;

	mov	eax, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@Tidy:

; 1914 :         }
; 1915 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?_Tidy@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Tidy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Myend$ = -24						; size = 4
__Mylast$ = -20						; size = 4
__Myfirst$ = -16					; size = 4
__My_data$ = -12					; size = 4
__Al$ = -8						; size = 4
_this$ = -4						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXQAUvertex@?A0x28cf8a89@detail@luabind@@II@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Change_array
; _this$ = ecx

; 1875 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1876 :         // orphan all iterators, discard old array, acquire new array
; 1877 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1878 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1879 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1880 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1881 :         pointer& _Myend   = _My_data._Myend;

	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax

; 1882 : 
; 1883 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1884 : 
; 1885 :         if (_Myfirst) { // destroy and deallocate old array

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@Change_arr

; 1886 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 12					; 0000000cH

; 1887 :             _ASAN_VECTOR_REMOVE;
; 1888 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::deallocate
$LN2@Change_arr:

; 1889 :         }
; 1890 : 
; 1891 :         _Myfirst = _Newvec;

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR [ecx], edx

; 1892 :         _Mylast  = _Newvec + _Newsize;

	imul	eax, DWORD PTR __Newsize$[ebp], 20
	add	eax, DWORD PTR __Newvec$[ebp]
	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [ecx], eax

; 1893 :         _Myend   = _Newvec + _Newcapacity;

	imul	edx, DWORD PTR __Newcapacity$[ebp], 20
	add	edx, DWORD PTR __Newvec$[ebp]
	mov	eax, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [eax], edx

; 1894 :         _ASAN_VECTOR_CREATE;
; 1895 :     }

	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Change_array@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXQAUvertex@?A0x28cf8a89@detail@luabind@@II@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Geometric$ = -16					; size = 4
__Max$ = -12						; size = 4
__Oldcapacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Calculate_growth
; _this$ = ecx

; 1823 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1824 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1825 :         const size_type _Oldcapacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::capacity
	mov	DWORD PTR __Oldcapacity$[ebp], eax

; 1826 :         const auto _Max              = max_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::max_size
	mov	DWORD PTR __Max$[ebp], eax

; 1827 : 
; 1828 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	eax, DWORD PTR __Oldcapacity$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR __Max$[ebp]
	sub	ecx, eax
	cmp	DWORD PTR __Oldcapacity$[ebp], ecx
	jbe	SHORT $LN2@Calculate_

; 1829 :             return _Max; // geometric growth would overflow

	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1830 :         }
; 1831 : 
; 1832 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	mov	edx, DWORD PTR __Oldcapacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Oldcapacity$[ebp]
	mov	DWORD PTR __Geometric$[ebp], edx

; 1833 : 
; 1834 :         if (_Geometric < _Newsize) {

	mov	eax, DWORD PTR __Geometric$[ebp]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN3@Calculate_

; 1835 :             return _Newsize; // geometric growth would be insufficient

	mov	eax, DWORD PTR __Newsize$[ebp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1836 :         }
; 1837 : 
; 1838 :         return _Geometric; // geometric growth is sufficient

	mov	eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:

; 1839 :     }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Calculate_growth@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEABUvertex@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::operator[]
; _this$ = ecx

; 1754 :     _NODISCARD _CONSTEXPR20 const _Ty& operator[](const size_type _Pos) const noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1755 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
$LN4@operator:

; 1756 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1757 :         _STL_VERIFY(

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	cmp	DWORD PTR __Pos$[ebp], eax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1758					; 000006deH
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	push	0
	push	1758					; 000006deH
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	eax, eax
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	ecx, ecx
	jne	SHORT $LN4@operator

; 1758 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1759 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1760 : 
; 1761 :         return _My_data._Myfirst[_Pos];

	imul	eax, DWORD PTR __Pos$[ebp], 20
	mov	edx, DWORD PTR __My_data$[ebp]
	add	eax, DWORD PTR [edx+4]

; 1762 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEABUvertex@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUvertex@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::operator[]
; _this$ = ecx

; 1744 :     _NODISCARD _CONSTEXPR20 _Ty& operator[](const size_type _Pos) noexcept /* strengthened */ {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1745 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
$LN4@operator:

; 1746 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1747 :         _STL_VERIFY(

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	cmp	DWORD PTR __Pos$[ebp], eax
	jae	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1748					; 000006d4H
	push	OFFSET ??_C@_0GB@FLOGEF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	push	0
	push	1748					; 000006d4H
	push	OFFSET ??_C@_1MC@LACENGKK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	eax, eax
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	ecx, ecx
	jne	SHORT $LN4@operator

; 1748 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");
; 1749 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1750 : 
; 1751 :         return _My_data._Myfirst[_Pos];

	imul	eax, DWORD PTR __Pos$[ebp], 20
	mov	edx, DWORD PTR __My_data$[ebp]
	add	eax, DWORD PTR [edx+4]

; 1752 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
?capacity@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::capacity
; _this$ = ecx

; 1739 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1740 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1741 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx

; 1742 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::max_size
; _this$ = ecx

; 1734 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1735 :         return (_STD min)(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1736 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1737 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
?size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::size
; _this$ = ecx

; 1729 :     _NODISCARD _CONSTEXPR20 size_type size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1730 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1731 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx

; 1732 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Newcapacity$ = 8					; size = 4
?reserve@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXI@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::reserve
; _this$ = ecx

; 1540 :     _CONSTEXPR20 void reserve(_CRT_GUARDOVERFLOW const size_type _Newcapacity) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1541 :         // increase capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1542 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::capacity
	cmp	DWORD PTR __Newcapacity$[ebp], eax
	jbe	SHORT $LN4@reserve

; 1543 :             if (_Newcapacity > max_size()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::max_size
	cmp	DWORD PTR __Newcapacity$[ebp], eax
	jbe	SHORT $LN3@reserve

; 1544 :                 _Xlength();

	call	?_Xlength@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@CAXXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Xlength
$LN3@reserve:

; 1545 :             }
; 1546 : 
; 1547 :             _Reallocate_exactly(_Newcapacity);

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Reallocate_exactly
$LN4@reserve:

; 1548 :         }
; 1549 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?reserve@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXI@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Newvec$ = -44						; size = 4
__Size$ = -40						; size = 4
__Mylast$ = -36						; size = 4
__Myfirst$ = -32					; size = 4
__My_data$ = -28					; size = 4
__Al$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newcapacity$ = 8					; size = 4
?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Reallocate_exactly
; _this$ = ecx

; 1463 :     _CONSTEXPR20 void _Reallocate_exactly(const size_type _Newcapacity) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 1464 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1465 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1466 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1467 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1468 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1469 : 
; 1470 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR __Size$[ebp], eax

; 1471 : 
; 1472 :         const pointer _Newvec = _Al.allocate(_Newcapacity);

	mov	edx, DWORD PTR __Newcapacity$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::allocate
	mov	DWORD PTR __Newvec$[ebp], eax

; 1473 : 
; 1474 :         _TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 1475 :         if constexpr (is_nothrow_move_constructible_v<_Ty> || !is_copy_constructible_v<_Ty>) {
; 1476 :             _Uninitialized_move(_Myfirst, _Mylast, _Newvec, _Al);

	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$_Uninitialized_move@PAUvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAPAUvertex@?A0x28cf8a89@detail@luabind@@QAU1234@0PAU1234@AAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Uninitialized_move<luabind::detail::`anonymous namespace'::vertex *,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
	add	esp, 16					; 00000010H
	jmp	SHORT $LN4@Reallocate
__catch$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z$0:

; 1477 :         } else {
; 1478 :             _Uninitialized_copy(_Myfirst, _Mylast, _Newvec, _Al);
; 1479 :         }
; 1480 :         _CATCH_ALL
; 1481 :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::deallocate

; 1482 :         _RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 1483 :         _CATCH_END

	mov	eax, $LN7@Reallocate
	ret	0
$LN4@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z$1
$LN7@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z$1:

; 1484 : 
; 1485 :         _Change_array(_Newvec, _Size, _Newcapacity);

	mov	edx, DWORD PTR __Newcapacity$[ebp]
	push	edx
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_array@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXQAUvertex@?A0x28cf8a89@detail@luabind@@II@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Change_array
$LN3@Reallocate:

; 1486 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate_exactly@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXI@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Reallocate_exactly
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::push_back
; _this$ = ecx

; 916  :     _CONSTEXPR20 void push_back(_Ty&& _Val) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 917  :         // insert by moving into element at end, provide strong guarantee
; 918  :         emplace_back(_STD move(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$move@AAUvertex@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUvertex@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::vertex &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace_back@Uvertex@?A0x28cf8a89@detail@luabind@@@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?A_T$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::emplace_back<luabind::detail::`anonymous namespace'::vertex>

; 919  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
$T1 = -24						; size = 4
_$S4$ = -13						; size = 1
__Alproxy$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::~vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
; _this$ = ecx

; 806  :     _CONSTEXPR20 ~vector() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 807  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Tidy

; 808  : #if _ITERATOR_DEBUG_LEVEL != 0
; 809  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S4$[ebp]
	call	??$?0Uvertex@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::vertex>
	lea	eax, DWORD PTR _$S4$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 810  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 811  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 812  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@vector
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@vector:
	DD	1
	DD	$LN4@vector
$LN4@vector:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN3@vector
$LN3@vector:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	52					; 00000034H
	DB	0
??1?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::~vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
$T2 = -18						; size = 1
$T3 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
; _this$ = ecx

; 675  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::vertex>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::vertex> >,1><>

; 676  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0Uvertex@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::vertex>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 677  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$??0?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::max_size

; 695  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp

; 696  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 214748364				; 0cccccccH

; 697  :     }

	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::vertex> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUvertex@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::allocate
; _this$ = ecx

; 835  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 836  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 837  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0BE@@std@@YAII@Z	; std::_Get_size_of_n<20>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 838  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUvertex@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::deallocate
; _this$ = ecx

; 829  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@deallocate:

; 830  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN10@deallocate
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN7@deallocate
$LN10@deallocate:
	jmp	SHORT $LN2@deallocate
$LN7@deallocate:
	push	OFFSET ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@deallocate
$LN2@deallocate:
	xor	edx, edx
	jne	SHORT $LN4@deallocate

; 831  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 832  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 20
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 833  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ PROC ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::allocator<luabind::detail::`anonymous namespace'::vertex>
; _this$ = ecx

; 821  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ENDP ; std::allocator<luabind::detail::`anonymous namespace'::vertex>::allocator<luabind::detail::`anonymous namespace'::vertex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
tv188 = -152						; size = 4
tv183 = -148						; size = 4
tv229 = -144						; size = 4
tv94 = -140						; size = 4
tv217 = -136						; size = 4
tv236 = -132						; size = 4
$T2 = -128						; size = 4
$T3 = -124						; size = 12
$T4 = -112						; size = 4
$T5 = -108						; size = 8
$T6 = -100						; size = 12
$T7 = -85						; size = 1
$T8 = -84						; size = 4
$T9 = -80						; size = 4
$T10 = -76						; size = 8
$T11 = -68						; size = 20
_i$ = -44						; size = 12
_edges$ = -28						; size = 4
_i$12 = -24						; size = 4
_max_id$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_src$ = 8						; size = 4
_target$ = 12						; size = 4
_cast$ = 16						; size = 4
?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z PROC ; luabind::detail::cast_graph::impl::insert
; _this$ = ecx

; 200  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0

; 201  :     class_id const max_id = std::max(src, target);

	lea	eax, DWORD PTR _target$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	push	ecx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _max_id$[ebp], edx

; 202  : 
; 203  :     if (max_id >= m_vertices.size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::size
	cmp	DWORD PTR _max_id$[ebp], eax
	jb	SHORT $LN5@insert

; 204  :     {
; 205  :         m_vertices.reserve(max_id + 1);

	mov	eax, DWORD PTR _max_id$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?reserve@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEXI@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::reserve

; 206  :         for (class_id i = m_vertices.size(); i < max_id + 1; ++i)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::size
	mov	DWORD PTR _i$12[ebp], eax
	jmp	SHORT $LN4@insert
$LN2@insert:
	mov	ecx, DWORD PTR _i$12[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$12[ebp], ecx
$LN4@insert:
	mov	edx, DWORD PTR _max_id$[ebp]
	add	edx, 1
	cmp	DWORD PTR _i$12[ebp], edx
	jae	SHORT $LN5@insert

; 207  :             m_vertices.push_back(vertex(i));

	mov	eax, DWORD PTR _i$12[ebp]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	call	??0vertex@?A0x28cf8a89@detail@luabind@@QAE@I@Z ; luabind::detail::`anonymous namespace'::vertex::vertex
	mov	DWORD PTR tv236[ebp], eax
	mov	ecx, DWORD PTR tv236[ebp]
	mov	DWORD PTR tv217[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv217[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?push_back@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEX$$QAUvertex@?A0x28cf8a89@detail@luabind@@@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::push_back
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T11[ebp]
	call	??1vertex@?A0x28cf8a89@detail@luabind@@QAE@XZ
	jmp	SHORT $LN2@insert
$LN5@insert:

; 208  :     }
; 209  : 
; 210  :     std::vector<edge>& edges = m_vertices[src].edges;

	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAEAAUvertex@?A0x28cf8a89@detail@luabind@@I@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::operator[]
	add	eax, 4
	mov	DWORD PTR _edges$[ebp], eax

; 211  : 
; 212  :     std::vector<edge>::iterator i = std::lower_bound(

	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0edge@?A0x28cf8a89@detail@luabind@@QAE@IP6APAXPAX@Z@Z ; luabind::detail::`anonymous namespace'::edge::edge
	push	eax
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T9[ebp], esp
	push	edx
	mov	ecx, DWORD PTR _edges$[ebp]
	call	?end@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::end
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T8[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _edges$[ebp]
	call	?begin@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::begin
	lea	ecx, DWORD PTR _i$[ebp]
	push	ecx
	call	??$lower_bound@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@Uedge@?A0x28cf8a89@detail@luabind@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@0@V10@0ABUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::lower_bound<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >,luabind::detail::`anonymous namespace'::edge>
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv94[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 213  :         edges.begin(), edges.end(), edge(target, 0)
; 214  :     );
; 215  : 
; 216  :     if (i == edges.end() || i->target != target)

	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _edges$[ebp]
	call	?end@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::end
	mov	DWORD PTR tv229[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR tv229[ebp]
	push	ecx
	lea	ecx, DWORD PTR _i$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator==
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN8@insert
	lea	ecx, DWORD PTR _i$[ebp]
	call	??C?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBEPAUedge@?A0x28cf8a89@detail@luabind@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::operator->
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _target$[ebp]
	jne	SHORT $LN8@insert
	mov	DWORD PTR tv183[ebp], 0
	jmp	SHORT $LN9@insert
$LN8@insert:
	mov	DWORD PTR tv183[ebp], 1
$LN9@insert:
	mov	cl, BYTE PTR tv183[ebp]
	mov	BYTE PTR $T7[ebp], cl
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 1
	je	SHORT $LN16@insert
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
$LN16@insert:
	movzx	eax, BYTE PTR $T7[ebp]
	test	eax, eax
	je	SHORT $LN6@insert

; 217  :     {
; 218  :         edges.insert(i, edge(target, cast));

	mov	ecx, DWORD PTR _cast$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0edge@?A0x28cf8a89@detail@luabind@@QAE@IP6APAXPAX@Z@Z ; luabind::detail::`anonymous namespace'::edge::edge
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	eax, DWORD PTR _i$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _edges$[ebp]
	call	?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::insert
	mov	DWORD PTR tv188[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ

; 219  :         m_cache.invalidate();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?invalidate@cache@?A0x28cf8a89@detail@luabind@@QAEXXZ ; luabind::detail::`anonymous namespace'::cache::invalidate
$LN6@insert:

; 220  :     }
; 221  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _i$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@insert
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN22@insert:
	DD	1
	DD	$LN21@insert
$LN21@insert:
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN19@insert
$LN19@insert:
	DB	105					; 00000069H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z$0:
	lea	ecx, DWORD PTR $T11[ebp]
	jmp	??1vertex@?A0x28cf8a89@detail@luabind@@QAE@XZ
__unwindfunclet$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z$3:
	lea	ecx, DWORD PTR _i$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z ENDP ; luabind::detail::cast_graph::impl::insert
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
tv407 = -316						; size = 4
tv388 = -312						; size = 4
tv372 = -308						; size = 4
tv354 = -304						; size = 4
tv343 = -300						; size = 4
tv301 = -296						; size = 4
tv290 = -292						; size = 4
tv216 = -288						; size = 4
$T2 = -284						; size = 4
$T3 = -280						; size = 4
$T4 = -276						; size = 12
$T5 = -264						; size = 8
$T6 = -256						; size = 8
$T7 = -245						; size = 1
$T8 = -244						; size = 12
$T9 = -232						; size = 8
$T10 = -224						; size = 4
$T11 = -220						; size = 4
$T12 = -216						; size = 4
$T13 = -212						; size = 4
$T14 = -208						; size = 4
$T15 = -204						; size = 4
_casted$16 = -200					; size = 4
_e$17 = -196						; size = 4
__foreach_continue$18 = -185				; size = 1
_$S3$19 = -176						; size = 12
__foreach_end$20 = -160					; size = 4
_$S2$21 = -152						; size = 12
__foreach_cur$22 = -136					; size = 4
_$S1$23 = -128						; size = 4
__foreach_col$24 = -120					; size = 4
_v$25 = -116						; size = 4
_qe$26 = -108						; size = 12
_visited$ = -88						; size = 20
_q$ = -60						; size = 20
_cached$ = -32						; size = 8
_object_offset$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_p$ = 12						; size = 4
_src$ = 16						; size = 4
_target$ = 20						; size = 4
_dynamic_id$ = 24					; size = 4
_dynamic_ptr$ = 28					; size = 4
?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z PROC ; luabind::detail::cast_graph::impl::cast
; _this$ = ecx

; 142  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 304				; 00000130H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 143  :     if (src == target)

	mov	eax, DWORD PTR _src$[ebp]
	cmp	eax, DWORD PTR _target$[ebp]
	jne	SHORT $LN10@cast

; 144  :         return std::make_pair(p, 0);

	mov	DWORD PTR $T15[ebp], 0
	lea	ecx, DWORD PTR $T15[ebp]
	push	ecx
	lea	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	??$make_pair@ABQAXH@std@@YA?AU?$pair@PAXH@0@ABQAX$$QAH@Z ; std::make_pair<void * const &,int>
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@cast
$LN10@cast:

; 145  : 
; 146  :     if (src >= m_vertices.size() || target >= m_vertices.size())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::size
	cmp	DWORD PTR _src$[ebp], eax
	jae	SHORT $LN12@cast
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::size
	cmp	DWORD PTR _target$[ebp], eax
	jb	SHORT $LN11@cast
$LN12@cast:

; 147  :         return std::pair<void*, int>((void*)0, -1);

	mov	DWORD PTR $T14[ebp], -1
	mov	DWORD PTR $T13[ebp], 0
	lea	ecx, DWORD PTR $T14[ebp]
	push	ecx
	lea	edx, DWORD PTR $T13[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@$$QAPAX$$QAH@Z ; std::pair<void *,int>::pair<void *,int><void *,int,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@cast
$LN11@cast:

; 148  : 
; 149  :     std::ptrdiff_t const object_offset =

	mov	eax, DWORD PTR _dynamic_ptr$[ebp]
	sub	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _object_offset$[ebp], eax

; 150  :         (char const*)dynamic_ptr - (char const*)p;
; 151  : 
; 152  :     cache_entry cached = m_cache.get(src, target, dynamic_id, object_offset);

	mov	ecx, DWORD PTR _object_offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dynamic_id$[ebp]
	push	edx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	push	ecx
	lea	edx, DWORD PTR _cached$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?get@cache@?A0x28cf8a89@detail@luabind@@QBE?AU?$pair@HH@std@@IIIH@Z ; luabind::detail::`anonymous namespace'::cache::get

; 153  : 
; 154  :     if (cached.first != cache::unknown)

	cmp	DWORD PTR _cached$[ebp], 2147483647	; 7fffffffH
	je	SHORT $LN13@cast

; 155  :     {
; 156  :         if (cached.first == cache::invalid)

	cmp	DWORD PTR _cached$[ebp], 2147483646	; 7ffffffeH
	jne	SHORT $LN14@cast

; 157  :             return std::pair<void*, int>((void*)0, -1);

	mov	DWORD PTR $T12[ebp], -1
	mov	DWORD PTR $T11[ebp], 0
	lea	eax, DWORD PTR $T12[ebp]
	push	eax
	lea	ecx, DWORD PTR $T11[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@$$QAPAX$$QAH@Z ; std::pair<void *,int>::pair<void *,int><void *,int,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@cast
$LN14@cast:

; 158  :         return std::make_pair((char*)p + cached.first, cached.second);

	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _cached$[ebp]
	mov	DWORD PTR $T10[ebp], edx
	lea	eax, DWORD PTR _cached$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR $T10[ebp]
	push	ecx
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	call	??$make_pair@PADAAH@std@@YA?AU?$pair@PADH@0@$$QAPADAAH@Z ; std::make_pair<char *,int &>
	add	esp, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PADH$0A@@?$pair@PAXH@std@@QAE@$$QAU?$pair@PADH@1@@Z ; std::pair<void *,int>::pair<void *,int><char *,int,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@cast
$LN13@cast:

; 159  :     }
; 160  : 
; 161  :     std::queue<queue_entry> q;

	lea	ecx, DWORD PTR _q$[ebp]
	call	??0?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 162  :     q.push(queue_entry(p, src, 0));

	push	0
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T8[ebp]
	call	??0queue_entry@?A0x28cf8a89@detail@luabind@@QAE@PAXIH@Z ; luabind::detail::`anonymous namespace'::queue_entry::queue_entry
	push	eax
	lea	ecx, DWORD PTR _q$[ebp]
	call	?push@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::push

; 163  : 
; 164  :     boost::dynamic_bitset<> visited(m_vertices.size());

	lea	ecx, DWORD PTR $T7[ebp]
	call	??0?$allocator@K@std@@QAE@XZ		; std::allocator<unsigned long>::allocator<unsigned long>
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::size
	push	eax
	lea	ecx, DWORD PTR _visited$[ebp]
	call	??0?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@IKABV?$allocator@K@std@@@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::dynamic_bitset<unsigned long,std::allocator<unsigned long> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
$LN2@cast:

; 165  : 
; 166  :     while (!q.empty())

	lea	ecx, DWORD PTR _q$[ebp]
	call	?empty@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QBE_NXZ ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::empty
	movzx	edx, al
	test	edx, edx
	jne	$LN3@cast

; 167  :     {
; 168  :         queue_entry const qe = q.front();

	lea	ecx, DWORD PTR _q$[ebp]
	call	?front@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEAAUqueue_entry@?A0x28cf8a89@detail@luabind@@XZ ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::front
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _qe$26[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _qe$26[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _qe$26[ebp+8], eax

; 169  :         q.pop();

	lea	ecx, DWORD PTR _q$[ebp]
	call	?pop@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEXXZ ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::pop

; 170  : 
; 171  :         visited[qe.vertex_id] = true;

	push	1
	mov	ecx, DWORD PTR _qe$26[ebp+4]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	ecx, DWORD PTR _visited$[ebp]
	call	??A?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE?AVreference@01@I@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::operator[]
	mov	ecx, eax
	call	??4reference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAEAAV012@_N@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::operator=

; 172  :         vertex const& v = m_vertices[qe.vertex_id];

	mov	eax, DWORD PTR _qe$26[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$vector@Uvertex@?A0x28cf8a89@detail@luabind@@V?$allocator@Uvertex@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEABUvertex@?A0x28cf8a89@detail@luabind@@I@Z ; std::vector<luabind::detail::`anonymous namespace'::vertex,std::allocator<luabind::detail::`anonymous namespace'::vertex> >::operator[]
	mov	DWORD PTR _v$25[ebp], eax

; 173  : 
; 174  :         if (v.id == target)

	mov	ecx, DWORD PTR _v$25[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _target$[ebp]
	jne	SHORT $LN15@cast

; 175  :         {
; 176  :             m_cache.put(

	mov	eax, DWORD PTR _qe$26[ebp]
	sub	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _qe$26[ebp+8]
	push	ecx
	mov	edx, DWORD PTR _object_offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _dynamic_id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?put@cache@?A0x28cf8a89@detail@luabind@@QAEXIIIHIH@Z ; luabind::detail::`anonymous namespace'::cache::put

; 177  :                 src, target, dynamic_id, object_offset
; 178  :               , qe.distance, (char*)qe.p - (char*)p
; 179  :             );
; 180  : 
; 181  :             return std::make_pair(qe.p, qe.distance);

	lea	eax, DWORD PTR _qe$26[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _qe$26[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	call	??$make_pair@ABQAXABH@std@@YA?AU?$pair@PAXH@0@ABQAXABH@Z ; std::make_pair<void * const &,int const &>
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _visited$[ebp]
	call	??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::~dynamic_bitset<unsigned long,std::allocator<unsigned long> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _q$[ebp]
	call	??1?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@cast
$LN15@cast:

; 182  :         }
; 183  : 
; 184  :         BOOST_FOREACH(edge const& e, v.edges)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN27@cast
	mov	DWORD PTR tv216[ebp], 0
	jmp	SHORT $LN28@cast
$LN27@cast:
	push	0
	mov	ecx, DWORD PTR _v$25[ebp]
	add	ecx, 4
	push	ecx
	call	??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z ; boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	call	??$boost_foreach_is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z ; boost_foreach_is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	push	eax
	push	0
	mov	edx, DWORD PTR _v$25[ebp]
	add	edx, 4
	push	edx
	call	??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z ; boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	call	??$boost_foreach_is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z ; boost_foreach_is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	push	eax
	call	??$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@foreach_detail_@boost@@YAPAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@1@PAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z ; boost::foreach_detail_::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >
	add	esp, 4
	push	eax
	call	??$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@@foreach_detail_@boost@@YAPAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@1@PAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@31@PAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z ; boost::foreach_detail_::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >
	add	esp, 8
	push	eax
	push	0
	mov	eax, DWORD PTR _v$25[ebp]
	add	eax, 4
	push	eax
	call	??$is_rvalue_@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@H@Z ; boost::foreach_detail_::is_rvalue_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>
	add	esp, 8
	push	eax
	call	??$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@@foreach_detail_@boost@@YAPAU?$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@U?$bool_@$0A@@42@U542@U542@@mpl@1@PAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@PAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@31@@Z ; boost::foreach_detail_::or_<boost::is_rvalue_reference<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>,boost::mpl::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<1>,boost::mpl::bool_<1>,boost::mpl::bool_<1> > >
	add	esp, 8
	mov	DWORD PTR tv216[ebp], eax
$LN28@cast:
	mov	ecx, DWORD PTR tv216[ebp]
	push	ecx
	mov	edx, DWORD PTR _v$25[ebp]
	add	edx, 4
	push	edx
	lea	eax, DWORD PTR _$S1$23[ebp]
	push	eax
	call	??$contain@$$CBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YA?AU?$auto_any@PBV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$0A@@mpl@1@@Z ; boost::foreach_detail_::contain<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const >
	add	esp, 12					; 0000000cH
	lea	ecx, DWORD PTR _$S1$23[ebp]
	mov	DWORD PTR __foreach_col$24[ebp], ecx
	mov	ecx, DWORD PTR __foreach_col$24[ebp]
	call	??Bauto_any_base@foreach_detail_@boost@@QBE_NXZ ; boost::foreach_detail_::auto_any_base::operator bool
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN16@cast
	jmp	$LN17@cast
$LN16@cast:
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN29@cast
	mov	DWORD PTR tv290[ebp], 0
	jmp	SHORT $LN30@cast
$LN29@cast:
	push	0
	mov	ecx, DWORD PTR _v$25[ebp]
	add	ecx, 4
	push	ecx
	call	??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z ; boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	call	??$boost_foreach_is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z ; boost_foreach_is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	push	eax
	push	0
	mov	edx, DWORD PTR _v$25[ebp]
	add	edx, 4
	push	edx
	call	??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z ; boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	call	??$boost_foreach_is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z ; boost_foreach_is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	push	eax
	call	??$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@foreach_detail_@boost@@YAPAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@1@PAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z ; boost::foreach_detail_::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >
	add	esp, 4
	push	eax
	call	??$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@@foreach_detail_@boost@@YAPAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@1@PAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@31@PAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z ; boost::foreach_detail_::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >
	add	esp, 8
	push	eax
	push	0
	mov	eax, DWORD PTR _v$25[ebp]
	add	eax, 4
	push	eax
	call	??$is_rvalue_@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@H@Z ; boost::foreach_detail_::is_rvalue_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>
	add	esp, 8
	push	eax
	call	??$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@@foreach_detail_@boost@@YAPAU?$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@U?$bool_@$0A@@42@U542@U542@@mpl@1@PAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@PAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@31@@Z ; boost::foreach_detail_::or_<boost::is_rvalue_reference<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>,boost::mpl::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<1>,boost::mpl::bool_<1>,boost::mpl::bool_<1> > >
	add	esp, 8
	mov	DWORD PTR tv290[ebp], eax
$LN30@cast:
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN31@cast
	mov	DWORD PTR tv301[ebp], 0
	jmp	SHORT $LN32@cast
$LN31@cast:
	mov	edx, DWORD PTR _v$25[ebp]
	add	edx, 4
	push	edx
	call	??$is_const_@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$bool_@$00@mpl@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z ; boost::foreach_detail_::is_const_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _v$25[ebp]
	add	eax, 4
	push	eax
	call	??$encode_type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$00@mpl@1@@Z ; boost::foreach_detail_::encode_type<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	mov	DWORD PTR tv301[ebp], eax
$LN32@cast:
	mov	ecx, DWORD PTR tv290[ebp]
	push	ecx
	mov	edx, DWORD PTR tv301[ebp]
	push	edx
	mov	eax, DWORD PTR __foreach_col$24[ebp]
	push	eax
	lea	ecx, DWORD PTR _$S2$21[ebp]
	push	ecx
	call	??$begin@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z ; boost::foreach_detail_::begin<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	edx, DWORD PTR _$S2$21[ebp]
	mov	DWORD PTR __foreach_cur$22[ebp], edx
	mov	ecx, DWORD PTR __foreach_cur$22[ebp]
	call	??Bauto_any_base@foreach_detail_@boost@@QBE_NXZ ; boost::foreach_detail_::auto_any_base::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN18@cast
	jmp	$LN19@cast
$LN18@cast:
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN33@cast
	mov	DWORD PTR tv343[ebp], 0
	jmp	SHORT $LN34@cast
$LN33@cast:
	push	0
	mov	edx, DWORD PTR _v$25[ebp]
	add	edx, 4
	push	edx
	call	??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z ; boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	call	??$boost_foreach_is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z ; boost_foreach_is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	push	eax
	push	0
	mov	eax, DWORD PTR _v$25[ebp]
	add	eax, 4
	push	eax
	call	??$to_ptr@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAAAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABV23@@Z ; boost::foreach_detail_::to_ptr<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	call	??$boost_foreach_is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@@YAPAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@AAPAV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@W4boost_foreach_argument_dependent_lookup_hack@@@Z ; boost_foreach_is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	push	eax
	call	??$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@foreach_detail_@boost@@YAPAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@1@PAU?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z ; boost::foreach_detail_::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >
	add	esp, 4
	push	eax
	call	??$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@@foreach_detail_@boost@@YAPAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@1@PAU?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@31@PAU?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@1@@Z ; boost::foreach_detail_::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >
	add	esp, 8
	push	eax
	push	0
	mov	ecx, DWORD PTR _v$25[ebp]
	add	ecx, 4
	push	ecx
	call	??$is_rvalue_@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@H@Z ; boost::foreach_detail_::is_rvalue_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>
	add	esp, 8
	push	eax
	call	??$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@@foreach_detail_@boost@@YAPAU?$or_@U?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@boost@@U?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@mpl@2@U?$bool_@$0A@@42@U542@U542@@mpl@1@PAU?$is_rvalue_reference@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@PAU?$and_@U?$not_@U?$is_noncopyable@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@boost@@@mpl@boost@@U?$is_lightweight_proxy@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach@3@U?$bool_@$00@23@U623@U623@@31@@Z ; boost::foreach_detail_::or_<boost::is_rvalue_reference<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > const &>,boost::mpl::and_<boost::mpl::not_<boost::foreach::is_noncopyable<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > > >,boost::foreach::is_lightweight_proxy<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >,boost::mpl::bool_<1>,boost::mpl::bool_<1>,boost::mpl::bool_<1> > >
	add	esp, 8
	mov	DWORD PTR tv343[ebp], eax
$LN34@cast:
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN35@cast
	mov	DWORD PTR tv354[ebp], 0
	jmp	SHORT $LN36@cast
$LN35@cast:
	mov	eax, DWORD PTR _v$25[ebp]
	add	eax, 4
	push	eax
	call	??$is_const_@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$bool_@$00@mpl@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z ; boost::foreach_detail_::is_const_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _v$25[ebp]
	add	ecx, 4
	push	ecx
	call	??$encode_type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$00@mpl@1@@Z ; boost::foreach_detail_::encode_type<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	mov	DWORD PTR tv354[ebp], eax
$LN36@cast:
	mov	edx, DWORD PTR tv343[ebp]
	push	edx
	mov	eax, DWORD PTR tv354[ebp]
	push	eax
	mov	ecx, DWORD PTR __foreach_col$24[ebp]
	push	ecx
	lea	edx, DWORD PTR _$S3$19[ebp]
	push	edx
	call	??$end@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA?AU?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@01@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@PAU?$bool_@$0A@@mpl@1@@Z ; boost::foreach_detail_::end<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR _$S3$19[ebp]
	mov	DWORD PTR __foreach_end$20[ebp], eax
	mov	ecx, DWORD PTR __foreach_end$20[ebp]
	call	??Bauto_any_base@foreach_detail_@boost@@QBE_NXZ ; boost::foreach_detail_::auto_any_base::operator bool
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@cast
	jmp	$LN21@cast
$LN20@cast:
	mov	BYTE PTR __foreach_continue$18[ebp], 1
	jmp	SHORT $LN6@cast
$LN4@cast:
	movzx	edx, BYTE PTR __foreach_continue$18[ebp]
	test	edx, edx
	je	SHORT $LN6@cast
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN37@cast
	mov	DWORD PTR tv372[ebp], 0
	jmp	SHORT $LN38@cast
$LN37@cast:
	mov	ecx, DWORD PTR _v$25[ebp]
	add	ecx, 4
	push	ecx
	call	??$is_const_@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$bool_@$00@mpl@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z ; boost::foreach_detail_::is_const_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _v$25[ebp]
	add	edx, 4
	push	edx
	call	??$encode_type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$00@mpl@1@@Z ; boost::foreach_detail_::encode_type<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	mov	DWORD PTR tv372[ebp], eax
$LN38@cast:
	mov	eax, DWORD PTR tv372[ebp]
	push	eax
	mov	ecx, DWORD PTR __foreach_cur$22[ebp]
	push	ecx
	call	??$next@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YAXABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z ; boost::foreach_detail_::next<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
	add	esp, 8
$LN6@cast:
	movzx	edx, BYTE PTR __foreach_continue$18[ebp]
	test	edx, edx
	je	$LN21@cast
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN41@cast
	mov	DWORD PTR tv388[ebp], 0
	jmp	SHORT $LN42@cast
$LN41@cast:
	mov	ecx, DWORD PTR _v$25[ebp]
	add	ecx, 4
	push	ecx
	call	??$is_const_@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$bool_@$00@mpl@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z ; boost::foreach_detail_::is_const_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _v$25[ebp]
	add	edx, 4
	push	edx
	call	??$encode_type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$00@mpl@1@@Z ; boost::foreach_detail_::encode_type<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	mov	DWORD PTR tv388[ebp], eax
$LN42@cast:
	mov	eax, DWORD PTR tv388[ebp]
	push	eax
	mov	ecx, DWORD PTR __foreach_end$20[ebp]
	push	ecx
	mov	edx, DWORD PTR __foreach_cur$22[ebp]
	push	edx
	call	??$done@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YA_NABUauto_any_base@01@0PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z ; boost::foreach_detail_::done<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	$LN21@cast
	lea	ecx, DWORD PTR __foreach_continue$18[ebp]
	push	ecx
	call	?set_false@foreach_detail_@boost@@YA_NAA_N@Z ; boost::foreach_detail_::set_false
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN22@cast
	jmp	$LN23@cast
$LN22@cast:
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN43@cast
	mov	DWORD PTR tv407[ebp], 0
	jmp	SHORT $LN44@cast
$LN43@cast:
	mov	ecx, DWORD PTR _v$25[ebp]
	add	ecx, 4
	push	ecx
	call	??$is_const_@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$bool_@$00@mpl@1@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@Z ; boost::foreach_detail_::is_const_<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _v$25[ebp]
	add	edx, 4
	push	edx
	call	??$encode_type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@foreach_detail_@boost@@YAPAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@ABV?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@PAU?$bool_@$00@mpl@1@@Z ; boost::foreach_detail_::encode_type<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 8
	mov	DWORD PTR tv407[ebp], eax
$LN44@cast:
	mov	eax, DWORD PTR tv407[ebp]
	push	eax
	mov	ecx, DWORD PTR __foreach_cur$22[ebp]
	push	ecx
	call	??$deref@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@foreach_detail_@boost@@YAABUedge@?A0x28cf8a89@detail@luabind@@ABUauto_any_base@01@PAU?$type2type@V?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@U?$bool_@$00@mpl@boost@@@01@@Z ; boost::foreach_detail_::deref<std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >,boost::mpl::bool_<1> >
	add	esp, 8
	mov	DWORD PTR _e$17[ebp], eax
	jmp	SHORT $LN9@cast
$LN7@cast:
	mov	BYTE PTR __foreach_continue$18[ebp], 1
$LN9@cast:
	movzx	edx, BYTE PTR __foreach_continue$18[ebp]
	test	edx, edx
	jne	$LN23@cast

; 185  :         {
; 186  :             if (visited[e.target])

	mov	eax, DWORD PTR _e$17[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	lea	ecx, DWORD PTR _visited$[ebp]
	call	??A?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE?AVreference@01@I@Z ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::operator[]
	mov	ecx, eax
	call	??Breference@?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QBE_NXZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::reference::operator bool
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN24@cast

; 187  :                 continue;

	jmp	SHORT $LN7@cast
$LN24@cast:

; 188  :             if (void* casted = e.cast(qe.p))

	mov	esi, esp
	mov	ecx, DWORD PTR _qe$26[ebp]
	push	ecx
	mov	edx, DWORD PTR _e$17[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _casted$16[ebp], eax
	cmp	DWORD PTR _casted$16[ebp], 0
	je	SHORT $LN25@cast

; 189  :                 q.push(queue_entry(casted, e.target, qe.distance + 1));

	mov	ecx, DWORD PTR _qe$26[ebp+8]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _e$17[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _casted$16[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0queue_entry@?A0x28cf8a89@detail@luabind@@QAE@PAXIH@Z ; luabind::detail::`anonymous namespace'::queue_entry::queue_entry
	push	eax
	lea	ecx, DWORD PTR _q$[ebp]
	call	?push@?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAEX$$QAUqueue_entry@?A0x28cf8a89@detail@luabind@@@Z ; std::queue<luabind::detail::`anonymous namespace'::queue_entry,std::deque<luabind::detail::`anonymous namespace'::queue_entry,std::allocator<luabind::detail::`anonymous namespace'::queue_entry> > >::push
$LN25@cast:

; 190  :         }

	jmp	$LN7@cast
$LN23@cast:
	jmp	$LN4@cast
$LN21@cast:
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _$S3$19[ebp]
	call	??1?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@XZ
$LN19@cast:
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S2$21[ebp]
	call	??1?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@XZ
$LN17@cast:

; 191  :     }

	jmp	$LN2@cast
$LN3@cast:

; 192  : 
; 193  :     m_cache.put(src, target, dynamic_id, object_offset, cache::invalid, -1);

	push	-1
	push	2147483646				; 7ffffffeH
	mov	edx, DWORD PTR _object_offset$[ebp]
	push	edx
	mov	eax, DWORD PTR _dynamic_id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?put@cache@?A0x28cf8a89@detail@luabind@@QAEXIIIHIH@Z ; luabind::detail::`anonymous namespace'::cache::put

; 194  : 
; 195  :     return std::pair<void*, int>((void*)0, -1);

	mov	DWORD PTR $T3[ebp], -1
	mov	DWORD PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0PAXH$0A@@?$pair@PAXH@std@@QAE@$$QAPAX$$QAH@Z ; std::pair<void *,int>::pair<void *,int><void *,int,0>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _visited$[ebp]
	call	??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::~dynamic_bitset<unsigned long,std::allocator<unsigned long> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _q$[ebp]
	call	??1?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@cast:

; 196  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN59@cast
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	3
$LN59@cast:
	DD	8
	DD	$LN58@cast
$LN58@cast:
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN49@cast
	DD	-60					; ffffffc4H
	DD	20					; 00000014H
	DD	$LN50@cast
	DD	-88					; ffffffa8H
	DD	20					; 00000014H
	DD	$LN51@cast
	DD	-108					; ffffff94H
	DD	12					; 0000000cH
	DD	$LN52@cast
	DD	-128					; ffffff80H
	DD	4
	DD	$LN53@cast
	DD	-152					; ffffff68H
	DD	12					; 0000000cH
	DD	$LN54@cast
	DD	-176					; ffffff50H
	DD	12					; 0000000cH
	DD	$LN55@cast
	DD	-185					; ffffff47H
	DD	1
	DD	$LN56@cast
$LN56@cast:
	DB	95					; 0000005fH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN55@cast:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	0
$LN54@cast:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	0
$LN53@cast:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	0
$LN52@cast:
	DB	113					; 00000071H
	DB	101					; 00000065H
	DB	0
$LN51@cast:
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN50@cast:
	DB	113					; 00000071H
	DB	0
$LN49@cast:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$0:
	lea	ecx, DWORD PTR _q$[ebp]
	jmp	??1?$queue@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$deque@Uqueue_entry@?A0x28cf8a89@detail@luabind@@V?$allocator@Uqueue_entry@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$1:
	lea	ecx, DWORD PTR _visited$[ebp]
	jmp	??1?$dynamic_bitset@KV?$allocator@K@std@@@boost@@QAE@XZ ; boost::dynamic_bitset<unsigned long,std::allocator<unsigned long> >::~dynamic_bitset<unsigned long,std::allocator<unsigned long> >
__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$2:
	lea	ecx, DWORD PTR _$S2$21[ebp]
	jmp	??1?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@XZ
__unwindfunclet$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z$3:
	lea	ecx, DWORD PTR _$S3$19[ebp]
	jmp	??1?$auto_any@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@@foreach_detail_@boost@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z ENDP ; luabind::detail::cast_graph::impl::cast
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\map
;	COMDAT ??$insert@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@$0A@@?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@$0A@@?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z PROC ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::insert<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >,0>, COMDAT
; _this$ = ecx

; 162  :     pair<iterator, bool> insert(_Valty&& _Val) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 163  :         return this->emplace(_STD forward<_Valty>(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$forward@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@YA$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@AAU10@@Z ; std::forward<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::emplace<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> > >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 164  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$insert@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@$0A@@?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ENDP ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::insert<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z PROC ; std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> ><boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,0>, COMDAT
; _this$ = ecx

; 256  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$forward@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@YA$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@AAV123@@Z ; std::forward<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@$$QAV012@@Z
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	??$forward@U?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z ; std::forward<std::pair<int,int> >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ENDP ; std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> ><boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$make_pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@YA?AU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Val1$ = 12						; size = 4
__Val2$ = 16						; size = 4
??$make_pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@YA?AU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@0@@Z PROC ; std::make_pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >, COMDAT

; 515  :         is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) /* strengthened */ {

	push	ebp
	mov	ebp, esp

; 516  :     // return pair composed from arguments
; 517  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 518  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@U?$pair@HH@std@@@std@@YA$$QAU?$pair@HH@0@AAU10@@Z ; std::forward<std::pair<int,int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val1$[ebp]
	push	ecx
	call	??$forward@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@YA$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@AAV123@@Z ; std::forward<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@$0A@@?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@QAE@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@1@@Z ; std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> ><boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 519  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$make_pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@YA?AU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@0@@Z ENDP ; std::make_pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0AAHAAI$0A@@?$pair@HH@std@@QAE@AAHAAI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAHAAI$0A@@?$pair@HH@std@@QAE@AAHAAI@Z PROC	; std::pair<int,int>::pair<int,int><int &,unsigned int &,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@AAH@std@@YAAAHAAH@Z		; std::forward<int &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@AAI@std@@YAAAIAAI@Z		; std::forward<unsigned int &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0AAHAAI$0A@@?$pair@HH@std@@QAE@AAHAAI@Z ENDP	; std::pair<int,int>::pair<int,int><int &,unsigned int &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\utility
;	COMDAT ??$?0ABHH$0A@@?$pair@HH@std@@QAE@ABH$$QAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0ABHH$0A@@?$pair@HH@std@@QAE@ABH$$QAH@Z PROC	; std::pair<int,int>::pair<int,int><int const &,int,0>, COMDAT
; _this$ = ecx

; 190  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABH@std@@YAABHABH@Z		; std::forward<int const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	call	??$forward@H@std@@YA$$QAHAAH@Z		; std::forward<int>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx

; 191  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABHH$0A@@?$pair@HH@std@@QAE@ABH$$QAH@Z ENDP	; std::pair<int,int>::pair<int,int><int const &,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@$$QAV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@$$QAV012@@Z PROC ; boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@$$QAV012@@Z ENDP ; boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@ABI00ABH@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
$T3 = -8						; size = 1
$T4 = -7						; size = 1
$T5 = -6						; size = 1
$T6 = -5						; size = 1
_this$ = -4						; size = 4
_t0$ = 8						; size = 4
_t1$ = 12						; size = 4
_t2$ = 16						; size = 4
_t3$ = 20						; size = 4
??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@ABI00ABH@Z PROC ; boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>, COMDAT
; _this$ = ecx

; 516  :                 detail::cnull()) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 514  :     : inherited(t0, t1, t2, t3, detail::cnull(), detail::cnull(),

	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T6[ebp], al
	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T5[ebp], al
	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T4[ebp], al
	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T3[ebp], al
	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T2[ebp], al
	call	?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ; boost::tuples::detail::cnull
	mov	BYTE PTR $T1[ebp], al
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _t3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _t1$[ebp]
	push	edx
	mov	eax, DWORD PTR _t0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$CBI$$CBI$$CBI$$CBH$$CBUnull_type@tuples@boost@@$$CBU012@$$CBU012@$$CBU012@$$CBU012@$$CBU012@@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABI00ABHABUnull_type@12@22222@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > ><unsigned int const ,unsigned int const ,unsigned int const ,int const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const ,boost::tuples::null_type const >

; 516  :                 detail::cnull()) {}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@ABI00ABH@Z ENDP ; boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??0?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_u$ = 8							; size = 4
??0?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >, COMDAT
; _this$ = ecx

; 314  :   cons( const cons& u ) : head(u.head), tail(u.tail) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _u$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _u$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?get_tail@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_tail@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@23@XZ PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_tail, COMDAT
; _this$ = ecx

; 284  :   get_tail() const { return tail; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?get_tail@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@23@XZ ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_tail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?get_head@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_head@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_head, COMDAT
; _this$ = ecx

; 281  :   get_head() const { return head; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?get_head@?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >::get_head
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??0?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_u$ = 8							; size = 4
??0?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >, COMDAT
; _this$ = ecx

; 314  :   cons( const cons& u ) : head(u.head), tail(u.tail) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _u$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _u$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?get_tail@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_tail@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@23@XZ PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_tail, COMDAT
; _this$ = ecx

; 284  :   get_tail() const { return tail; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?get_tail@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@23@XZ ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_tail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?get_head@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_head@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_head, COMDAT
; _this$ = ecx

; 281  :   get_head() const { return head; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?get_head@?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >::get_head
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??0?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_u$ = 8							; size = 4
??0?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >, COMDAT
; _this$ = ecx

; 314  :   cons( const cons& u ) : head(u.head), tail(u.tail) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _u$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _u$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ; boost::tuples::cons<int,boost::tuples::null_type>::cons<int,boost::tuples::null_type>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?get_tail@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@HUnull_type@tuples@boost@@@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_tail@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@HUnull_type@tuples@boost@@@23@XZ PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_tail, COMDAT
; _this$ = ecx

; 284  :   get_tail() const { return tail; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?get_tail@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABU?$cons@HUnull_type@tuples@boost@@@23@XZ ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_tail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?get_head@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_head@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ PROC ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_head, COMDAT
; _this$ = ecx

; 281  :   get_head() const { return head; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?get_head@?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@QBEABIXZ ENDP ; boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> >::get_head
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ??0?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_u$ = 8							; size = 4
??0?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z PROC ; boost::tuples::cons<int,boost::tuples::null_type>::cons<int,boost::tuples::null_type>, COMDAT
; _this$ = ecx

; 394  :   cons( const cons& u ) : head(u.head) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _u$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QAE@ABU012@@Z ENDP ; boost::tuples::cons<int,boost::tuples::null_type>::cons<int,boost::tuples::null_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?get_tail@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBE?BUnull_type@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?get_tail@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBE?BUnull_type@23@XZ PROC ; boost::tuples::cons<int,boost::tuples::null_type>::get_tail, COMDAT
; _this$ = ecx

; 373  :   const null_type get_tail() const { return null_type(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?get_tail@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBE?BUnull_type@23@XZ ENDP ; boost::tuples::cons<int,boost::tuples::null_type>::get_tail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?get_head@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBEABHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get_head@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBEABHXZ PROC ; boost::tuples::cons<int,boost::tuples::null_type>::get_head, COMDAT
; _this$ = ecx

; 371  :   get_head() const { return head; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?get_head@?$cons@HUnull_type@tuples@boost@@@tuples@boost@@QBEABHXZ ENDP ; boost::tuples::cons<int,boost::tuples::null_type>::get_head
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator!=, COMDAT
; _this$ = ecx

; 237  :     _NODISCARD bool operator!=(const _Tree_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 238  :         return !(*this == _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 239  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv136 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator==, COMDAT
; _this$ = ecx

; 228  :     _NODISCARD bool operator==(const _Tree_const_iterator& _Right) const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@operator:

; 229  : #if _ITERATOR_DEBUG_LEVEL == 2
; 230  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "map/set iterators incompatible");

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	jne	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0BP@OLDKBHLM@map?1set?5iterators?5incompatible@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	230					; 000000e6H
	push	OFFSET ??_C@_0GA@INMJJLGF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	push	0
	push	230					; 000000e6H
	push	OFFSET ??_C@_1MA@LBEPAJEF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1EC@JLIDLCDH@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator

; 231  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 232  : 
; 233  :         return this->_Ptr == _Right._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN12@operator
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN13@operator
$LN12@operator:
	mov	DWORD PTR tv136[ebp], 0
$LN13@operator:
	mov	al, BYTE PTR tv136[ebp]

; 234  :     }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator->, COMDAT
; _this$ = ecx

; 189  :     _NODISCARD pointer operator->() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 190  :         return pointer_traits<pointer>::pointer_to(**this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@SAPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@2@ABU32@@Z ; std::pointer_traits<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > const *>::pointer_to
	add	esp, 4

; 191  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator*, COMDAT
; _this$ = ecx

; 179  :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 180  : #if _ITERATOR_DEBUG_LEVEL == 2
; 181  :         const auto _Mycont = static_cast<const _Mytree*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 182  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized map/set iterator");

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	182					; 000000b6H
	push	OFFSET ??_C@_0GA@INMJJLGF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	182					; 000000b6H
	push	OFFSET ??_C@_1MA@LBEPAJEF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator
$LN10@operator:

; 183  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end map/set iterator");

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	183					; 000000b7H
	push	OFFSET ??_C@_0GA@INMJJLGF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	183					; 000000b7H
	push	OFFSET ??_C@_1MA@LBEPAJEF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	edx, edx
	jne	SHORT $LN10@operator

; 184  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 185  : 
; 186  :         return this->_Ptr->_Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	add	eax, 16					; 00000010H

; 187  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 39   :         this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 40   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1cache@?A0x28cf8a89@detail@luabind@@QAE@XZ PROC	; luabind::detail::`anonymous namespace'::cache::~cache
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1cache@?A0x28cf8a89@detail@luabind@@QAE@XZ ENDP	; luabind::detail::`anonymous namespace'::cache::~cache
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0cache@?A0x28cf8a89@detail@luabind@@QAE@XZ PROC	; luabind::detail::`anonymous namespace'::cache::cache
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0cache@?A0x28cf8a89@detail@luabind@@QAE@XZ ENDP	; luabind::detail::`anonymous namespace'::cache::cache
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ PROC ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::~map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::~_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ ENDP ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::~map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\map
;	COMDAT ??0?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ PROC ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >, COMDAT
; _this$ = ecx

; 105  :     map() : _Mybase(key_compare()) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE@XZ ENDP ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ PROC ; std::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 1386 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1388 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ ENDP ; std::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1386 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1388 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnextptr$1 = -24					; size = 4
__Pnext$ = -20						; size = 4
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Orphan_ptr, COMDAT
; _this$ = ecx

; 713  :     void _Orphan_ptr(const _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 714  : #if _ITERATOR_DEBUG_LEVEL == 2
; 715  :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 716  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx
$LN2@Orphan_ptr:

; 717  :         while (*_Pnext) {

	mov	edx, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN3@Orphan_ptr

; 718  :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Pnextptr$1[ebp], edx

; 719  :             if (_Pnextptr == _Myhead || (_Ptr != nullptr && _Pnextptr != _Ptr)) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnextptr$1[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN6@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN4@Orphan_ptr
	mov	edx, DWORD PTR __Pnextptr$1[ebp]
	cmp	edx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN4@Orphan_ptr
$LN6@Orphan_ptr:

; 720  :                 _Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 721  :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ptr
$LN4@Orphan_ptr:

; 722  :                 (*_Pnext)->_Myproxy = nullptr;

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0

; 723  :                 *_Pnext             = (*_Pnext)->_Mynextiter;

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
$LN5@Orphan_ptr:

; 724  :             }
; 725  :         }

	jmp	SHORT $LN2@Orphan_ptr
$LN3@Orphan_ptr:

; 726  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 727  :         (void) _Ptr;
; 728  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 729  :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@Orphan_ptr:
	DD	1
	DD	$LN9@Orphan_ptr
$LN9@Orphan_ptr:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN8@Orphan_ptr
$LN8@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Orphan_ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Parent_sibling$1 = -20				; size = 4
__Parent_sibling$2 = -16				; size = 4
__Pnode$3 = -12						; size = 4
__Head$ = -8						; size = 4
_this$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 645  :         ++_Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 646  :         const auto _Head  = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Head$[ebp], ecx

; 647  :         _Newnode->_Parent = _Loc._Parent;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	eax, DWORD PTR __Loc$[ebp]
	mov	DWORD PTR [edx+4], eax

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

	mov	ecx, DWORD PTR __Loc$[ebp]
	cmp	ecx, DWORD PTR __Head$[ebp]
	jne	SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx], eax

; 650  :             _Head->_Parent   = _Newnode;

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 651  :             _Head->_Right    = _Newnode;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 652  :             _Newnode->_Color = _Black; // the root is black

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	BYTE PTR [edx+12], 1

; 653  :             return _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	jmp	$LN18@Insert_nod
$LN5@Insert_nod:

; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

	cmp	DWORD PTR __Loc$[ebp+4], 0
	jne	SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

	mov	eax, DWORD PTR __Loc$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR __Loc$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN8@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN8@Insert_nod:

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

	jmp	SHORT $LN7@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

	mov	eax, DWORD PTR __Loc$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR __Loc$[ebp]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN7@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx], edx
$LN7@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$3[ebp], eax
$LN4@Insert_nod:
	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movsx	eax, BYTE PTR [edx+12]
	test	eax, eax
	jne	$LN3@Insert_nod

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax]
	jne	$LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Parent_sibling$2[ebp], eax

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	mov	ecx, DWORD PTR __Parent_sibling$2[ebp]
	movsx	edx, BYTE PTR [ecx+12]
	test	edx, edx
	jne	SHORT $LN12@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 1

; 676  :                     _Parent_sibling->_Color          = _Black;

	mov	edx, DWORD PTR __Parent_sibling$2[ebp]
	mov	BYTE PTR [edx+12], 1

; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [edx+12], 0

; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnode$3[ebp], edx

; 679  :                 } else { // parent's sibling has red and black children

	jmp	SHORT $LN13@Insert_nod
$LN12@Insert_nod:

; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pnode$3[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN14@Insert_nod

; 681  :                         _Pnode = _Pnode->_Parent;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Pnode$3[ebp], ecx

; 682  :                         _Lrotate(_Pnode);

	mov	edx, DWORD PTR __Pnode$3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Lrotate
$LN14@Insert_nod:

; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Rrotate
$LN13@Insert_nod:

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

	jmp	$LN11@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Parent_sibling$1[ebp], edx

; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	mov	eax, DWORD PTR __Parent_sibling$1[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN15@Insert_nod

; 692  :                     _Pnode->_Parent->_Color          = _Black;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+12], 1

; 693  :                     _Parent_sibling->_Color          = _Black;

	mov	ecx, DWORD PTR __Parent_sibling$1[ebp]
	mov	BYTE PTR [ecx+12], 1

; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 0

; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Pnode$3[ebp], ecx

; 696  :                 } else { // parent's sibling has red and black children

	jmp	SHORT $LN11@Insert_nod
$LN15@Insert_nod:

; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$3[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN17@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$3[ebp], eax

; 699  :                         _Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Rrotate
$LN17@Insert_nod:

; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Lrotate
$LN11@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }

	jmp	$LN4@Insert_nod
$LN3@Insert_nod:

; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [edx+12], 1

; 710  :         return _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
$LN18@Insert_nod:

; 711  :     }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Rrotate, COMDAT
; _this$ = ecx

; 480  :     void _Rrotate(_Nodeptr _Wherenode) noexcept { // promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 482  :         _Wherenode->_Left = _Pnode->_Right;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], ecx

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN2@Rrotate

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@Rrotate:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Rrotate

; 491  :             _Myhead->_Parent = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN4@Rrotate
$LN3@Rrotate:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN5@Rrotate

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 494  :         } else {

	jmp	SHORT $LN4@Rrotate
$LN5@Rrotate:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@Rrotate:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx+8], eax

; 499  :         _Wherenode->_Parent = _Pnode;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 500  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Lrotate, COMDAT
; _this$ = ecx

; 458  :     void _Lrotate(_Nodeptr _Wherenode) noexcept { // promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], ecx

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN2@Lrotate

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@Lrotate:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Lrotate

; 469  :             _Myhead->_Parent = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN4@Lrotate
$LN3@Lrotate:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Lrotate

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 472  :         } else {

	jmp	SHORT $LN4@Lrotate
$LN5@Lrotate:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN4@Lrotate:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx], eax

; 477  :         _Wherenode->_Parent = _Pnode;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 478  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >, COMDAT
; _this$ = ecx

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??R?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@QBE_NABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@QBE_NABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@0@Z PROC ; std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >::operator(), COMDAT
; _this$ = ecx

; 116  :     _NODISCARD constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 117  :         return _Left < _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?MIU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@IU012@@tuples@boost@@YA_NABU?$cons@IU?$cons@IU?$cons@IU?$cons@HUnull_type@tuples@boost@@@tuples@boost@@@tuples@boost@@@tuples@boost@@@01@0@Z ; boost::tuples::operator<<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > >,unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<unsigned int,boost::tuples::cons<int,boost::tuples::null_type> > > >
	add	esp, 8

; 118  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@QBE_NABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@0@Z ENDP ; std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary, COMDAT
; _this$ = ecx

; 1956 :     const _Scary_val* _Get_scary() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1957 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > const >
	add	esp, 4

; 1958 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary, COMDAT
; _this$ = ecx

; 1952 :     _Scary_val* _Get_scary() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1953 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >
	add	esp, 4

; 1954 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1948 :     const _Alnode& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1949 :         return _Mypair._Myval2._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Get_first

; 1950 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1944 :     _Alnode& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1945 :         return _Mypair._Myval2._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>::_Get_first

; 1946 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 1940 :     const key_compare& _Getcomp() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1941 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ ; std::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1>::_Get_first

; 1942 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcomp@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Proxy$ = -48						; size = 8
_$S12$ = -29						; size = 1
__Alproxy$ = -24					; size = 4
__Scary$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Alloc_sentinel_and_proxy, COMDAT
; _this$ = ecx

; 1923 :     void _Alloc_sentinel_and_proxy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1924 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1925 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S12$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >
	lea	eax, DWORD PTR _$S12$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1926 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);

	mov	ecx, DWORD PTR __Scary$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1927 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
	push	eax
	call	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >
	add	esp, 4
	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1928 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 1929 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Alloc_sent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@Alloc_sent:
	DD	2
	DD	$LN7@Alloc_sent
$LN7@Alloc_sent:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@Alloc_sent
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN5@Alloc_sent
$LN5@Alloc_sent:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN4@Alloc_sent:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Alloc_sentinel_and_proxy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Check_grow_by_1, COMDAT
; _this$ = ecx

; 1614 :     void _Check_grow_by_1() {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1615 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LN3@Check_grow

; 1616 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
$LN3@Check_grow:

; 1617 :         }
; 1618 :     }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Check_grow_by_1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::find, COMDAT
; _this$ = ecx

; 1366 :     _NODISCARD const_iterator find(const key_type& _Keyval) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 1367 :         return const_iterator(_Find(_Keyval), _Get_scary());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Find@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@ABEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Find<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1368 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::find
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Head$ = -12						; size = 4
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::clear, COMDAT
; _this$ = ecx

; 1339 :     void clear() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1340 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1341 :         _Scary->_Orphan_ptr(nullptr);

	push	0
	mov	ecx, DWORD PTR __Scary$[ebp]
	call	?_Orphan_ptr@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Orphan_ptr

; 1342 :         auto _Head = _Scary->_Myhead;

	mov	eax, DWORD PTR __Scary$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Head$[ebp], ecx

; 1343 :         _Scary->_Erase_tree(_Getal(), _Head->_Parent);

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
	push	eax
	mov	ecx, DWORD PTR __Scary$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >

; 1344 :         _Head->_Parent  = _Head;

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR __Head$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 1345 :         _Head->_Left    = _Head;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR __Head$[ebp]
	mov	DWORD PTR [eax], ecx

; 1346 :         _Head->_Right   = _Head;

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR __Head$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1347 :         _Scary->_Mysize = 0;

	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 1348 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::max_size, COMDAT
; _this$ = ecx

; 1194 :     _NODISCARD size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1195 :         return (_STD min)(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1196 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1197 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::end, COMDAT
; _this$ = ecx

; 1137 :     _NODISCARD const_iterator end() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1138 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1139 :         return const_iterator(_Scary->_Myhead, _Scary);

	mov	eax, DWORD PTR __Scary$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1140 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_$S5$ = -17						; size = 1
__Alproxy$ = -12					; size = 4
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::~_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >, COMDAT
; _this$ = ecx

; 1077 :     ~_Tree() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1078 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1079 :         _Scary->_Erase_head(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
	push	eax
	mov	ecx, DWORD PTR __Scary$[ebp]
	call	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >

; 1080 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1081 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S5$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >
	lea	eax, DWORD PTR _$S5$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1082 :         _Delete_plain_internal(_Alproxy, _Scary->_Myproxy);

	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1083 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1084 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Tree
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Tree:
	DD	1
	DD	$LN4@Tree
$LN4@Tree:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Tree
$LN3@Tree:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	53					; 00000035H
	DB	0
??1?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::~_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@@Z
_TEXT	SEGMENT
$T1 = -6						; size = 1
$T2 = -5						; size = 1
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >, COMDAT
; _this$ = ecx

; 880  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1>::_Compressed_pair<std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >,1>,1><std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> > const &,std::_Zero_then_variadic_args_t>

; 881  :         _Alloc_sentinel_and_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Alloc_sentinel_and_proxy

; 882  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAE@ABU?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::max_size, COMDAT

; 695  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp

; 696  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 107374182				; 06666666H

; 697  :     }

	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::deallocate, COMDAT

; 661  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 662  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 663  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 664  :         if (_STD is_constant_evaluated()) {
; 665  :             _Al.deallocate(_Ptr, _Count);
; 666  :         } else
; 667  : #endif // _HAS_CXX20
; 668  :         {
; 669  :             (void) _Al;
; 670  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 40
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 671  :         }
; 672  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocate, COMDAT
; _this$ = ecx

; 835  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 836  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 837  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0CI@@std@@YAII@Z	; std::_Get_size_of_n<40>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 838  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::deallocate, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@deallocate:

; 830  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN10@deallocate
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN7@deallocate
$LN10@deallocate:
	jmp	SHORT $LN2@deallocate
$LN7@deallocate:
	push	OFFSET ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@deallocate
$LN2@deallocate:
	xor	edx, edx
	jne	SHORT $LN4@deallocate

; 831  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 832  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 40
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 833  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >, COMDAT
; _this$ = ecx

; 821  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >::allocator<std::_Tree_node<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> >,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?invalidate@cache@?A0x28cf8a89@detail@luabind@@QAEXXZ PROC ; luabind::detail::`anonymous namespace'::cache::invalidate
; _this$ = ecx

; 102  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 103  :       m_cache.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::clear

; 104  :   }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?invalidate@cache@?A0x28cf8a89@detail@luabind@@QAEXXZ ENDP ; luabind::detail::`anonymous namespace'::cache::invalidate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
$T1 = -68						; size = 16
$T2 = -52						; size = 24
$T3 = -28						; size = 16
$T4 = -12						; size = 8
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_target$ = 12						; size = 4
_dynamic_id$ = 16					; size = 4
_object_offset$ = 20					; size = 4
_distance$ = 24						; size = 4
_offset$ = 28						; size = 4
?put@cache@?A0x28cf8a89@detail@luabind@@QAEXIIIHIH@Z PROC ; luabind::detail::`anonymous namespace'::cache::put
; _this$ = ecx

; 94   :   {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-68]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 95   :       m_cache.insert(std::make_pair(

	lea	eax, DWORD PTR _distance$[ebp]
	push	eax
	lea	ecx, DWORD PTR _offset$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T4[ebp]
	call	??$?0AAHAAI$0A@@?$pair@HH@std@@QAE@AAHAAI@Z ; std::pair<int,int>::pair<int,int><int &,unsigned int &,0>
	push	eax
	lea	edx, DWORD PTR _object_offset$[ebp]
	push	edx
	lea	eax, DWORD PTR _dynamic_id$[ebp]
	push	eax
	lea	ecx, DWORD PTR _target$[ebp]
	push	ecx
	lea	edx, DWORD PTR _src$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@ABI00ABH@Z ; boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??$make_pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@YA?AU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@0@$$QAV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@$$QAU?$pair@HH@0@@Z ; std::make_pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >
	add	esp, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@U?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@$0A@@?$map@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@@Z ; std::map<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > >::insert<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int> >,0>
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@_N@std@@QAE@XZ

; 96   :           key_type(src, target, dynamic_id, object_offset)
; 97   :         , cache_entry(offset, distance)
; 98   :       ));
; 99   :   }

	pop	edi
	add	esp, 68					; 00000044H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?put@cache@?A0x28cf8a89@detail@luabind@@QAEXIIIHIH@Z ENDP ; luabind::detail::`anonymous namespace'::cache::put
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
tv135 = -84						; size = 4
tv139 = -80						; size = 4
$T1 = -76						; size = 4
$T2 = -72						; size = 8
$T3 = -64						; size = 8
$T4 = -56						; size = 12
$T5 = -44						; size = 4
$T6 = -40						; size = 16
_i$ = -20						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_src$ = 12						; size = 4
_target$ = 16						; size = 4
_dynamic_id$ = 20					; size = 4
_object_offset$ = 24					; size = 4
?get@cache@?A0x28cf8a89@detail@luabind@@QBE?AU?$pair@HH@std@@IIIH@Z PROC ; luabind::detail::`anonymous namespace'::cache::get
; _this$ = ecx

; 85   :   {

	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 86   :       map_type::const_iterator i = m_cache.find(

	lea	eax, DWORD PTR _object_offset$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dynamic_id$[ebp]
	push	ecx
	lea	edx, DWORD PTR _target$[ebp]
	push	edx
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@QAE@ABI00ABH@Z ; boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>
	push	eax
	lea	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@ABV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@Z ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::find

; 87   :           key_type(src, target, dynamic_id, object_offset));
; 88   :       return i != m_cache.end() ? i->second : cache_entry(unknown, -1);

	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@U?$less@V?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@@5@V?$allocator@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@5@$0A@@std@@@std@@QBE?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type>,std::pair<int,int>,std::less<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> >,std::allocator<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > >,0> >::end
	mov	DWORD PTR tv139[ebp], eax
	mov	eax, DWORD PTR tv139[ebp]
	push	eax
	lea	ecx, DWORD PTR _i$[ebp]
	call	??9?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@get
	lea	ecx, DWORD PTR _i$[ebp]
	call	??C?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QBEPBU?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<boost::tuples::tuple<unsigned int,unsigned int,unsigned int,int,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type,boost::tuples::null_type> const ,std::pair<int,int> > > > >::operator->
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR $T3[ebp+4], eax
	lea	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR tv135[ebp], ecx
	jmp	SHORT $LN4@get
$LN3@get:
	mov	DWORD PTR $T1[ebp], -1
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	push	OFFSET ?unknown@cache@?A0x28cf8a89@detail@luabind@@2HB ; luabind::detail::`anonymous namespace'::cache::unknown
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0ABHH$0A@@?$pair@HH@std@@QAE@ABH$$QAH@Z ; std::pair<int,int>::pair<int,int><int const &,int,0>
	mov	DWORD PTR tv135[ebp], eax
$LN4@get:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	ecx, DWORD PTR $T5[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ
	lea	ecx, DWORD PTR _i$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBV?$tuple@IIIHUnull_type@tuples@boost@@U123@U123@U123@U123@U123@@tuples@boost@@U?$pair@HH@std@@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 89   :   }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@get
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN9@get:
	DD	1
	DD	$LN8@get
$LN8@get:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN7@get
$LN7@get:
	DB	105					; 00000069H
	DB	0
?get@cache@?A0x28cf8a89@detail@luabind@@QBE?AU?$pair@HH@std@@IIIH@Z ENDP ; luabind::detail::`anonymous namespace'::cache::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gvertex@?A0x28cf8a89@detail@luabind@@QAEPAXI@Z PROC	; luabind::detail::`anonymous namespace'::vertex::`scalar deleting destructor'
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1vertex@?A0x28cf8a89@detail@luabind@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gvertex@?A0x28cf8a89@detail@luabind@@QAEPAXI@Z ENDP	; luabind::detail::`anonymous namespace'::vertex::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0vertex@?A0x28cf8a89@detail@luabind@@QAE@$$QAU0123@@Z PROC ; luabind::detail::`anonymous namespace'::vertex::vertex
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@$$QAV01@@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0vertex@?A0x28cf8a89@detail@luabind@@QAE@$$QAU0123@@Z ENDP ; luabind::detail::`anonymous namespace'::vertex::vertex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1vertex@?A0x28cf8a89@detail@luabind@@QAE@XZ PROC	; luabind::detail::`anonymous namespace'::vertex::~vertex
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::~vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1vertex@?A0x28cf8a89@detail@luabind@@QAE@XZ ENDP	; luabind::detail::`anonymous namespace'::vertex::~vertex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Get_first
; _this$ = ecx

; 1386 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1388 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Get_first
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__End$ = 16						; size = 4
??0?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@00@Z PROC ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >
; _this$ = ecx

; 395  :         : _Myfirst(_First), _Mylast(_Last), _Myend(_End) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Last$[ebp]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __End$[ebp]
	mov	DWORD PTR [ecx+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@00@Z ENDP ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >
; _this$ = ecx

; 392  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 4
?_Make_iterator@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@QAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Make_iterator
; _this$ = ecx

; 2051 :     _NODISCARD _CONSTEXPR20 iterator _Make_iterator(const pointer _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2052 :         return iterator(_Ptr, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 2053 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iterator@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@QAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Make_iterator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
; _this$ = ecx

; 2047 :     _NODISCARD _CONSTEXPR20 const _Alty& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2048 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QBEABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Get_first

; 2049 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
; _this$ = ecx

; 2043 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2044 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Get_first

; 2045 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range
; _this$ = ecx

; 2028 :     _CONSTEXPR20 void _Orphan_range(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2029 :         // orphan iterators within specified (inclusive) range
; 2030 : #if _HAS_CXX20
; 2031 :         if (_STD is_constant_evaluated()) {
; 2032 :             _Orphan_range_unlocked(_First, _Last);
; 2033 :         } else
; 2034 : #endif // _HAS_CXX20
; 2035 :         {
; 2036 :             _Orphan_range_locked(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range_locked

; 2037 :         }
; 2038 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range_locked
; _this$ = ecx

; 2023 :     void _Orphan_range_locked(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2024 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 2025 :         _Orphan_range_unlocked(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range_unlocked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range_unlocked

; 2026 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@Orphan_ran:
	DD	1
	DD	$LN6@Orphan_ran
$LN6@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@Orphan_ran
$LN4@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z$0:
	lea	ecx, DWORD PTR __Lock$[ebp]
	jmp	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range_locked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range_locked
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Temp$1 = -20						; size = 4
__Temp$2 = -16						; size = 4
__Pnextptr$3 = -12					; size = 4
__Pnext$ = -8						; size = 4
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range_unlocked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range_unlocked
; _this$ = ecx

; 2008 :     _CONSTEXPR20 void _Orphan_range_unlocked(pointer _First, pointer _Last) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx

; 2009 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx
$LN2@Orphan_ran:

; 2010 :         while (*_Pnext) {

	mov	edx, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN1@Orphan_ran

; 2011 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR __Pnextptr$3[ebp], edx

; 2012 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	eax, DWORD PTR __Pnextptr$3[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN6@Orphan_ran
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __Pnextptr$3[ebp]
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 2013 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Temp$2[ebp], eax

; 2014 :                 _Pnext           = &_Temp->_Mynextiter;

	mov	ecx, DWORD PTR __Temp$2[ebp]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 2015 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 2016 :                 const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Temp$1[ebp], eax

; 2017 :                 _Temp->_Myproxy  = nullptr;

	mov	ecx, DWORD PTR __Temp$1[ebp]
	mov	DWORD PTR [ecx], 0

; 2018 :                 *_Pnext          = _Temp->_Mynextiter;

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR __Temp$1[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx], ecx
$LN5@Orphan_ran:

; 2019 :             }
; 2020 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN1@Orphan_ran:

; 2021 :     }

	mov	esp, ebp
	pop	ebp
	ret	8
?_Orphan_range_unlocked@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEXPAUedge@?A0x28cf8a89@detail@luabind@@0@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
?_Xlength@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@CAXXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Xlength

; 1999 :     [[noreturn]] static void _Xlength() {

	push	ebp
	mov	ebp, esp

; 2000 :         _Xlength_error("vector too long");

	push	OFFSET ??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 2001 :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Xlength@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@CAXXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Myend$ = -36						; size = 4
__Mylast$ = -32						; size = 4
__Myfirst$ = -28					; size = 4
__My_data$ = -24					; size = 4
__Al$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Tidy
; _this$ = ecx

; 1897 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1898 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1899 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1900 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1901 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1902 :         pointer& _Myend   = _My_data._Myend;

	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax

; 1903 : 
; 1904 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1905 : 
; 1906 :         if (_Myfirst) { // destroy and deallocate old array

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Tidy

; 1907 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 12					; 0000000cH

; 1908 :             _ASAN_VECTOR_REMOVE;
; 1909 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	sar	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUedge@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::edge>::deallocate

; 1910 : 
; 1911 :             _Myfirst = nullptr;

	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	DWORD PTR [eax], 0

; 1912 :             _Mylast  = nullptr;

	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [ecx], 0

; 1913 :             _Myend   = nullptr;

	mov	edx, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@Tidy:

; 1914 :         }
; 1915 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?_Tidy@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Tidy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Myend$ = -24						; size = 4
__Mylast$ = -20						; size = 4
__Myfirst$ = -16					; size = 4
__My_data$ = -12					; size = 4
__Al$ = -8						; size = 4
_this$ = -4						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXQAUedge@?A0x28cf8a89@detail@luabind@@II@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Change_array
; _this$ = ecx

; 1875 :     _CONSTEXPR20 void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1876 :         // orphan all iterators, discard old array, acquire new array
; 1877 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1878 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1879 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 1880 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 1881 :         pointer& _Myend   = _My_data._Myend;

	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax

; 1882 : 
; 1883 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1884 : 
; 1885 :         if (_Myfirst) { // destroy and deallocate old array

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@Change_arr

; 1886 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YAXPAUedge@?A0x28cf8a89@detail@luabind@@QAU1234@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::`anonymous namespace'::edge> >
	add	esp, 12					; 0000000cH

; 1887 :             _ASAN_VECTOR_REMOVE;
; 1888 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	sar	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUedge@?A0x28cf8a89@detail@luabind@@I@Z ; std::allocator<luabind::detail::`anonymous namespace'::edge>::deallocate
$LN2@Change_arr:

; 1889 :         }
; 1890 : 
; 1891 :         _Myfirst = _Newvec;

	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	ecx, DWORD PTR __Newvec$[ebp]
	mov	DWORD PTR [eax], ecx

; 1892 :         _Mylast  = _Newvec + _Newsize;

	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	eax, DWORD PTR __Newvec$[ebp]
	lea	ecx, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [edx], ecx

; 1893 :         _Myend   = _Newvec + _Newcapacity;

	mov	eax, DWORD PTR __Newcapacity$[ebp]
	mov	ecx, DWORD PTR __Newvec$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [eax], edx

; 1894 :         _ASAN_VECTOR_CREATE;
; 1895 :     }

	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Change_array@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXQAUedge@?A0x28cf8a89@detail@luabind@@II@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__Geometric$ = -16					; size = 4
__Max$ = -12						; size = 4
__Oldcapacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Calculate_growth
; _this$ = ecx

; 1823 :     _CONSTEXPR20 size_type _Calculate_growth(const size_type _Newsize) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1824 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1825 :         const size_type _Oldcapacity = capacity();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::capacity
	mov	DWORD PTR __Oldcapacity$[ebp], eax

; 1826 :         const auto _Max              = max_size();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::max_size
	mov	DWORD PTR __Max$[ebp], eax

; 1827 : 
; 1828 :         if (_Oldcapacity > _Max - _Oldcapacity / 2) {

	mov	eax, DWORD PTR __Oldcapacity$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR __Max$[ebp]
	sub	ecx, eax
	cmp	DWORD PTR __Oldcapacity$[ebp], ecx
	jbe	SHORT $LN2@Calculate_

; 1829 :             return _Max; // geometric growth would overflow

	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1830 :         }
; 1831 : 
; 1832 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	mov	edx, DWORD PTR __Oldcapacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Oldcapacity$[ebp]
	mov	DWORD PTR __Geometric$[ebp], edx

; 1833 : 
; 1834 :         if (_Geometric < _Newsize) {

	mov	eax, DWORD PTR __Geometric$[ebp]
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN3@Calculate_

; 1835 :             return _Newsize; // geometric growth would be insufficient

	mov	eax, DWORD PTR __Newsize$[ebp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1836 :         }
; 1837 : 
; 1838 :         return _Geometric; // geometric growth is sufficient

	mov	eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:

; 1839 :     }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Calculate_growth@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEII@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
?capacity@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::capacity
; _this$ = ecx

; 1739 :     _NODISCARD _CONSTEXPR20 size_type capacity() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1740 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1741 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 3

; 1742 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::max_size
; _this$ = ecx

; 1734 :     _NODISCARD _CONSTEXPR20 size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1735 :         return (_STD min)(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@ABEABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@@Z ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1736 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1737 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBEIXZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::end
; _this$ = ecx

; 1671 :     _NODISCARD _CONSTEXPR20 const_iterator end() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1672 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1673 :         return const_iterator(_My_data._Mylast, _STD addressof(_My_data));

	mov	ecx, DWORD PTR __My_data$[ebp]
	push	ecx
	call	??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@ABV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > const >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1674 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::end
; _this$ = ecx

; 1666 :     _NODISCARD _CONSTEXPR20 iterator end() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1667 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1668 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

	mov	ecx, DWORD PTR __My_data$[ebp]
	push	ecx
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1669 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::begin
; _this$ = ecx

; 1661 :     _NODISCARD _CONSTEXPR20 const_iterator begin() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1662 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1663 :         return const_iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	ecx, DWORD PTR __My_data$[ebp]
	push	ecx
	call	??$addressof@$$CBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPBV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@ABV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > const >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1664 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::begin
; _this$ = ecx

; 1656 :     _NODISCARD _CONSTEXPR20 iterator begin() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1657 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1658 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	ecx, DWORD PTR __My_data$[ebp]
	push	ecx
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> > >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@PAUedge@?A0x28cf8a89@detail@luabind@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1659 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
tv66 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Val$ = 24						; size = 4
?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::insert
; _this$ = ecx

; 959  :     _CONSTEXPR20 iterator insert(const_iterator _Where, _Ty&& _Val) { // insert by moving _Val at _Where

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 960  :         return emplace(_Where, _STD move(_Val));

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$move@AAUedge@?A0x28cf8a89@detail@luabind@@@std@@YA$$QAUedge@?A0x28cf8a89@detail@luabind@@AAU1234@@Z ; std::move<luabind::detail::`anonymous namespace'::edge &>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$emplace@Uedge@?A0x28cf8a89@detail@luabind@@@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@1@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::emplace<luabind::detail::`anonymous namespace'::edge>
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 961  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@std@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?insert@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@@2@$$QAUedge@?A0x28cf8a89@detail@luabind@@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::insert
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
$T1 = -24						; size = 4
_$S6$ = -13						; size = 1
__Alproxy$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::~vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
; _this$ = ecx

; 806  :     _CONSTEXPR20 ~vector() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 807  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEXXZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Tidy

; 808  : #if _ITERATOR_DEBUG_LEVEL != 0
; 809  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S6$[ebp]
	call	??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::edge>
	lea	eax, DWORD PTR _$S6$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 810  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 811  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 812  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@vector
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@vector:
	DD	1
	DD	$LN4@vector
$LN4@vector:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN3@vector
$LN3@vector:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	54					; 00000036H
	DB	0
??1?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::~vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
$T2 = -42						; size = 1
$T3 = -41						; size = 1
$T4 = -40						; size = 4
$T5 = -36						; size = 4
$T6 = -32						; size = 4
$T7 = -28						; size = 4
$T8 = -24						; size = 4
$T9 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
; _this$ = ecx

; 740  :             _STD exchange(_Right._Mypair._Myval2._Myend, nullptr)) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 737  :         : _Mypair(_One_then_variadic_args_t{}, _STD move(_Right._Getal()),

	mov	DWORD PTR $T8[ebp], 0
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	??$exchange@PAUedge@?A0x28cf8a89@detail@luabind@@$$T@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@$$QA$$T@Z ; std::exchange<luabind::detail::`anonymous namespace'::edge *,std::nullptr_t>
	add	esp, 8
	mov	DWORD PTR $T9[ebp], eax
	mov	DWORD PTR $T6[ebp], 0
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 8
	push	eax
	call	??$exchange@PAUedge@?A0x28cf8a89@detail@luabind@@$$T@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@$$QA$$T@Z ; std::exchange<luabind::detail::`anonymous namespace'::edge *,std::nullptr_t>
	add	esp, 8
	mov	DWORD PTR $T7[ebp], eax
	mov	DWORD PTR $T4[ebp], 0
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	call	??$exchange@PAUedge@?A0x28cf8a89@detail@luabind@@$$T@std@@YAPAUedge@?A0x28cf8a89@detail@luabind@@AAPAU1234@$$QA$$T@Z ; std::exchange<luabind::detail::`anonymous namespace'::edge *,std::nullptr_t>
	add	esp, 8
	mov	DWORD PTR $T5[ebp], eax
	lea	eax, DWORD PTR $T9[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	push	eax
	call	??$move@AAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@YA$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@0@AAV10@@Z ; std::move<std::allocator<luabind::detail::`anonymous namespace'::edge> &>
	add	esp, 4
	push	eax
	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@PAUedge@?A0x28cf8a89@detail@luabind@@PAU2345@PAU2345@@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@$$QAPAUedge@?A0x28cf8a89@detail@luabind@@22@Z ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1><std::allocator<luabind::detail::`anonymous namespace'::edge>,luabind::detail::`anonymous namespace'::edge *,luabind::detail::A0x28cf8a89::edge *,luabind::detail::A0x28cf8a89::edge *>

; 741  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::edge>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 742  :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 743  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@$$QAV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vector
_TEXT	SEGMENT
$T2 = -18						; size = 1
$T3 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
; _this$ = ecx

; 675  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1>::_Compressed_pair<std::allocator<luabind::detail::`anonymous namespace'::edge>,std::_Vector_val<std::_Simple_types<luabind::detail::`anonymous namespace'::edge> >,1><>

; 676  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@AAEAAV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0Uedge@?A0x28cf8a89@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::`anonymous namespace'::edge>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 677  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::max_size

; 695  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp

; 696  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 536870911				; 1fffffffH

; 697  :     }

	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@SAIABV?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<luabind::detail::`anonymous namespace'::edge> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUedge@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::edge>::allocate
; _this$ = ecx

; 835  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 836  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 837  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$07@std@@YAII@Z	; std::_Get_size_of_n<8>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 838  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAEPAUedge@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::edge>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUedge@?A0x28cf8a89@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::`anonymous namespace'::edge>::deallocate
; _this$ = ecx

; 829  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@deallocate:

; 830  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN10@deallocate
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN7@deallocate
$LN10@deallocate:
	jmp	SHORT $LN2@deallocate
$LN7@deallocate:
	push	OFFSET ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@deallocate
$LN2@deallocate:
	xor	edx, edx
	jne	SHORT $LN4@deallocate

; 831  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 832  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 833  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAEXQAUedge@?A0x28cf8a89@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::`anonymous namespace'::edge>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ PROC ; std::allocator<luabind::detail::`anonymous namespace'::edge>::allocator<luabind::detail::`anonymous namespace'::edge>
; _this$ = ecx

; 821  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@QAE@XZ ENDP ; std::allocator<luabind::detail::`anonymous namespace'::edge>::allocator<luabind::detail::`anonymous namespace'::edge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_id$ = 8						; size = 4
??0vertex@?A0x28cf8a89@detail@luabind@@QAE@I@Z PROC	; luabind::detail::`anonymous namespace'::vertex::vertex
; _this$ = ecx

; 46   :       {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 45   :         : id(id)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _id$[ebp]
	mov	DWORD PTR [eax], ecx

; 46   :       {}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$vector@Uedge@?A0x28cf8a89@detail@luabind@@V?$allocator@Uedge@?A0x28cf8a89@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >::vector<luabind::detail::`anonymous namespace'::edge,std::allocator<luabind::detail::`anonymous namespace'::edge> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0vertex@?A0x28cf8a89@detail@luabind@@QAE@I@Z ENDP	; luabind::detail::`anonymous namespace'::vertex::vertex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
tv67 = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??M?A0x28cf8a89@detail@luabind@@YA_NABUedge@012@0@Z PROC ; luabind::detail::`anonymous namespace'::operator<

; 38   :   {

	push	ebp
	mov	ebp, esp
	push	ecx

; 39   :       return x.target < y.target;

	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 40   :   }

	mov	esp, ebp
	pop	ebp
	ret	0
??M?A0x28cf8a89@detail@luabind@@YA_NABUedge@012@0@Z ENDP ; luabind::detail::`anonymous namespace'::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_target$ = 8						; size = 4
_cast$ = 12						; size = 4
??0edge@?A0x28cf8a89@detail@luabind@@QAE@IP6APAXPAX@Z@Z PROC ; luabind::detail::`anonymous namespace'::edge::edge
; _this$ = ecx

; 31   :       {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 29   :         : target(target)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax], ecx

; 30   :         , cast(cast)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _cast$[ebp]
	mov	DWORD PTR [edx+4], eax

; 31   :       {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0edge@?A0x28cf8a89@detail@luabind@@QAE@IP6APAXPAX@Z@Z ENDP ; luabind::detail::`anonymous namespace'::edge::edge
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
$T2 = -48						; size = 4
$T3 = -44						; size = 8
_inserted$ = -32					; size = 16
__$EHRec$ = -12						; size = 12
_cls$ = 8						; size = 4
?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z PROC ; luabind::detail::allocate_class_id

; 243  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 244  :     typedef std::map<type_id, class_id> map_type;
; 245  : 
; 246  :     static map_type registered;

	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@allocate_c
	push	OFFSET ?$TSS0@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4HA, -1
	jne	SHORT $LN2@allocate_c
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET ?registered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4V?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@A
	call	??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
	push	OFFSET ??__Fregistered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z@YAXXZ ; `luabind::detail::allocate_class_id'::`2'::`dynamic atexit destructor for 'registered''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4HA
	call	__Init_thread_footer
	add	esp, 4
$LN2@allocate_c:

; 247  :     static class_id id = 0;
; 248  : 
; 249  :     std::pair<map_type::iterator, bool> inserted = registered.insert(

	push	OFFSET ?id@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4IA
	mov	ecx, DWORD PTR _cls$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$make_pair@ABVtype_id@luabind@@AAI@std@@YA?AU?$pair@Vtype_id@luabind@@I@0@ABVtype_id@luabind@@AAI@Z ; std::make_pair<luabind::type_id const &,unsigned int &>
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR _inserted$[ebp]
	push	eax
	mov	ecx, OFFSET ?registered@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4V?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@A
	call	??$insert@U?$pair@Vtype_id@luabind@@I@std@@$0A@@?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@Vtype_id@luabind@@I@1@@Z ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::insert<std::pair<luabind::type_id,unsigned int>,0>

; 250  :         std::make_pair(cls, id));
; 251  : 
; 252  :     if (inserted.second)

	movzx	ecx, BYTE PTR _inserted$[ebp+12]
	test	ecx, ecx
	je	SHORT $LN3@allocate_c

; 253  :         ++id;

	mov	edx, DWORD PTR ?id@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4IA
	add	edx, 1
	mov	DWORD PTR ?id@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4IA, edx
$LN3@allocate_c:

; 254  : 
; 255  :     return inserted.first->second;

	lea	ecx, DWORD PTR _inserted$[ebp]
	call	??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBVtype_id@luabind@@I@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator->
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR _inserted$[ebp]
	call	??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 256  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@allocate_c
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@allocate_c:
	DD	1
	DD	$LN9@allocate_c
$LN9@allocate_c:
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN7@allocate_c
$LN7@allocate_c:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z$0:
	push	OFFSET ?$TSS0@?1??allocate_class_id@detail@luabind@@YAIABVtype_id@3@@Z@4HA
	call	__Init_thread_abort
	pop	ecx
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?allocate_class_id@detail@luabind@@YAIABVtype_id@2@@Z ENDP ; luabind::detail::allocate_class_id
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@XZ PROC ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@_N@std@@QAE@XZ ENDP ; std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>::~pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::~_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBVtype_id@luabind@@I@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBVtype_id@luabind@@I@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator->, COMDAT
; _this$ = ecx

; 278  :     _NODISCARD pointer operator->() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 279  :         return pointer_traits<pointer>::pointer_to(**this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBVtype_id@luabind@@I@1@XZ ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAU?$pair@$$CBVtype_id@luabind@@I@std@@@std@@SAPAU?$pair@$$CBVtype_id@luabind@@I@2@AAU32@@Z ; std::pointer_traits<std::pair<luabind::type_id const ,unsigned int> *>::pointer_to
	add	esp, 4

; 280  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEPAU?$pair@$$CBVtype_id@luabind@@I@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBVtype_id@luabind@@I@1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBVtype_id@luabind@@I@1@XZ PROC ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator*, COMDAT
; _this$ = ecx

; 274  :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 275  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBVtype_id@luabind@@I@1@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator*

; 276  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEAAU?$pair@$$CBVtype_id@luabind@@I@1@XZ ENDP ; std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___param0$ = 8						; size = 4
___param1$ = 12						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___param1$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___param0$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBVtype_id@luabind@@I@1@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBVtype_id@luabind@@I@1@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator*, COMDAT
; _this$ = ecx

; 179  :     _NODISCARD reference operator*() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 180  : #if _ITERATOR_DEBUG_LEVEL == 2
; 181  :         const auto _Mycont = static_cast<const _Mytree*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 182  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized map/set iterator");

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DG@LCFNIIPB@cannot?5dereference?5value?9initia@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	182					; 000000b6H
	push	OFFSET ??_C@_0GA@INMJJLGF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	182					; 000000b6H
	push	OFFSET ??_C@_1MA@LBEPAJEF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@ILGCNILF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator
$LN10@operator:

; 183  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end map/set iterator");

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CI@OKFEHCEB@cannot?5dereference?5end?5map?1set?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	183					; 000000b7H
	push	OFFSET ??_C@_0GA@INMJJLGF@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	183					; 000000b7H
	push	OFFSET ??_C@_1MA@LBEPAJEF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1FE@NKHAAGMB@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	edx, edx
	jne	SHORT $LN10@operator

; 184  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 185  : 
; 186  :         return this->_Ptr->_Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	add	eax, 16					; 00000010H

; 187  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@QBEABU?$pair@$$CBVtype_id@luabind@@I@1@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@$$QAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 38   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 39   :         this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 40   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@PBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ PROC ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::~map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ENDP ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::~map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\map
;	COMDAT ??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ PROC ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >, COMDAT
; _this$ = ecx

; 105  :     map() : _Mybase(key_compare()) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ENDP ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@Vtype_id@luabind@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@Vtype_id@luabind@@@2@XZ PROC ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Get_first, COMDAT
; _this$ = ecx

; 1386 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1388 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@Vtype_id@luabind@@@2@XZ ENDP ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1386 :     constexpr const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1387 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1388 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU32@@Z
_TEXT	SEGMENT
__Parent_sibling$1 = -20				; size = 4
__Parent_sibling$2 = -16				; size = 4
__Pnode$3 = -12						; size = 4
__Head$ = -8						; size = 4
_this$ = -4						; size = 4
__Loc$ = 8						; size = 8
__Newnode$ = 16						; size = 4
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Insert_node, COMDAT
; _this$ = ecx

; 644  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 645  :         ++_Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 646  :         const auto _Head  = _Myhead;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Head$[ebp], ecx

; 647  :         _Newnode->_Parent = _Loc._Parent;

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	eax, DWORD PTR __Loc$[ebp]
	mov	DWORD PTR [edx+4], eax

; 648  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

	mov	ecx, DWORD PTR __Loc$[ebp]
	cmp	ecx, DWORD PTR __Head$[ebp]
	jne	SHORT $LN5@Insert_nod

; 649  :             _Head->_Left     = _Newnode;

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [edx], eax

; 650  :             _Head->_Parent   = _Newnode;

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 651  :             _Head->_Right    = _Newnode;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 652  :             _Newnode->_Color = _Black; // the root is black

	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	BYTE PTR [edx+12], 1

; 653  :             return _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
	jmp	$LN18@Insert_nod
$LN5@Insert_nod:

; 654  :         }
; 655  : 
; 656  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 657  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

	cmp	DWORD PTR __Loc$[ebp+4], 0
	jne	SHORT $LN6@Insert_nod

; 658  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 659  :             _Loc._Parent->_Right = _Newnode;

	mov	eax, DWORD PTR __Loc$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 660  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR __Loc$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN8@Insert_nod

; 661  :                 _Head->_Right = _Newnode;

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN8@Insert_nod:

; 662  :             }
; 663  :         } else { // add to left of _Loc._Parent

	jmp	SHORT $LN7@Insert_nod
$LN6@Insert_nod:

; 664  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 665  :             _Loc._Parent->_Left = _Newnode;

	mov	eax, DWORD PTR __Loc$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 666  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR __Loc$[ebp]
	cmp	eax, DWORD PTR [edx]
	jne	SHORT $LN7@Insert_nod

; 667  :                 _Head->_Left = _Newnode;

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [ecx], edx
$LN7@Insert_nod:

; 668  :             }
; 669  :         }
; 670  : 
; 671  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

	mov	eax, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$3[ebp], eax
$LN4@Insert_nod:
	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movsx	eax, BYTE PTR [edx+12]
	test	eax, eax
	jne	$LN3@Insert_nod

; 672  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax]
	jne	$LN10@Insert_nod

; 673  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Parent_sibling$2[ebp], eax

; 674  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	mov	ecx, DWORD PTR __Parent_sibling$2[ebp]
	movsx	edx, BYTE PTR [ecx+12]
	test	edx, edx
	jne	SHORT $LN12@Insert_nod

; 675  :                     _Pnode->_Parent->_Color          = _Black;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 1

; 676  :                     _Parent_sibling->_Color          = _Black;

	mov	edx, DWORD PTR __Parent_sibling$2[ebp]
	mov	BYTE PTR [edx+12], 1

; 677  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [edx+12], 0

; 678  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnode$3[ebp], edx

; 679  :                 } else { // parent's sibling has red and black children

	jmp	SHORT $LN13@Insert_nod
$LN12@Insert_nod:

; 680  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pnode$3[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN14@Insert_nod

; 681  :                         _Pnode = _Pnode->_Parent;

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Pnode$3[ebp], ecx

; 682  :                         _Lrotate(_Pnode);

	mov	edx, DWORD PTR __Pnode$3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Lrotate
$LN14@Insert_nod:

; 683  :                     }
; 684  : 
; 685  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	eax, DWORD PTR __Pnode$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 1

; 686  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 0

; 687  :                     _Rrotate(_Pnode->_Parent->_Parent);

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Rrotate
$LN13@Insert_nod:

; 688  :                 }
; 689  :             } else { // fixup red-red in right subtree

	jmp	$LN11@Insert_nod
$LN10@Insert_nod:

; 690  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Parent_sibling$1[ebp], edx

; 691  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

	mov	eax, DWORD PTR __Parent_sibling$1[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	jne	SHORT $LN15@Insert_nod

; 692  :                     _Pnode->_Parent->_Color          = _Black;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+12], 1

; 693  :                     _Parent_sibling->_Color          = _Black;

	mov	ecx, DWORD PTR __Parent_sibling$1[ebp]
	mov	BYTE PTR [ecx+12], 1

; 694  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	BYTE PTR [ecx+12], 0

; 695  :                     _Pnode                           = _Pnode->_Parent->_Parent;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Pnode$3[ebp], ecx

; 696  :                 } else { // parent's sibling has red and black children

	jmp	SHORT $LN11@Insert_nod
$LN15@Insert_nod:

; 697  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$3[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN17@Insert_nod

; 698  :                         _Pnode = _Pnode->_Parent;

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Pnode$3[ebp], eax

; 699  :                         _Rrotate(_Pnode);

	mov	ecx, DWORD PTR __Pnode$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Rrotate
$LN17@Insert_nod:

; 700  :                     }
; 701  : 
; 702  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

	mov	edx, DWORD PTR __Pnode$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+12], 1

; 703  :                     _Pnode->_Parent->_Parent->_Color = _Red;

	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	mov	BYTE PTR [eax+12], 0

; 704  :                     _Lrotate(_Pnode->_Parent->_Parent);

	mov	ecx, DWORD PTR __Pnode$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Lrotate
$LN11@Insert_nod:

; 705  :                 }
; 706  :             }
; 707  :         }

	jmp	$LN4@Insert_nod
$LN3@Insert_nod:

; 708  : 
; 709  :         _Head->_Parent->_Color = _Black; // root is always black

	mov	ecx, DWORD PTR __Head$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	BYTE PTR [edx+12], 1

; 710  :         return _Newnode;

	mov	eax, DWORD PTR __Newnode$[ebp]
$LN18@Insert_nod:

; 711  :     }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Rrotate, COMDAT
; _this$ = ecx

; 480  :     void _Rrotate(_Nodeptr _Wherenode) noexcept { // promote left node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 481  :         _Nodeptr _Pnode   = _Wherenode->_Left;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 482  :         _Wherenode->_Left = _Pnode->_Right;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx], ecx

; 483  : 
; 484  :         if (!_Pnode->_Right->_Isnil) {

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN2@Rrotate

; 485  :             _Pnode->_Right->_Parent = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@Rrotate:

; 486  :         }
; 487  : 
; 488  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 489  : 
; 490  :         if (_Wherenode == _Myhead->_Parent) {

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Rrotate

; 491  :             _Myhead->_Parent = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN4@Rrotate
$LN3@Rrotate:

; 492  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN5@Rrotate

; 493  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 494  :         } else {

	jmp	SHORT $LN4@Rrotate
$LN5@Rrotate:

; 495  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@Rrotate:

; 496  :         }
; 497  : 
; 498  :         _Pnode->_Right      = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx+8], eax

; 499  :         _Wherenode->_Parent = _Pnode;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 500  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Lrotate, COMDAT
; _this$ = ecx

; 458  :     void _Lrotate(_Nodeptr _Wherenode) noexcept { // promote right node to root of subtree

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 459  :         _Nodeptr _Pnode    = _Wherenode->_Right;

	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Pnode$[ebp], ecx

; 460  :         _Wherenode->_Right = _Pnode->_Left;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], ecx

; 461  : 
; 462  :         if (!_Pnode->_Left->_Isnil) {

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN2@Lrotate

; 463  :             _Pnode->_Left->_Parent = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@Lrotate:

; 464  :         }
; 465  : 
; 466  :         _Pnode->_Parent = _Wherenode->_Parent;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 467  : 
; 468  :         if (_Wherenode == _Myhead->_Parent) {

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN3@Lrotate

; 469  :             _Myhead->_Parent = _Pnode;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN4@Lrotate
$LN3@Lrotate:

; 470  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Lrotate

; 471  :             _Wherenode->_Parent->_Left = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 472  :         } else {

	jmp	SHORT $LN4@Lrotate
$LN5@Lrotate:

; 473  :             _Wherenode->_Parent->_Right = _Pnode;

	mov	edx, DWORD PTR __Wherenode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx
$LN4@Lrotate:

; 474  :         }
; 475  : 
; 476  :         _Pnode->_Left       = _Wherenode;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [edx], eax

; 477  :         _Wherenode->_Parent = _Pnode;

	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 478  :     }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >, COMDAT
; _this$ = ecx

; 435  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xstddef
;	COMDAT ??R?$less@Vtype_id@luabind@@@std@@QBE_NABVtype_id@luabind@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@Vtype_id@luabind@@@std@@QBE_NABVtype_id@luabind@@0@Z PROC ; std::less<luabind::type_id>::operator(), COMDAT
; _this$ = ecx

; 116  :     _NODISCARD constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 117  :         return _Left < _Right;

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	??Mtype_id@luabind@@QBE_NABV01@@Z	; luabind::type_id::operator<

; 118  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@Vtype_id@luabind@@@std@@QBE_NABVtype_id@luabind@@0@Z ENDP ; std::less<luabind::type_id>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary, COMDAT
; _this$ = ecx

; 1956 :     const _Scary_val* _Get_scary() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1957 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@ABV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > const >
	add	esp, 4

; 1958 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEPBV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary, COMDAT
; _this$ = ecx

; 1952 :     _Scary_val* _Get_scary() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1953 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
	add	esp, 4

; 1954 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1948 :     const _Alnode& _Getal() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1949 :         return _Mypair._Myval2._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first

; 1950 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1944 :     _Alnode& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1945 :         return _Mypair._Myval2._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first

; 1946 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABU?$less@Vtype_id@luabind@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcomp@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABU?$less@Vtype_id@luabind@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getcomp, COMDAT
; _this$ = ecx

; 1940 :     const key_compare& _Getcomp() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1941 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QBEABU?$less@Vtype_id@luabind@@@2@XZ ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Get_first

; 1942 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcomp@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABU?$less@Vtype_id@luabind@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Proxy$ = -48						; size = 8
_$S13$ = -29						; size = 1
__Alproxy$ = -24					; size = 4
__Scary$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Alloc_sentinel_and_proxy, COMDAT
; _this$ = ecx

; 1923 :     void _Alloc_sentinel_and_proxy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1924 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1925 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S13$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
	lea	eax, DWORD PTR _$S13$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1926 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);

	mov	ecx, DWORD PTR __Scary$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1927 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	call	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 4
	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1928 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 1929 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Alloc_sent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@Alloc_sent:
	DD	2
	DD	$LN7@Alloc_sent
$LN7@Alloc_sent:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@Alloc_sent
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN5@Alloc_sent
$LN5@Alloc_sent:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN4@Alloc_sent:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	51					; 00000033H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Alloc_sentinel_and_proxy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Check_grow_by_1, COMDAT
; _this$ = ecx

; 1614 :     void _Check_grow_by_1() {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1615 :         if (max_size() == _Get_scary()->_Mysize) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
	cmp	esi, DWORD PTR [eax+8]
	jne	SHORT $LN3@Check_grow

; 1616 :             _Throw_tree_length_error();

	call	?_Throw_tree_length_error@std@@YAXXZ	; std::_Throw_tree_length_error
$LN3@Check_grow:

; 1617 :         }
; 1618 :     }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Check_grow_by_1@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Check_grow_by_1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::max_size, COMDAT
; _this$ = ecx

; 1194 :     _NODISCARD size_type max_size() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1195 :         return (_STD min)(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IBEABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1196 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1197 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_$S7$ = -17						; size = 1
__Alproxy$ = -12					; size = 4
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 1077 :     ~_Tree() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1078 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1079 :         _Scary->_Erase_head(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	mov	ecx, DWORD PTR __Scary$[ebp]
	call	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >

; 1080 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1081 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S7$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
	lea	eax, DWORD PTR _$S7$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1082 :         _Delete_plain_internal(_Alproxy, _Scary->_Myproxy);

	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1083 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1084 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Tree
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Tree:
	DD	1
	DD	$LN4@Tree
$LN4@Tree:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Tree
$LN3@Tree:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	55					; 00000037H
	DB	0
??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z
_TEXT	SEGMENT
$T1 = -6						; size = 1
$T2 = -5						; size = 1
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 880  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1><std::less<luabind::type_id> const &,std::_Zero_then_variadic_args_t>

; 881  :         _Alloc_sentinel_and_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Alloc_sentinel_and_proxy

; 882  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::max_size, COMDAT

; 695  :     _NODISCARD static _CONSTEXPR20 size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp

; 696  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 178956970				; 0aaaaaaaH

; 697  :     }

	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::deallocate, COMDAT

; 661  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 662  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 663  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 664  :         if (_STD is_constant_evaluated()) {
; 665  :             _Al.deallocate(_Ptr, _Count);
; 666  :         } else
; 667  : #endif // _HAS_CXX20
; 668  :         {
; 669  :             (void) _Al;
; 670  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 24
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 671  :         }
; 672  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate, COMDAT
; _this$ = ecx

; 835  :     _NODISCARD _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 836  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 837  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0BI@@std@@YAII@Z	; std::_Get_size_of_n<24>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 838  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::deallocate, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@deallocate:

; 830  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN10@deallocate
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN7@deallocate
$LN10@deallocate:
	jmp	SHORT $LN2@deallocate
$LN7@deallocate:
	push	OFFSET ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	push	0
	push	830					; 0000033eH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@deallocate
$LN2@deallocate:
	xor	edx, edx
	jne	SHORT $LN4@deallocate

; 831  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 832  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 24
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 833  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEXQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >, COMDAT
; _this$ = ecx

; 821  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\smart_ptr\scoped_ptr.hpp
;	COMDAT ??C?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QBEPAVimpl@cast_graph@detail@luabind@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QBEPAVimpl@cast_graph@detail@luabind@@XZ PROC ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::operator->, COMDAT
; _this$ = ecx

; 104  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 105  :         BOOST_ASSERT( px != 0 );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@operator
	push	105					; 00000069H
	push	OFFSET ??_C@_1JA@OMHIKCMH@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
	push	OFFSET ??_C@_1BA@EEPFKCON@?$AAp?$AAx?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 106  :         return px;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 107  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QBEPAVimpl@cast_graph@detail@luabind@@XZ ENDP ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\smart_ptr\scoped_ptr.hpp
;	COMDAT ??1?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@XZ PROC ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::~scoped_ptr<luabind::detail::cast_graph::impl>, COMDAT
; _this$ = ecx

; 84   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 85   : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 86   :         boost::sp_scalar_destructor_hook( px );
; 87   : #endif
; 88   :         boost::checked_delete( px );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$checked_delete@Vimpl@cast_graph@detail@luabind@@@boost@@YAXPAVimpl@cast_graph@detail@luabind@@@Z ; boost::checked_delete<luabind::detail::cast_graph::impl>
	add	esp, 4

; 89   :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@XZ ENDP ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::~scoped_ptr<luabind::detail::cast_graph::impl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\smart_ptr\scoped_ptr.hpp
;	COMDAT ??0?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@PAVimpl@cast_graph@detail@luabind@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_p$ = 8							; size = 4
??0?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@PAVimpl@cast_graph@detail@luabind@@@Z PROC ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::scoped_ptr<luabind::detail::cast_graph::impl>, COMDAT
; _this$ = ecx

; 66   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 65   :     explicit scoped_ptr( T * p = 0 ) BOOST_SP_NOEXCEPT : px( p )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx

; 67   : #if defined(BOOST_SP_ENABLE_DEBUG_HOOKS)
; 68   :         boost::sp_scalar_constructor_hook( px );
; 69   : #endif
; 70   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@PAVimpl@cast_graph@detail@luabind@@@Z ENDP ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::scoped_ptr<luabind::detail::cast_graph::impl>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_src$ = 8						; size = 4
_target$ = 12						; size = 4
_cast$ = 16						; size = 4
?insert@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z PROC ; luabind::detail::cast_graph::insert
; _this$ = ecx

; 231  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 232  :     m_impl->insert(src, target, cast);

	mov	eax, DWORD PTR _cast$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QBEPAVimpl@cast_graph@detail@luabind@@XZ ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::operator->
	mov	ecx, eax
	call	?insert@impl@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z ; luabind::detail::cast_graph::impl::insert

; 233  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?insert@cast_graph@detail@luabind@@QAEXIIP6APAXPAX@Z@Z ENDP ; luabind::detail::cast_graph::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_p$ = 12						; size = 4
_src$ = 16						; size = 4
_target$ = 20						; size = 4
_dynamic_id$ = 24					; size = 4
_dynamic_ptr$ = 28					; size = 4
?cast@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z PROC ; luabind::detail::cast_graph::cast
; _this$ = ecx

; 226  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 227  :     return m_impl->cast(p, src, target, dynamic_id, dynamic_ptr);

	mov	eax, DWORD PTR _dynamic_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dynamic_id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QBEPAVimpl@cast_graph@detail@luabind@@XZ ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::operator->
	mov	ecx, eax
	call	?cast@impl@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z ; luabind::detail::cast_graph::impl::cast
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 228  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?cast@cast_graph@detail@luabind@@QBE?AU?$pair@PAXH@std@@PAXIIIPBX@Z ENDP ; luabind::detail::cast_graph::cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1cast_graph@detail@luabind@@QAE@XZ PROC		; luabind::detail::cast_graph::~cast_graph
; _this$ = ecx

; 240  : {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@XZ ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::~scoped_ptr<luabind::detail::cast_graph::impl>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1cast_graph@detail@luabind@@QAE@XZ ENDP		; luabind::detail::cast_graph::~cast_graph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
_TEXT	SEGMENT
tv78 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0cast_graph@detail@luabind@@QAE@XZ PROC		; luabind::detail::cast_graph::cast_graph
; _this$ = ecx

; 237  : {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0cast_graph@detail@luabind@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 236  :   : m_impl(new impl)

	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@cast_graph
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0impl@cast_graph@detail@luabind@@QAE@XZ
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@cast_graph
$LN3@cast_graph:
	mov	DWORD PTR tv78[ebp], 0
$LN4@cast_graph:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$scoped_ptr@Vimpl@cast_graph@detail@luabind@@@boost@@QAE@PAVimpl@cast_graph@detail@luabind@@@Z ; boost::scoped_ptr<luabind::detail::cast_graph::impl>::scoped_ptr<luabind::detail::cast_graph::impl>

; 237  : {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0cast_graph@detail@luabind@@QAE@XZ$0:
	push	28					; 0000001cH
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0cast_graph@detail@luabind@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0cast_graph@detail@luabind@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0cast_graph@detail@luabind@@QAE@XZ ENDP		; luabind::detail::cast_graph::cast_graph
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\typeid.hpp
;	COMDAT ??Mtype_id@luabind@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??Mtype_id@luabind@@QBE_NABV01@@Z PROC			; luabind::type_id::operator<, COMDAT
; _this$ = ecx

; 45   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 46   :         return id->before(*other.id);

	mov	eax, DWORD PTR _other$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?before@type_info@@QBE_NABV1@@Z		; type_info::before

; 47   :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Mtype_id@luabind@@QBE_NABV01@@Z ENDP			; luabind::type_id::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\tuple_comparison.hpp
;	COMDAT ??$lt@Unull_type@tuples@boost@@U123@@detail@tuples@boost@@YA_NABUnull_type@12@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$lt@Unull_type@tuples@boost@@U123@@detail@tuples@boost@@YA_NABUnull_type@12@0@Z PROC ; boost::tuples::detail::lt<boost::tuples::null_type,boost::tuples::null_type>, COMDAT

; 76   : inline bool lt<null_type,null_type>(const null_type&, const null_type&) { return false; }

	push	ebp
	mov	ebp, esp
	xor	al, al
	pop	ebp
	ret	0
??$lt@Unull_type@tuples@boost@@U123@@detail@tuples@boost@@YA_NABUnull_type@12@0@Z ENDP ; boost::tuples::detail::lt<boost::tuples::null_type,boost::tuples::null_type>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\tuple\detail\tuple_basic.hpp
;	COMDAT ?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ
_TEXT	SEGMENT
$T1 = -1						; size = 1
?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ PROC	; boost::tuples::detail::cnull, COMDAT

; 59   :   inline const null_type cnull() { return null_type(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	al, BYTE PTR $T1[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?cnull@detail@tuples@boost@@YA?BUnull_type@23@XZ ENDP	; boost::tuples::detail::cnull
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ?set_false@foreach_detail_@boost@@YA_NAA_N@Z
_TEXT	SEGMENT
_b$ = 8							; size = 4
?set_false@foreach_detail_@boost@@YA_NAA_N@Z PROC	; boost::foreach_detail_::set_false, COMDAT

; 423  : {

	push	ebp
	mov	ebp, esp

; 424  :     b = false;

	mov	eax, DWORD PTR _b$[ebp]
	mov	BYTE PTR [eax], 0

; 425  :     return false;

	xor	al, al

; 426  : }

	pop	ebp
	ret	0
?set_false@foreach_detail_@boost@@YA_NAA_N@Z ENDP	; boost::foreach_detail_::set_false
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\foreach.hpp
;	COMDAT ??Bauto_any_base@foreach_detail_@boost@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bauto_any_base@foreach_detail_@boost@@QBE_NXZ PROC	; boost::foreach_detail_::auto_any_base::operator bool, COMDAT
; _this$ = ecx

; 254  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 255  :         return false;

	xor	al, al

; 256  :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??Bauto_any_base@foreach_detail_@boost@@QBE_NXZ ENDP	; boost::foreach_detail_::auto_any_base::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_typeinfo.h
;	COMDAT ?before@type_info@@QBE_NABV1@@Z
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
?before@type_info@@QBE_NABV1@@Z PROC			; type_info::before, COMDAT
; _this$ = ecx

; 109  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 110  :         return __std_type_info_compare(&_Data, &_Other._Data) < 0;

	mov	eax, DWORD PTR __Other$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_type_info_compare
	add	esp, 8
	test	eax, eax
	jge	SHORT $LN3@before
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@before
$LN3@before:
	mov	DWORD PTR tv70[ebp], 0
$LN4@before:
	mov	al, BYTE PTR tv70[ebp]

; 111  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?before@type_info@@QBE_NABV1@@Z ENDP			; type_info::before
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 415  : [[noreturn]] inline void _Throw_tree_length_error() {

	push	ebp
	mov	ebp, esp

; 416  :     _Xlength_error("map/set too long");

	push	OFFSET ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Throw_tree:

; 417  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Basic_container_proxy_ptr12@std@@IAE@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT
; _this$ = ecx

; 1309 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1302 :     _Container_proxy* _Ptr = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1309 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Basic_container_proxy_ptr12@std@@IAE@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ PROC	; std::_Basic_container_proxy_ptr12::_Release, COMDAT
; _this$ = ecx

; 1304 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1305 :         _Ptr = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1306 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ENDP	; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ PROC	; std::_Iterator_base12::_Orphan_me_locked_v3, COMDAT
; _this$ = ecx

; 1217 :     void _Orphan_me_locked_v3() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1218 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1219 :         _Orphan_me_unlocked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1220 :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Orphan_me_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Orphan_me_:
	DD	1
	DD	$LN4@Orphan_me_
$LN4@Orphan_me_:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Orphan_me_
$LN3@Orphan_me_:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ ENDP	; std::_Iterator_base12::_Orphan_me_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Temp$1 = -12						; size = 4
__Pnext$ = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ PROC ; std::_Iterator_base12::_Orphan_me_unlocked_v3, COMDAT
; _this$ = ecx

; 1200 :     _CONSTEXPR20 void _Orphan_me_unlocked_v3() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1201 :         if (!_Myproxy) { // already orphaned

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN10@Orphan_me_

; 1202 :             return;

	jmp	$LN13@Orphan_me_
$LN10@Orphan_me_:

; 1203 :         }
; 1204 : 
; 1205 :         // adopted, remove self from list
; 1206 :         _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$[ebp], edx
$LN2@Orphan_me_:

; 1207 :         while (*_Pnext && *_Pnext != this) {

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_me_
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN6@Orphan_me_

; 1208 :             const auto _Temp = *_Pnext; // TRANSITION, VSO-1269037

	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$1[ebp], ecx

; 1209 :             _Pnext           = &_Temp->_Mynextiter;

	mov	edx, DWORD PTR __Temp$1[ebp]
	add	edx, 4
	mov	DWORD PTR __Pnext$[ebp], edx

; 1210 :         }

	jmp	SHORT $LN2@Orphan_me_
$LN6@Orphan_me_:

; 1211 : 
; 1212 :         _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN9@Orphan_me_
	jmp	SHORT $LN4@Orphan_me_
$LN9@Orphan_me_:
	push	OFFSET ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1212					; 000004bcH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN14@Orphan_me_
	int	3
$LN14@Orphan_me_:
	push	0
	push	1212					; 000004bcH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN9@Orphan_me_
$LN4@Orphan_me_:
	xor	eax, eax
	jne	SHORT $LN6@Orphan_me_

; 1213 :         *_Pnext  = _Mynextiter;

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx], eax

; 1214 :         _Myproxy = nullptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN13@Orphan_me_:

; 1215 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ENDP ; std::_Iterator_base12::_Orphan_me_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
__Parent$ = 8						; size = 4
?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_locked, COMDAT
; _this$ = ecx

; 1195 :     void _Adopt_locked(const _Container_base12* _Parent) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1196 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1197 :         _Adopt_unlocked(_Parent);

	mov	eax, DWORD PTR __Parent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1198 :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Adopt_lock
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN5@Adopt_lock:
	DD	1
	DD	$LN4@Adopt_lock
$LN4@Adopt_lock:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Adopt_lock
$LN3@Adopt_lock:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Parent_proxy$ = -8					; size = 4
_this$ = -4						; size = 4
__Parent$ = 8						; size = 4
?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt_unlocked, COMDAT
; _this$ = ecx

; 1178 :     _CONSTEXPR20 void _Adopt_unlocked(const _Container_base12* _Parent) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1179 :         if (!_Parent) {

	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN2@Adopt_unlo

; 1180 :             _Orphan_me_unlocked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3

; 1181 :             return;

	jmp	SHORT $LN5@Adopt_unlo
$LN2@Adopt_unlo:

; 1182 :         }
; 1183 : 
; 1184 :         _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$[ebp], ecx

; 1185 :         if (_Myproxy != _Parent_proxy) { // change parentage

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$[ebp]
	je	SHORT $LN5@Adopt_unlo

; 1186 :             if (_Myproxy) { // adopted, remove self from list

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN4@Adopt_unlo

; 1187 :                 _Orphan_me_unlocked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN4@Adopt_unlo:

; 1188 :             }
; 1189 :             _Mynextiter                 = _Parent_proxy->_Myfirstiter;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Parent_proxy$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1190 :             _Parent_proxy->_Myfirstiter = this;

	mov	edx, DWORD PTR __Parent_proxy$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1191 :             _Myproxy                    = _Parent_proxy;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$[ebp]
	mov	DWORD PTR [ecx], edx
$LN5@Adopt_unlo:

; 1192 :         }
; 1193 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z PROC	; std::_Iterator_base12::_Assign_locked, COMDAT
; _this$ = ecx

; 1173 :     void _Assign_locked(const _Iterator_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1174 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1175 :         _Assign_unlocked(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_unlocked

; 1176 :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Assign_loc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN5@Assign_loc:
	DD	1
	DD	$LN4@Assign_loc
$LN4@Assign_loc:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Assign_loc
$LN3@Assign_loc:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z ENDP	; std::_Iterator_base12::_Assign_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z PROC ; std::_Iterator_base12::_Assign_unlocked, COMDAT
; _this$ = ecx

; 1161 :     _CONSTEXPR20 void _Assign_unlocked(const _Iterator_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1162 :         if (_Myproxy == _Right._Myproxy) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN2@Assign_unl

; 1163 :             return;

	jmp	SHORT $LN5@Assign_unl
$LN2@Assign_unl:

; 1164 :         }
; 1165 : 
; 1166 :         if (_Right._Myproxy) {

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Assign_unl

; 1167 :             _Adopt_unlocked(_Right._Myproxy->_Mycont);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt_unlocked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_unlocked

; 1168 :         } else { // becoming invalid, disown current parent

	jmp	SHORT $LN5@Assign_unl
$LN3@Assign_unl:

; 1169 :             _Orphan_me_unlocked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me_unlocked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_unlocked_v3
$LN5@Assign_unl:

; 1170 :         }
; 1171 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_unlocked@_Iterator_base12@std@@AAEXABU12@@Z ENDP ; std::_Iterator_base12::_Assign_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 1150 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1151 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]

; 1152 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 1130 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1131 : #if _HAS_CXX20
; 1132 :         if (_STD is_constant_evaluated()) {
; 1133 :             _Adopt_unlocked(_Parent);
; 1134 :         } else
; 1135 : #endif // _HAS_CXX20
; 1136 :         {
; 1137 :             _Adopt_locked(_Parent);

	mov	eax, DWORD PTR __Parent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt_locked@_Iterator_base12@std@@AAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt_locked

; 1138 :         }
; 1139 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 1119 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1120 : #if _HAS_CXX20
; 1121 :         if (_STD is_constant_evaluated()) {
; 1122 :             _Orphan_me_unlocked_v3();
; 1123 :         } else
; 1124 : #endif // _HAS_CXX20
; 1125 :         {
; 1126 :             _Orphan_me_locked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me_locked_v3@_Iterator_base12@std@@AAEXXZ ; std::_Iterator_base12::_Orphan_me_locked_v3

; 1127 :         }
; 1128 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 1102 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1103 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1104 : #if _HAS_CXX20
; 1105 :         if (_STD is_constant_evaluated()) {
; 1106 :             _Assign_unlocked(_Right);
; 1107 :         } else
; 1108 : #endif // _HAS_CXX20
; 1109 :         {
; 1110 :             _Assign_locked(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_locked@_Iterator_base12@std@@AAEXABU12@@Z ; std::_Iterator_base12::_Assign_locked

; 1111 :         }
; 1112 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1113 :         _Myproxy = _Right._Myproxy;
; 1114 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1115 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1116 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 1098 :     _CONSTEXPR20 _Iterator_base12(const _Iterator_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1101 : 
; 1102 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1103 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1104 : #if _HAS_CXX20
; 1105 :         if (_STD is_constant_evaluated()) {
; 1106 :             _Assign_unlocked(_Right);
; 1107 :         } else
; 1108 : #endif // _HAS_CXX20
; 1109 :         {
; 1110 :             _Assign_locked(_Right);
; 1111 :         }
; 1112 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1113 :         _Myproxy = _Right._Myproxy;
; 1114 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1115 :         return *this;
; 1116 :     }
; 1117 : 
; 1118 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1119 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {
; 1120 : #if _HAS_CXX20
; 1121 :         if (_STD is_constant_evaluated()) {
; 1122 :             _Orphan_me_unlocked_v3();
; 1123 :         } else
; 1124 : #endif // _HAS_CXX20
; 1125 :         {
; 1126 :             _Orphan_me_locked_v3();
; 1127 :         }
; 1128 :     }
; 1129 : 
; 1130 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1131 : #if _HAS_CXX20
; 1132 :         if (_STD is_constant_evaluated()) {
; 1133 :             _Adopt_unlocked(_Parent);
; 1134 :         } else
; 1135 : #endif // _HAS_CXX20
; 1136 :         {
; 1137 :             _Adopt_locked(_Parent);
; 1138 :         }
; 1139 :     }
; 1140 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1141 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1142 :         if (_Parent) { // have a parent, do adoption
; 1143 :             _Myproxy = _Parent->_Myproxy;
; 1144 :         } else { // no future parent, just disown current parent
; 1145 :             _Myproxy = nullptr;
; 1146 :         }
; 1147 :     }
; 1148 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1149 : 
; 1150 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {
; 1151 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1152 :     }
; 1153 : 
; 1154 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1155 : 
; 1156 :     mutable _Container_proxy* _Myproxy    = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1157 :     mutable _Iterator_base12* _Mynextiter = nullptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 1099 :         *this = _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 1100 :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 1096 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1097 : 
; 1098 :     _CONSTEXPR20 _Iterator_base12(const _Iterator_base12& _Right) noexcept {
; 1099 :         *this = _Right;
; 1100 :     }
; 1101 : 
; 1102 :     _CONSTEXPR20 _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {
; 1103 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1104 : #if _HAS_CXX20
; 1105 :         if (_STD is_constant_evaluated()) {
; 1106 :             _Assign_unlocked(_Right);
; 1107 :         } else
; 1108 : #endif // _HAS_CXX20
; 1109 :         {
; 1110 :             _Assign_locked(_Right);
; 1111 :         }
; 1112 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1113 :         _Myproxy = _Right._Myproxy;
; 1114 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1115 :         return *this;
; 1116 :     }
; 1117 : 
; 1118 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1119 :     _CONSTEXPR20 ~_Iterator_base12() noexcept {
; 1120 : #if _HAS_CXX20
; 1121 :         if (_STD is_constant_evaluated()) {
; 1122 :             _Orphan_me_unlocked_v3();
; 1123 :         } else
; 1124 : #endif // _HAS_CXX20
; 1125 :         {
; 1126 :             _Orphan_me_locked_v3();
; 1127 :         }
; 1128 :     }
; 1129 : 
; 1130 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1131 : #if _HAS_CXX20
; 1132 :         if (_STD is_constant_evaluated()) {
; 1133 :             _Adopt_unlocked(_Parent);
; 1134 :         } else
; 1135 : #endif // _HAS_CXX20
; 1136 :         {
; 1137 :             _Adopt_locked(_Parent);
; 1138 :         }
; 1139 :     }
; 1140 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1141 :     _CONSTEXPR20 void _Adopt(const _Container_base12* _Parent) noexcept {
; 1142 :         if (_Parent) { // have a parent, do adoption
; 1143 :             _Myproxy = _Parent->_Myproxy;
; 1144 :         } else { // no future parent, just disown current parent
; 1145 :             _Myproxy = nullptr;
; 1146 :         }
; 1147 :     }
; 1148 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1149 : 
; 1150 :     _CONSTEXPR20 const _Container_base12* _Getcont() const noexcept {
; 1151 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;
; 1152 :     }
; 1153 : 
; 1154 :     static constexpr bool _Unwrap_when_unverified = _ITERATOR_DEBUG_LEVEL == 0;
; 1155 : 
; 1156 :     mutable _Container_proxy* _Myproxy    = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1157 :     mutable _Iterator_base12* _Mynextiter = nullptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 1096 :     _CONSTEXPR20 _Iterator_base12() noexcept = default; // construct orphaned iterator

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_locked, COMDAT
; _this$ = ecx

; 1088 :     void _Swap_proxy_and_iterators_locked(_Container_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1089 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1090 :         _Swap_proxy_and_iterators_unlocked(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked

; 1091 :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Swap_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN5@Swap_proxy:
	DD	1
	DD	$LN4@Swap_proxy
$LN4@Swap_proxy:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Swap_proxy
$LN3@Swap_proxy:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT
; _this$ = ecx

; 1083 :     void _Orphan_all_locked_v3() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1084 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1085 :         _Orphan_all_unlocked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1086 :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Orphan_all:
	DD	1
	DD	$LN4@Orphan_all
$LN4@Orphan_all:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Orphan_all
$LN3@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z
_TEXT	SEGMENT
__Temp$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked, COMDAT
; _this$ = ecx

; 1249 : _CONSTEXPR20 void _Container_base12::_Swap_proxy_and_iterators_unlocked(_Container_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1250 :     _Container_proxy* _Temp = _Myproxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$[ebp], ecx

; 1251 :     _Myproxy                = _Right._Myproxy;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 1252 :     _Right._Myproxy         = _Temp;

	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR __Temp$[ebp]
	mov	DWORD PTR [edx], eax

; 1253 : 
; 1254 :     if (_Myproxy) {

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@Swap_proxy

; 1255 :         _Myproxy->_Mycont = this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@Swap_proxy:

; 1256 :     }
; 1257 : 
; 1258 :     if (_Right._Myproxy) {

	mov	edx, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN4@Swap_proxy

; 1259 :         _Right._Myproxy->_Mycont = &_Right;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx], edx
$LN4@Swap_proxy:

; 1260 :     }
; 1261 : }

	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_proxy_and_iterators_unlocked@_Container_base12@std@@AAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT
; _this$ = ecx

; 1224 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1225 :     if (!_Myproxy) { // no proxy, already done

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@Orphan_all

; 1226 :         return;

	jmp	SHORT $LN6@Orphan_all
$LN5@Orphan_all:

; 1227 :     }
; 1228 : 
; 1229 :     // proxy allocated, drain it
; 1230 :     for (auto& _Pnext = _Myproxy->_Myfirstiter; _Pnext; _Pnext = _Pnext->_Mynextiter) { // TRANSITION, VSO-1269037

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Orphan_all

; 1231 :         _Pnext->_Myproxy = nullptr;

	mov	edx, DWORD PTR __Pnext$1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0

; 1232 :     }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1233 :     _Myproxy->_Myfirstiter = nullptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0
$LN6@Orphan_all:

; 1234 : }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx

; 1263 : _CONSTEXPR20 void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1264 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1265 : #if _HAS_CXX20
; 1266 :     if (_STD is_constant_evaluated()) {
; 1267 :         _Swap_proxy_and_iterators_unlocked(_Right);
; 1268 :     } else
; 1269 : #endif // _HAS_CXX20
; 1270 :     {
; 1271 :         _Swap_proxy_and_iterators_locked(_Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators_locked@_Container_base12@std@@AAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators_locked

; 1272 :     }
; 1273 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ / vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1274 :     _Swap_proxy_and_iterators_unlocked(_Right);
; 1275 : #endif // _ITERATOR_DEBUG_LEVEL != 2
; 1276 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 1236 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1237 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1238 : #if _HAS_CXX20
; 1239 :     if (_STD is_constant_evaluated()) {
; 1240 :         _Orphan_all_unlocked_v3();
; 1241 :     } else
; 1242 : #endif // _HAS_CXX20
; 1243 :     {
; 1244 :         _Orphan_all_locked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_locked_v3

; 1245 :     }
; 1246 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1247 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 1052 :     _CONSTEXPR20 _Container_base12() noexcept = default;

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1053 : 
; 1054 :     _Container_base12(const _Container_base12&) = delete;
; 1055 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1056 : 
; 1057 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1058 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1059 : 
; 1060 :     template <class _Alloc>
; 1061 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1062 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1063 :         _Construct_in_place(*_New_proxy, this);
; 1064 :         _Myproxy            = _New_proxy;
; 1065 :         _New_proxy->_Mycont = this;
; 1066 :     }
; 1067 : 
; 1068 :     template <class _Alloc>
; 1069 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1070 :         // pre: no iterators refer to the existing proxy
; 1071 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1072 :         _Construct_in_place(*_New_proxy, this);
; 1073 :         _New_proxy->_Mycont = this;
; 1074 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1075 :     }
; 1076 : 
; 1077 :     _Container_proxy* _Myproxy = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1052 :     _CONSTEXPR20 _Container_base12() noexcept = default;

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Mycont_$ = 8						; size = 4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 1044 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont_$[ebp]
	mov	DWORD PTR [eax], ecx

; 1045 : 
; 1046 :     const _Container_base12* _Mycont       = nullptr;
; 1047 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 1044 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -16					; size = 4
__Min_back_shift$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Ptr_user$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 147  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 148  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 149  :     _Bytes += _Non_user_size;

	mov	eax, DWORD PTR __Bytes$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 39					; 00000027H
	mov	edx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR [edx], ecx

; 150  : 
; 151  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_user$[ebp], ecx

; 152  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	edx, 4
	imul	eax, edx, -1
	mov	ecx, DWORD PTR __Ptr_user$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR __Ptr_container$[ebp], edx
$LN4@Adjust_man:

; 153  : 
; 154  :     // If the following asserts, it likely means that we are performing
; 155  :     // an aligned delete on memory coming from an unaligned allocation.
; 156  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	jne	SHORT $LN7@Adjust_man
	jmp	SHORT $LN2@Adjust_man
$LN7@Adjust_man:
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	156					; 0000009cH
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
$LN19@Adjust_man:
	push	0
	push	156					; 0000009cH
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Adjust_man
$LN2@Adjust_man:
	xor	edx, edx
	jne	SHORT $LN4@Adjust_man

; 157  : 
; 158  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 159  :     // in range [_Min_back_shift, _Non_user_size]
; 160  : #ifdef _DEBUG
; 161  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	DWORD PTR __Min_back_shift$[ebp], 8

; 162  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 163  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 164  : #endif // _DEBUG
; 165  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:

; 166  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	DWORD PTR __Back_shift$[ebp], 8
	jb	SHORT $LN13@Adjust_man
	cmp	DWORD PTR __Back_shift$[ebp], 39	; 00000027H
	ja	SHORT $LN13@Adjust_man
	jmp	SHORT $LN8@Adjust_man
$LN13@Adjust_man:
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	166					; 000000a6H
	push	OFFSET ??_C@_0GC@GFIHGGPN@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
$LN20@Adjust_man:
	push	0
	push	166					; 000000a6H
	push	OFFSET ??_C@_1ME@KDCJLOP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN8@Adjust_man:
	xor	ecx, ecx
	jne	SHORT $LN10@Adjust_man

; 167  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [edx], eax

; 168  : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT

; 78   :         void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp

; 79   :         return ::operator new(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 80   :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 324  :     _THROW(bad_array_new_length{});

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0bad_array_new_length@std@@QAE@XZ	; std::bad_array_new_length::bad_array_new_length
	push	OFFSET __TI3?AVbad_array_new_length@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Throw_bad_:

; 325  : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_array_new_length@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 140  :         : bad_alloc("bad array new length")

	push	OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@AAE@QBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AAE@QBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@AAE@QBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 130  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 129  :         : exception(_Message, 1)

	push	1
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception

; 130  :     {

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 131  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@AAE@QBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 94   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]

; 96   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 89   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_destroy
	add	esp, 4

; 91   :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 71   :         : _Data()

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_copy
	add	esp, 8

; 74   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx

; 67   :         _Data._What = _Message;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 68   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 168  :     {

	push	ebp
	mov	ebp, esp

; 169  :         (void)_Size;
; 170  :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 171  :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 552  :     _NODISCARD static constexpr int(max)() noexcept {

	push	ebp
	mov	ebp, esp

; 553  :         return INT_MAX;

	mov	eax, 2147483647				; 7fffffffH

; 554  :     }

	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\inheritance.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END

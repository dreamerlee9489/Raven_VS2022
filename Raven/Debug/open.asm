; Listing generated by Microsoft (R) Optimizing Compiler Version 19.35.32215.0 

	TITLE	D:\__Repos\__MyRepos\Raven_VS2022\Raven\Debug\open.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG100128 DB	'make_property() called with wrong number of arguments.', 00H
?yield@luabind@@3U?$policy_cons@Uyield_policy@detail@luabind@@Unull_type@23@@detail@1@B	ORG $+1 ; luabind::yield
$SG100134 DB	'DEPRECATION: ''super'' has been deprecated in favor of d'
	DB	'irectly calling the base class __init() function. This error '
	DB	'can be disabled by calling ''luabind::disable_super_deprecati'
	DB	'on()''.', 00H
	ORG $+2
$SG100176 DB	'Unable to get main thread, luabind::open() not called?', 00H
	ORG $+1
$SG100234 DB	'luabind::open() must be called with the main thread lua_'
	DB	'State*', 00H
	ORG $+1
$SG100236 DB	'__luabind_classes', 00H
	ORG $+2
$SG100237 DB	'__gc', 00H
	ORG $+3
$SG100238 DB	'__luabind_class_id_map', 00H
	ORG $+1
$SG100239 DB	'__gc', 00H
	ORG $+3
$SG100240 DB	'__luabind_cast_graph', 00H
	ORG $+3
$SG100241 DB	'__gc', 00H
	ORG $+3
$SG100242 DB	'__luabind_class_map', 00H
$SG100243 DB	'__gc', 00H
	ORG $+3
$SG100244 DB	'class', 00H
	ORG $+2
$SG100245 DB	'property', 00H
	ORG $+3
$SG100246 DB	'super', 00H
	ORG $+2
$SG104982 DB	'invalid argument', 00H
	ORG $+3
$SG104983 DB	'%s', 00H
	ORG $+1
$SG104986 DB	00H, 00H
	ORG $+2
$SG104984 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.35.32215\include\xmemory', 00H
	ORG $+6
$SG104985 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '5', 00H, '.', 00H, '3', 00H, '2'
	DB	00H, '2', 00H, '1', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG104987 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??0exception@std@@QAE@QBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AAE@QBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	??$exchange@PAU_Iterator_base12@std@@$$T@std@@YAPAU_Iterator_base12@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IAE@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	?open@luabind@@YAXPAUlua_State@@@Z		; luabind::open
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >::deallocate
PUBLIC	??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Get_scary
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >,1>::_Get_first
PUBLIC	??1?$map@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@@std@@QAE@XZ ; std::map<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::~map<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >
PUBLIC	??1class_registry@detail@luabind@@QAE@XZ	; luabind::detail::class_registry::~class_registry
PUBLIC	??_Gclass_registry@detail@luabind@@QAEPAXI@Z	; luabind::detail::class_registry::`scalar deleting destructor'
PUBLIC	??_Gcast_graph@detail@luabind@@QAEPAXI@Z	; luabind::detail::cast_graph::`scalar deleting destructor'
PUBLIC	??0class_id_map@detail@luabind@@QAE@XZ		; luabind::detail::class_id_map::class_id_map
PUBLIC	??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
PUBLIC	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::deallocate
PUBLIC	??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first
PUBLIC	??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
PUBLIC	??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::~map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
PUBLIC	??1class_id_map@detail@luabind@@QAE@XZ		; luabind::detail::class_id_map::~class_id_map
PUBLIC	??_Gclass_id_map@detail@luabind@@QAEPAXI@Z	; luabind::detail::class_id_map::`scalar deleting destructor'
PUBLIC	??0?$allocator@PAVclass_rep@detail@luabind@@@std@@QAE@XZ ; std::allocator<luabind::detail::class_rep *>::allocator<luabind::detail::class_rep *>
PUBLIC	?deallocate@?$allocator@PAVclass_rep@detail@luabind@@@std@@QAEXQAPAVclass_rep@detail@luabind@@I@Z ; std::allocator<luabind::detail::class_rep *>::deallocate
PUBLIC	??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >
PUBLIC	??1?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::~vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >
PUBLIC	?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Tidy
PUBLIC	?_Getal@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ ; std::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1>::_Get_first
PUBLIC	??0class_map@detail@luabind@@QAE@XZ		; luabind::detail::class_map::class_map
PUBLIC	??1class_map@detail@luabind@@QAE@XZ		; luabind::detail::class_map::~class_map
PUBLIC	??_Gclass_map@detail@luabind@@QAEPAXI@Z		; luabind::detail::class_map::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UAEPAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ; boost::optional_ns::in_place_init_t::in_place_init_t
PUBLIC	??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ; boost::optional_ns::in_place_init_if_t::in_place_init_if_t
PUBLIC	?get_main_thread@luabind@@YAPAUlua_State@@PAU2@@Z ; luabind::get_main_thread
PUBLIC	?apply@?$garbage_collector_s@Uclass_registry@detail@luabind@@@detail@luabind@@SAHPAUlua_State@@@Z ; luabind::detail::garbage_collector_s<luabind::detail::class_registry>::apply
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0PAVclass_rep@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVclass_rep@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::class_rep *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1>::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1><>
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
PUBLIC	??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
PUBLIC	??$_Destroy_range@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@YAXPAPAVclass_rep@detail@luabind@@QAPAV123@AAV?$allocator@PAVclass_rep@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::class_rep *> >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
PUBLIC	??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1><std::less<luabind::type_id> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1><>
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
PUBLIC	??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > > >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z ; std::forward<std::less<luabind::type_id> const &>
PUBLIC	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
PUBLIC	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Get_size_of_n@$0BI@@std@@YAII@Z		; std::_Get_size_of_n<24>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
PUBLIC	??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> * &>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *>
PUBLIC	??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
PUBLIC	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>
PUBLIC	??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
PUBLIC	??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >
PUBLIC	??$addressof@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >
PUBLIC	??$destroy@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >::destroy<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GC@FPOGKCLE@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1ME@GKDENAFF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter:PROC
EXTRN	_lua_gettop:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_pushcclosure:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_pushthread:PROC
EXTRN	_lua_rawget:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_newuserdata:PROC
EXTRN	_lua_settable:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_error:PROC
EXTRN	__CrtDbgReport:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	??0class_registry@detail@luabind@@QAE@PAUlua_State@@@Z:PROC ; luabind::detail::class_registry::class_registry
EXTRN	?get_registry@class_registry@detail@luabind@@SAPAU123@PAUlua_State@@@Z:PROC ; luabind::detail::class_registry::get_registry
EXTRN	??0cast_graph@detail@luabind@@QAE@XZ:PROC	; luabind::detail::cast_graph::cast_graph
EXTRN	??1cast_graph@detail@luabind@@QAE@XZ:PROC	; luabind::detail::cast_graph::~cast_graph
EXTRN	?property_tag@detail@luabind@@YAHPAUlua_State@@@Z:PROC ; luabind::detail::property_tag
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?stage1@create_class@detail@luabind@@SAHPAUlua_State@@@Z:PROC ; luabind::detail::create_class::stage1
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?local_id_base@class_id_map@detail@luabind@@0IB:DWORD ; luabind::detail::class_id_map::local_id_base
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?in_place_init@optional_ns@boost@@3Uin_place_init_t@12@B DB 01H DUP (?) ; boost::optional_ns::in_place_init
	ALIGN	4

?in_place_init_if@optional_ns@boost@@3Uin_place_init_if_t@12@B DB 01H DUP (?) ; boost::optional_ns::in_place_init_if
	ALIGN	4

?main_thread_tag@?A0x127fc78d@luabind@@3HA DD 01H DUP (?) ; luabind::`anonymous namespace'::main_thread_tag
_BSS	ENDS
CRT$XCU	SEGMENT
?in_place_init$initializer$@optional_ns@boost@@3P6AXXZA DD FLAT:??__Ein_place_init@optional_ns@boost@@YAXXZ ; boost::optional_ns::in_place_init$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@GKDENAFF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1ME@GKDENAFF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '5', 00H, '.', 00H, '3', 00H, '2', 00H, '2'
	DB	00H, '1', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@FPOGKCLE@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@FPOGKCLE@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'35.32215\include\xmemory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ$0
__ehfuncinfo$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?in_place_init_if$initializer$@optional_ns@boost@@3P6AXXZA DD FLAT:??__Ein_place_init_if@optional_ns@boost@@YAXXZ ; boost::optional_ns::in_place_init_if$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >::destroy<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >, COMDAT

; 685  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 686  : #if _HAS_CXX20
; 687  :         _STD destroy_at(_Ptr);
; 688  : #else // _HAS_CXX20
; 689  :         _Ptr->~_Uty();
; 690  : #endif // _HAS_CXX20
; 691  :     }

	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >::destroy<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@0@AAU10@@Z PROC ; std::addressof<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 281  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 282  : }

	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@0@AAU10@@Z ENDP ; std::addressof<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >, COMDAT

; 685  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 686  : #if _HAS_CXX20
; 687  :         _STD destroy_at(_Ptr);
; 688  : #else // _HAS_CXX20
; 689  :         _Ptr->~_Uty();
; 690  : #endif // _HAS_CXX20
; 691  :     }

	pop	ebp
	ret	0
??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z PROC ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>, COMDAT

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push	ebp
	mov	ebp, esp

; 1427 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1428 : }

	pop	ebp
	ret	0
??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ENDP ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xutility
;	COMDAT ??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z PROC ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>, COMDAT

; 244  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 245  :     if constexpr (is_pointer_v<_Iter>) {
; 246  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 247  :     } else {
; 248  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 249  :     }
; 250  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ENDP ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstddef
;	COMDAT ??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 281  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 282  : }

	pop	ebp
	ret	0
??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *>, COMDAT

; 294  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp

; 295  :     if constexpr (is_array_v<_Ty>) {
; 296  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 297  :     } else {
; 298  :         _Obj.~_Ty();
; 299  :     }
; 300  : }

	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 381  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$addressof@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >::destroy<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >
	add	esp, 8

; 383  :         _Freenode0(_Al, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
	add	esp, 8

; 384  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
;	COMDAT ??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@AAPAU10@0@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@AAPAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> * &>, COMDAT

; 652  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 653  :     // assign _New_val to _Val, return previous _Val
; 654  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 655  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 656  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 657  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@AAPAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>, COMDAT

; 294  : _CONSTEXPR20 void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp

; 295  :     if constexpr (is_array_v<_Ty>) {
; 296  :         _Destroy_range(_Obj, _Obj + extent_v<_Ty>);
; 297  :     } else {
; 298  :         _Obj.~_Ty();
; 299  :     }
; 300  : }

	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT

; 380  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 381  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 382  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@U?$pair@$$CBVtype_id@luabind@@I@std@@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@QAU?$pair@$$CBVtype_id@luabind@@I@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::destroy<std::pair<luabind::type_id const ,unsigned int> >
	add	esp, 8

; 383  :         _Freenode0(_Al, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 8

; 384  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
;	COMDAT ??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z PROC ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>, COMDAT

; 652  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 653  :     // assign _New_val to _Val, return previous _Val
; 654  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 655  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 656  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 657  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z ENDP ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 659  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 660  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 661  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 662  :         if (_STD is_constant_evaluated()) {
; 663  :             _Al.deallocate(_Ptr, _Count);
; 664  :         } else
; 665  : #endif // _HAS_CXX20
; 666  :         {
; 667  :             (void) _Al;
; 668  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 669  :         }
; 670  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BI@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0BI@@std@@YAII@Z PROC		; std::_Get_size_of_n<24>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 178956970 ; 0aaaaaaaH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 178956970	; 0aaaaaaaH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	imul	eax, DWORD PTR __Count$[ebp], 24
$LN3@Get_size_o:

; 66   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0BI@@std@@YAII@Z ENDP		; std::_Get_size_of_n<24>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Ptr_container$ = -8					; size = 4
__Block_size$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 127  : __declspec(allocator) void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 128  :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 129  :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	eax, DWORD PTR __Bytes$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$[ebp], eax

; 130  :     if (_Block_size <= _Bytes) {

	mov	ecx, DWORD PTR __Block_size$[ebp]
	cmp	ecx, DWORD PTR __Bytes$[ebp]
	ja	SHORT $LN8@Allocate_m

; 131  :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 132  :     }
; 133  : 
; 134  :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	edx, DWORD PTR __Block_size$[ebp]
	push	edx
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 135  :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	DWORD PTR __Ptr_container$[ebp], 0
	je	SHORT $LN7@Allocate_m
	jmp	SHORT $LN2@Allocate_m
$LN7@Allocate_m:
	push	OFFSET $SG104982
	push	OFFSET $SG104983
	push	0
	push	135					; 00000087H
	push	OFFSET $SG104984
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
$LN12@Allocate_m:
	push	0
	push	135					; 00000087H
	push	OFFSET $SG104985
	push	OFFSET $SG104986
	push	OFFSET $SG104987
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Allocate_m
$LN2@Allocate_m:
	xor	edx, edx
	jne	SHORT $LN4@Allocate_m

; 136  :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	eax, DWORD PTR __Ptr_container$[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax

; 137  :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	ecx, 4
	imul	edx, ecx, -1
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [eax+edx], ecx

; 138  : 
; 139  : #ifdef _DEBUG
; 140  :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	edx, 4
	imul	eax, edx, -2
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [ecx+eax], -84215046		; fafafafaH

; 141  : #endif // _DEBUG
; 142  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 143  : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push	ebp
	mov	ebp, esp

; 1427 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1428 : }

	pop	ebp
	ret	0
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xutility
;	COMDAT ??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT

; 244  : _NODISCARD constexpr void* _Voidify_iter(_Iter _It) noexcept {

	push	ebp
	mov	ebp, esp

; 245  :     if constexpr (is_pointer_v<_Iter>) {
; 246  :         return const_cast<void*>(static_cast<const volatile void*>(_It));

	mov	eax, DWORD PTR __It$[ebp]

; 247  :     } else {
; 248  :         return const_cast<void*>(static_cast<const volatile void*>(_STD addressof(*_It)));
; 249  :     }
; 250  : }

	pop	ebp
	ret	0
??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 281  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 282  : }

	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xutility
;	COMDAT ??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>, COMDAT

; 268  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 269  : #if _HAS_CXX20
; 270  :     if (_STD is_constant_evaluated()) {
; 271  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 272  :     } else
; 273  : #endif // _HAS_CXX20
; 274  :     {
; 275  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@@Z ; std::addressof<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAPAXPAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Voidify_iter<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAABQAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::forward<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 276  :     }
; 277  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 372  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 373  :         _Destroy_in_place(_Ptr->_Left);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *>
	add	esp, 4

; 374  :         _Destroy_in_place(_Ptr->_Parent);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *>
	add	esp, 4

; 375  :         _Destroy_in_place(_Ptr->_Right);

	mov	edx, DWORD PTR __Ptr$[ebp]
	add	edx, 8
	push	edx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *>
	add	esp, 4

; 376  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 377  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >, COMDAT
; _this$ = ecx

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@Erase_tree:

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	mov	eax, DWORD PTR __Rootnode$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN4@Erase_tree

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	edx, DWORD PTR __Rootnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	lea	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	call	??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> * &>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
	add	esp, 8

; 748  :         }

	jmp	SHORT $LN2@Erase_tree
$LN4@Erase_tree:

; 749  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z PROC ; std::forward<std::_Zero_then_variadic_args_t>, COMDAT

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push	ebp
	mov	ebp, esp

; 1427 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1428 : }

	pop	ebp
	ret	0
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ENDP ; std::forward<std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\type_traits
;	COMDAT ??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z PROC ; std::forward<std::less<luabind::type_id> const &>, COMDAT

; 1426 : _NODISCARD _MSVC_INTRINSIC constexpr _Ty&& forward(remove_reference_t<_Ty>& _Arg) noexcept {

	push	ebp
	mov	ebp, esp

; 1427 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1428 : }

	pop	ebp
	ret	0
??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z ENDP ; std::forward<std::less<luabind::type_id> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z PROC ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT

; 371  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 372  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 373  :         _Destroy_in_place(_Ptr->_Left);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 374  :         _Destroy_in_place(_Ptr->_Parent);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 375  :         _Destroy_in_place(_Ptr->_Right);

	mov	edx, DWORD PTR __Ptr$[ebp]
	add	edx, 8
	push	edx
	call	??$_Destroy_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *>
	add	esp, 4

; 376  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 377  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ENDP ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
__Rootnode$ = 12					; size = 4
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@Erase_tree:

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

	mov	eax, DWORD PTR __Rootnode$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	jne	SHORT $LN4@Erase_tree

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

	mov	edx, DWORD PTR __Rootnode$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));

	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	lea	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	call	??$exchange@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@AAPAU12@@std@@YAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * &>
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Freenode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 8

; 748  :         }

	jmp	SHORT $LN2@Erase_tree
$LN4@Erase_tree:

; 749  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 979  : _CONSTEXPR20 void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 980  :     // deallocate a plain pointer using an allocator
; 981  :     using _Alloc_traits = allocator_traits<_Alloc>;
; 982  :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 983  :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	add	esp, 12					; 0000000cH

; 984  :     } else {
; 985  :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 986  :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 987  :     }
; 988  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 221  : __declspec(allocator) _CONSTEXPR20 void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp

; 222  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 223  : #if defined(_M_IX86) || defined(_M_X64)
; 224  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 225  :     if (!_STD is_constant_evaluated())
; 226  : #endif // _HAS_CXX20
; 227  :     {
; 228  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 229  :             return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 230  :         }
; 231  :     }
; 232  : #endif // defined(_M_IX86) || defined(_M_X64)
; 233  : 
; 234  :     if (_Bytes != 0) {

	cmp	DWORD PTR __Bytes$[ebp], 0
	je	SHORT $LN3@Allocate

; 235  :         return _Traits::_Allocate(_Bytes);

	mov	ecx, DWORD PTR __Bytes$[ebp]
	push	ecx
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 236  :     }
; 237  : 
; 238  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 239  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT

; 55   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 56   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 57   : 
; 58   :     if constexpr (_Overflow_is_possible) {
; 59   :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 536870911 ; 1fffffffH

; 60   :         if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	jbe	SHORT $LN2@Get_size_o

; 61   :             _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 62   :         }
; 63   :     }
; 64   : 
; 65   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
$LN3@Get_size_o:

; 66   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xutility
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 268  :     is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 269  : #if _HAS_CXX20
; 270  :     if (_STD is_constant_evaluated()) {
; 271  :         _STD construct_at(_STD addressof(_Obj), _STD forward<_Types>(_Args)...);
; 272  :     } else
; 273  : #endif // _HAS_CXX20
; 274  :     {
; 275  :         ::new (_Voidify_iter(_STD addressof(_Obj))) _Ty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4
	push	eax
	call	??$_Voidify_iter@PAU_Container_proxy@std@@@std@@YAPAXPAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 276  :     }
; 277  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 281  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 282  : }

	pop	ebp
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _NODISCARD constexpr _Ty* _Unfancy(_Ty* _Ptr) noexcept { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp

; 294  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 295  : }

	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > > >, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 281  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 282  : }

	pop	ebp
	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = -8						; size = 4
__Al$ = 8						; size = 4
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z PROC ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT

; 344  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 345  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buyheadnode call");
; 346  :         const auto _Pnode = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate
	mov	DWORD PTR __Pnode$[ebp], eax

; 347  :         _Construct_in_place(_Pnode->_Left, _Pnode);

	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
	add	esp, 8

; 348  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

	lea	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
	push	eax
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
	add	esp, 8

; 349  :         _Construct_in_place(_Pnode->_Right, _Pnode);

	lea	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnode$[ebp]
	add	edx, 8
	push	edx
	call	??$_Construct_in_place@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> *,std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> * const &>
	add	esp, 8

; 350  :         _Pnode->_Color = _Black;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [eax+12], 1

; 351  :         _Pnode->_Isnil = true;

	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	BYTE PTR [ecx+13], 1

; 352  :         return _Pnode;

	mov	eax, DWORD PTR __Pnode$[ebp]

; 353  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Buyheadnod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@Buyheadnod:
	DD	1
	DD	$LN4@Buyheadnod
$LN4@Buyheadnod:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Buyheadnod
$LN3@Buyheadnod:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1339 :     _CONSTEXPR20 ~_Container_proxy_ptr12() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1340 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Container_

; 1341 :             _Delete_plain_internal(_Al, _Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
$LN3@Container_:

; 1342 :         }
; 1343 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
__Mycont$ = 12						; size = 4
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1325 :     _CONSTEXPR20 _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont) : _Al(_Al_) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Basic_container_proxy_ptr12@std@@IAE@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1326 :         // create a new _Container_proxy pointing at _Mycont
; 1327 :         _Ptr = _Unfancy(_Al_.allocate(1));

	push	1
	mov	ecx, DWORD PTR __Al_$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 1328 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	eax, DWORD PTR __Mycont$[ebp]
	push	eax
	call	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8

; 1329 :         _Mycont._Myproxy = _Ptr;

	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 1330 :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 242  : _CONSTEXPR20 void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 243  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 244  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 245  :     if (_STD is_constant_evaluated()) {
; 246  :         ::operator delete(_Ptr);
; 247  :     } else
; 248  : #endif // _HAS_CXX20
; 249  :     {
; 250  : #if defined(_M_IX86) || defined(_M_X64)
; 251  :         if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 252  :             _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
	add	esp, 8
$LN2@Deallocate:

; 253  :         }
; 254  : #endif // defined(_M_IX86) || defined(_M_X64)
; 255  :         ::operator delete(_Ptr, _Bytes);

	mov	edx, DWORD PTR __Bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 256  :     }
; 257  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> >, COMDAT
; _this$ = ecx

; 822  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >, COMDAT
; _this$ = ecx

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 753  :         this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >

; 755  :         _Alnode::value_type::_Freenode0(_Al, _Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
	add	esp, 8

; 756  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1><>, COMDAT
; _this$ = ecx

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
_<_Val2_0>$ = 16					; size = 4
??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1><std::less<luabind::type_id> const &,std::_Zero_then_variadic_args_t>, COMDAT
; _this$ = ecx

; 1380 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABU?$less@Vtype_id@luabind@@@std@@@std@@YAABU?$less@Vtype_id@luabind@@@0@ABU10@@Z ; std::forward<std::less<luabind::type_id> const &>
	add	esp, 4
	mov	ecx, DWORD PTR _<_Val2_0>$[ebp]
	push	ecx
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QAU_Zero_then_variadic_args_t@0@AAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
	add	esp, 4
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1><>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1><std::less<luabind::type_id> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 281  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 282  : }

	pop	ebp
	ret	0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@YAXPAPAVclass_rep@detail@luabind@@QAPAV123@AAV?$allocator@PAVclass_rep@detail@luabind@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@YAXPAPAVclass_rep@detail@luabind@@QAPAV123@AAV?$allocator@PAVclass_rep@detail@luabind@@@0@@Z PROC ; std::_Destroy_range<std::allocator<luabind::detail::class_rep *> >, COMDAT

; 942  : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

	push	ebp
	mov	ebp, esp

; 943  :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 944  :     using _Ty = typename _Alloc::value_type;
; 945  :     if constexpr (!conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 946  :         for (; _First != _Last; ++_First) {
; 947  :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 948  :         }
; 949  :     }
; 950  : }

	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@YAXPAPAVclass_rep@detail@luabind@@QAPAV123@AAV?$allocator@PAVclass_rep@detail@luabind@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<luabind::detail::class_rep *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xstddef
;	COMDAT ??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z PROC ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >, COMDAT

; 280  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 281  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 282  : }

	pop	ebp
	ret	0
??$addressof@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@YAPAU?$pair@$$CBVtype_id@luabind@@I@0@AAU10@@Z ENDP ; std::addressof<std::pair<luabind::type_id const ,unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >, COMDAT
; _this$ = ecx

; 822  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >, COMDAT
; _this$ = ecx

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 753  :         this->_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Erase_tree@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_tree<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >

; 755  :         _Alnode::value_type::_Freenode0(_Al, _Myhead);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@PAU01@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Freenode0<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 8

; 756  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1>::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1><>, COMDAT
; _this$ = ecx

; 1375 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAVclass_rep@detail@luabind@@@std@@QAE@XZ ; std::allocator<luabind::detail::class_rep *>::allocator<luabind::detail::class_rep *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1>::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$?0PAVclass_rep@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVclass_rep@detail@luabind@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAVclass_rep@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVclass_rep@detail@luabind@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::class_rep *>, COMDAT
; _this$ = ecx

; 822  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAVclass_rep@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVclass_rep@detail@luabind@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::class_rep *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__New_proxy$ = -8					; size = 4
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1063 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1064 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	DWORD PTR __New_proxy$[ebp], eax

; 1065 :         _Construct_in_place(*_New_proxy, this);

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_proxy$[ebp]
	push	edx
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8

; 1066 :         _Myproxy            = _New_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_proxy$[ebp]
	mov	DWORD PTR [eax], ecx

; 1067 :         _New_proxy->_Mycont = this;

	mov	edx, DWORD PTR __New_proxy$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 1068 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 991  : _CONSTEXPR20 void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

	push	ebp
	mov	ebp, esp

; 992  :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 993  :     using _Ty = typename _Alloc::value_type;
; 994  :     _Ptr->~_Ty();
; 995  :     _Deallocate_plain(_Al, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 996  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
;	COMDAT ??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 652  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 653  :     // assign _New_val to _Val, return previous _Val
; 654  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 655  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 656  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 657  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 832  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 833  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$07@std@@YAII@Z	; std::_Get_size_of_n<8>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 835  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\garbage_collector.hpp
;	COMDAT ?apply@?$garbage_collector_s@Uclass_registry@detail@luabind@@@detail@luabind@@SAHPAUlua_State@@@Z
_TEXT	SEGMENT
_obj$ = -4						; size = 4
_L$ = 8							; size = 4
?apply@?$garbage_collector_s@Uclass_registry@detail@luabind@@@detail@luabind@@SAHPAUlua_State@@@Z PROC ; luabind::detail::garbage_collector_s<luabind::detail::class_registry>::apply, COMDAT

; 44   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 45   : 			T* obj = static_cast<T*>(lua_touserdata(L, -1));

	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _obj$[ebp], eax

; 46   : 			obj->~T();

	push	0
	mov	ecx, DWORD PTR _obj$[ebp]
	call	??_Gclass_registry@detail@luabind@@QAEPAXI@Z

; 47   : 			return 0;

	xor	eax, eax

; 48   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?apply@?$garbage_collector_s@Uclass_registry@detail@luabind@@@detail@luabind@@SAHPAUlua_State@@@Z ENDP ; luabind::detail::garbage_collector_s<luabind::detail::class_registry>::apply
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\open.cpp
_TEXT	SEGMENT
_m$ = -4						; size = 4
_L$ = 8							; size = 4
?destroy_class_map@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z PROC ; luabind::`anonymous namespace'::destroy_class_map

; 84   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 85   :       detail::class_map* m =

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _m$[ebp], eax

; 86   :           (detail::class_map*)lua_touserdata(L, 1);
; 87   :       m->~class_map();

	push	0
	mov	ecx, DWORD PTR _m$[ebp]
	call	??_Gclass_map@detail@luabind@@QAEPAXI@Z

; 88   :       return 0;

	xor	eax, eax

; 89   :   }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy_class_map@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ENDP ; luabind::`anonymous namespace'::destroy_class_map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\open.cpp
_TEXT	SEGMENT
_g$ = -4						; size = 4
_L$ = 8							; size = 4
?destroy_cast_graph@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z PROC ; luabind::`anonymous namespace'::destroy_cast_graph

; 76   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 77   :       detail::cast_graph* g =

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _g$[ebp], eax

; 78   :           (detail::cast_graph*)lua_touserdata(L, 1);
; 79   :       g->~cast_graph();

	push	0
	mov	ecx, DWORD PTR _g$[ebp]
	call	??_Gcast_graph@detail@luabind@@QAEPAXI@Z

; 80   :       return 0;

	xor	eax, eax

; 81   :   }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy_cast_graph@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ENDP ; luabind::`anonymous namespace'::destroy_cast_graph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\open.cpp
_TEXT	SEGMENT
_m$ = -4						; size = 4
_L$ = 8							; size = 4
?destroy_class_id_map@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z PROC ; luabind::`anonymous namespace'::destroy_class_id_map

; 68   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 69   :       detail::class_id_map* m =

	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _m$[ebp], eax

; 70   :           (detail::class_id_map*)lua_touserdata(L, 1);
; 71   :       m->~class_id_map();

	push	0
	mov	ecx, DWORD PTR _m$[ebp]
	call	??_Gclass_id_map@detail@luabind@@QAEPAXI@Z

; 72   :       return 0;

	xor	eax, eax

; 73   :   }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?destroy_class_id_map@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ENDP ; luabind::`anonymous namespace'::destroy_class_id_map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\open.cpp
_TEXT	SEGMENT
_L$ = 8							; size = 4
?deprecated_super@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z PROC ; luabind::`anonymous namespace'::deprecated_super

; 56   :   {

	push	ebp
	mov	ebp, esp

; 57   :       lua_pushstring(L,

	push	OFFSET $SG100134
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 58   :           "DEPRECATION: 'super' has been deprecated in favor of "
; 59   :           "directly calling the base class __init() function. "
; 60   :           "This error can be disabled by calling 'luabind::disable_super_deprecation()'."
; 61   :       );
; 62   :       lua_error(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_error
	add	esp, 4

; 63   : 
; 64   :       return 0;

	xor	eax, eax

; 65   :   }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deprecated_super@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ENDP ; luabind::`anonymous namespace'::deprecated_super
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\open.cpp
_TEXT	SEGMENT
_args$ = -4						; size = 4
_L$ = 8							; size = 4
?make_property@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z PROC ; luabind::`anonymous namespace'::make_property

; 37   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 38   :       int args = lua_gettop(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	DWORD PTR _args$[ebp], eax

; 39   : 
; 40   :       if (args == 0 || args > 2)

	cmp	DWORD PTR _args$[ebp], 0
	je	SHORT $LN3@make_prope
	cmp	DWORD PTR _args$[ebp], 2
	jle	SHORT $LN2@make_prope
$LN3@make_prope:

; 41   :       {
; 42   :           lua_pushstring(L, "make_property() called with wrong number of arguments.");

	push	OFFSET $SG100128
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 43   :           lua_error(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_error
	add	esp, 4
$LN2@make_prope:

; 44   :       }
; 45   : 
; 46   :       if (args == 1)

	cmp	DWORD PTR _args$[ebp], 1
	jne	SHORT $LN4@make_prope

; 47   :           lua_pushnil(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
$LN4@make_prope:

; 48   : 
; 49   :       lua_pushcclosure(L, &detail::property_tag, 2);

	push	2
	push	OFFSET ?property_tag@detail@luabind@@YAHPAUlua_State@@@Z ; luabind::detail::property_tag
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 50   :       return 1;

	mov	eax, 1

; 51   :   }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?make_property@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ENDP ; luabind::`anonymous namespace'::make_property
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\open.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 12
_result$ = -4						; size = 4
_L$ = 8							; size = 4
?get_main_thread@luabind@@YAPAUlua_State@@PAU2@@Z PROC	; luabind::get_main_thread

; 94   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 95   :         lua_pushlightuserdata(L, &main_thread_tag);

	push	OFFSET ?main_thread_tag@?A0x127fc78d@luabind@@3HA ; luabind::`anonymous namespace'::main_thread_tag
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 96   :         lua_rawget(L, LUA_REGISTRYINDEX);

	push	-10000					; ffffd8f0H
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawget
	add	esp, 8

; 97   :         lua_State* result = static_cast<lua_State*>(lua_touserdata(L, -1));

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax

; 98   :         lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 99   : 
; 100  :         if (!result)

	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN2@get_main_t

; 101  :             throw std::runtime_error("Unable to get main thread, luabind::open() not called?");

	push	OFFSET $SG100176
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@get_main_t:

; 102  : 
; 103  :         return result;

	mov	eax, DWORD PTR _result$[ebp]
$LN3@get_main_t:

; 104  :     }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get_main_thread@luabind@@YAPAUlua_State@@PAU2@@Z ENDP	; luabind::get_main_thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\optional\optional.hpp
;	COMDAT ??__Ein_place_init_if@optional_ns@boost@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Ein_place_init_if@optional_ns@boost@@YAXXZ PROC	; boost::optional_ns::`dynamic initializer for 'in_place_init_if'', COMDAT

; 106  : const in_place_init_if_t in_place_init_if ((in_place_init_if_t::init_tag()));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, OFFSET ?in_place_init_if@optional_ns@boost@@3Uin_place_init_if_t@12@B
	call	??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ; boost::optional_ns::in_place_init_if_t::in_place_init_if_t
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ein_place_init_if@optional_ns@boost@@YAXXZ ENDP	; boost::optional_ns::`dynamic initializer for 'in_place_init_if''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\optional\optional.hpp
;	COMDAT ??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z PROC ; boost::optional_ns::in_place_init_if_t::in_place_init_if_t, COMDAT
; _this$ = ecx

; 104  :   explicit in_place_init_if_t(init_tag){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ENDP ; boost::optional_ns::in_place_init_if_t::in_place_init_if_t
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\optional\optional.hpp
;	COMDAT ??__Ein_place_init@optional_ns@boost@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Ein_place_init@optional_ns@boost@@YAXXZ PROC	; boost::optional_ns::`dynamic initializer for 'in_place_init'', COMDAT

; 98   : const in_place_init_t in_place_init ((in_place_init_t::init_tag()));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, OFFSET ?in_place_init@optional_ns@boost@@3Uin_place_init_t@12@B
	call	??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ; boost::optional_ns::in_place_init_t::in_place_init_t
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ein_place_init@optional_ns@boost@@YAXXZ ENDP	; boost::optional_ns::`dynamic initializer for 'in_place_init''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\optional\optional.hpp
;	COMDAT ??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z PROC ; boost::optional_ns::in_place_init_t::in_place_init_t, COMDAT
; _this$ = ecx

; 96   :   explicit in_place_init_t(init_tag){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ENDP ; boost::optional_ns::in_place_init_t::in_place_init_t
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\stdexcept
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx

; 107  :     explicit runtime_error(const char* _Message) : _Mybase(_Message) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gclass_map@detail@luabind@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gclass_map@detail@luabind@@QAEPAXI@Z PROC		; luabind::detail::class_map::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1class_map@detail@luabind@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gclass_map@detail@luabind@@QAEPAXI@Z ENDP		; luabind::detail::class_map::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1class_map@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1class_map@detail@luabind@@QAE@XZ PROC		; luabind::detail::class_map::~class_map, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::~vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1class_map@detail@luabind@@QAE@XZ ENDP		; luabind::detail::class_map::~class_map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0class_map@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0class_map@detail@luabind@@QAE@XZ PROC		; luabind::detail::class_map::class_map, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0class_map@detail@luabind@@QAE@XZ ENDP		; luabind::detail::class_map::class_map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >, COMDAT
; _this$ = ecx

; 390  :     _CONSTEXPR20 _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vector
;	COMDAT ?_Getal@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ PROC ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Getal, COMDAT
; _this$ = ecx

; 2243 :     _NODISCARD _CONSTEXPR20 _Alty& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2244 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ ; std::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1>::_Get_first

; 2245 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ ENDP ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vector
;	COMDAT ?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
__Myend$ = -36						; size = 4
__Mylast$ = -32						; size = 4
__Myfirst$ = -28					; size = 4
__My_data$ = -24					; size = 4
__Al$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ PROC ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Tidy, COMDAT
; _this$ = ecx

; 2098 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 2099 :         auto& _Al         = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 2100 :         auto& _My_data    = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 2101 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Myfirst$[ebp], ecx

; 2102 :         pointer& _Mylast  = _My_data._Mylast;

	mov	edx, DWORD PTR __My_data$[ebp]
	add	edx, 8
	mov	DWORD PTR __Mylast$[ebp], edx

; 2103 :         pointer& _Myend   = _My_data._Myend;

	mov	eax, DWORD PTR __My_data$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR __Myend$[ebp], eax

; 2104 : 
; 2105 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 2106 : 
; 2107 :         if (_Myfirst) { // destroy and deallocate old array

	mov	ecx, DWORD PTR __Myfirst$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Tidy

; 2108 :             _Destroy_range(_Myfirst, _Mylast, _Al);

	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Mylast$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Destroy_range@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@YAXPAPAVclass_rep@detail@luabind@@QAPAV123@AAV?$allocator@PAVclass_rep@detail@luabind@@@0@@Z ; std::_Destroy_range<std::allocator<luabind::detail::class_rep *> >
	add	esp, 12					; 0000000cH

; 2109 :             _ASAN_VECTOR_REMOVE;
; 2110 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	ecx, DWORD PTR __Myend$[ebp]
	mov	edx, DWORD PTR __Myfirst$[ebp]
	mov	eax, DWORD PTR [ecx]
	sub	eax, DWORD PTR [edx]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Myfirst$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@PAVclass_rep@detail@luabind@@@std@@QAEXQAPAVclass_rep@detail@luabind@@I@Z ; std::allocator<luabind::detail::class_rep *>::deallocate

; 2111 : 
; 2112 :             _Myfirst = nullptr;

	mov	eax, DWORD PTR __Myfirst$[ebp]
	mov	DWORD PTR [eax], 0

; 2113 :             _Mylast  = nullptr;

	mov	ecx, DWORD PTR __Mylast$[ebp]
	mov	DWORD PTR [ecx], 0

; 2114 :             _Myend   = nullptr;

	mov	edx, DWORD PTR __Myend$[ebp]
	mov	DWORD PTR [edx], 0
$LN3@Tidy:

; 2115 :         }
; 2116 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ ENDP ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Tidy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vector
;	COMDAT ??1?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -24						; size = 4
_$S2$ = -13						; size = 1
__Alproxy$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::~vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 ~vector() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 830  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEXXZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Tidy

; 831  : #if _ITERATOR_DEBUG_LEVEL != 0
; 832  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S2$[ebp]
	call	??$?0PAVclass_rep@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVclass_rep@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::class_rep *>
	lea	eax, DWORD PTR _$S2$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 833  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	DWORD PTR $T1[ebp], 0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$exchange@PAU_Container_proxy@std@@$$T@std@@YAPAU_Container_proxy@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 834  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 835  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@vector
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@vector:
	DD	1
	DD	$LN4@vector
$LN4@vector:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN3@vector
$LN3@vector:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	0
??1?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::~vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vector
;	COMDAT ??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -18						; size = 1
$T3 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ PROC ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >, COMDAT
; _this$ = ecx

; 673  :     _CONSTEXPR20 vector() noexcept(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@PAVclass_rep@detail@luabind@@@std@@V?$_Vector_val@U?$_Simple_types@PAVclass_rep@detail@luabind@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1>::_Compressed_pair<std::allocator<luabind::detail::class_rep *>,std::_Vector_val<std::_Simple_types<luabind::detail::class_rep *> >,1><>

; 674  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@AAEAAV?$allocator@PAVclass_rep@detail@luabind@@@2@XZ ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0PAVclass_rep@detail@luabind@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@PAVclass_rep@detail@luabind@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><luabind::detail::class_rep *>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >

; 675  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAVclass_rep@detail@luabind@@V?$allocator@PAVclass_rep@detail@luabind@@@std@@@std@@QAE@XZ ENDP ; std::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >::vector<luabind::detail::class_rep *,std::allocator<luabind::detail::class_rep *> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?deallocate@?$allocator@PAVclass_rep@detail@luabind@@@std@@QAEXQAPAVclass_rep@detail@luabind@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@PAVclass_rep@detail@luabind@@@std@@QAEXQAPAVclass_rep@detail@luabind@@I@Z PROC ; std::allocator<luabind::detail::class_rep *>::deallocate, COMDAT
; _this$ = ecx

; 826  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@deallocate:

; 827  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");

	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN10@deallocate
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN7@deallocate
$LN10@deallocate:
	jmp	SHORT $LN2@deallocate
$LN7@deallocate:
	push	OFFSET ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	827					; 0000033bH
	push	OFFSET ??_C@_0GC@FPOGKCLE@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
$LN12@deallocate:
	push	0
	push	827					; 0000033bH
	push	OFFSET ??_C@_1ME@GKDENAFF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@deallocate
$LN2@deallocate:
	xor	edx, edx
	jne	SHORT $LN4@deallocate

; 828  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 829  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 830  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVclass_rep@detail@luabind@@@std@@QAEXQAPAVclass_rep@detail@luabind@@I@Z ENDP ; std::allocator<luabind::detail::class_rep *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??0?$allocator@PAVclass_rep@detail@luabind@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVclass_rep@detail@luabind@@@std@@QAE@XZ PROC ; std::allocator<luabind::detail::class_rep *>::allocator<luabind::detail::class_rep *>, COMDAT
; _this$ = ecx

; 818  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVclass_rep@detail@luabind@@@std@@QAE@XZ ENDP ; std::allocator<luabind::detail::class_rep *>::allocator<luabind::detail::class_rep *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gclass_id_map@detail@luabind@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gclass_id_map@detail@luabind@@QAEPAXI@Z PROC		; luabind::detail::class_id_map::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1class_id_map@detail@luabind@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gclass_id_map@detail@luabind@@QAEPAXI@Z ENDP		; luabind::detail::class_id_map::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1class_id_map@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1class_id_map@detail@luabind@@QAE@XZ PROC		; luabind::detail::class_id_map::~class_id_map, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1class_id_map@detail@luabind@@QAE@XZ ENDP		; luabind::detail::class_id_map::~class_id_map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ PROC ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::~map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ENDP ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::~map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\map
;	COMDAT ??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ PROC ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >, COMDAT
; _this$ = ecx

; 105  :     map() : _Mybase(key_compare()) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ENDP ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >, COMDAT
; _this$ = ecx

; 437  :     _Tree_val() noexcept : _Myhead(), _Mysize(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary, COMDAT
; _this$ = ecx

; 1966 :     _Scary_val* _Get_scary() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1967 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > > >
	add	esp, 4

; 1968 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1958 :     _Alnode& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1959 :         return _Mypair._Myval2._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>::_Get_first

; 1960 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
__Proxy$ = -48						; size = 8
_$S9$ = -29						; size = 1
__Alproxy$ = -24					; size = 4
__Scary$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Alloc_sentinel_and_proxy, COMDAT
; _this$ = ecx

; 1937 :     void _Alloc_sentinel_and_proxy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1938 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1939 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S9$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
	lea	eax, DWORD PTR _$S9$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1940 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);

	mov	ecx, DWORD PTR __Scary$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1941 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	call	??$_Buyheadnode@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@SAPAU01@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *>::_Buyheadnode<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >
	add	esp, 4
	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1942 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 1943 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Alloc_sent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@Alloc_sent:
	DD	2
	DD	$LN7@Alloc_sent
$LN7@Alloc_sent:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@Alloc_sent
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN5@Alloc_sent
$LN5@Alloc_sent:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN4@Alloc_sent:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	57					; 00000039H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Alloc_sentinel_and_proxy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_$S3$ = -17						; size = 1
__Alproxy$ = -12					; size = 4
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 1079 :     ~_Tree() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1080 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1081 :         _Scary->_Erase_head(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	mov	ecx, DWORD PTR __Scary$[ebp]
	call	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >

; 1082 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1083 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S3$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
	lea	eax, DWORD PTR _$S3$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1084 :         _Delete_plain_internal(_Alproxy, _Scary->_Myproxy);

	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1085 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1086 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Tree
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Tree:
	DD	1
	DD	$LN4@Tree
$LN4@Tree:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Tree
$LN3@Tree:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	0
??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z
_TEXT	SEGMENT
$T1 = -6						; size = 1
$T2 = -5						; size = 1
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >, COMDAT
; _this$ = ecx

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t{}, _Parg, _Zero_then_variadic_args_t{}) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0ABU?$less@Vtype_id@luabind@@@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@Vtype_id@luabind@@@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@I@std@@@std@@@2@$00@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABU?$less@Vtype_id@luabind@@@1@$$QAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1>::_Compressed_pair<std::less<luabind::type_id>,std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,unsigned int> > >,1>,1><std::less<luabind::type_id> const &,std::_Zero_then_variadic_args_t>

; 883  :         _Alloc_sentinel_and_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Alloc_sentinel_and_proxy

; 884  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@Vtype_id@luabind@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >::_Tree<std::_Tmap_traits<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::deallocate, COMDAT

; 659  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 660  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 661  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 662  :         if (_STD is_constant_evaluated()) {
; 663  :             _Al.deallocate(_Ptr, _Count);
; 664  :         } else
; 665  : #endif // _HAS_CXX20
; 666  :         {
; 667  :             (void) _Al;
; 668  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 24
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 669  :         }
; 670  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z PROC ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate, COMDAT
; _this$ = ecx

; 832  :     _NODISCARD_RAW_PTR_ALLOC _CONSTEXPR20 __declspec(allocator) _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 833  :         static_assert(sizeof(value_type) > 0, "value_type must be complete before calling allocate.");
; 834  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0BI@@std@@YAII@Z	; std::_Get_size_of_n<24>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 835  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@2@I@Z ENDP ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >, COMDAT
; _this$ = ecx

; 818  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@I@std@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >::allocator<std::_Tree_node<std::pair<luabind::type_id const ,unsigned int>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\inheritance.hpp
;	COMDAT ??0class_id_map@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0class_id_map@detail@luabind@@QAE@XZ PROC		; luabind::detail::class_id_map::class_id_map, COMDAT
; _this$ = ecx

; 68   : {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$map@Vtype_id@luabind@@IU?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@I@std@@@4@@std@@QAE@XZ ; std::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >::map<luabind::type_id,unsigned int,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,unsigned int> > >

; 67   :   : m_local_id(local_id_base)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?local_id_base@class_id_map@detail@luabind@@0IB ; luabind::detail::class_id_map::local_id_base
	mov	DWORD PTR [eax+12], ecx

; 68   : {}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0class_id_map@detail@luabind@@QAE@XZ ENDP		; luabind::detail::class_id_map::class_id_map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gcast_graph@detail@luabind@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gcast_graph@detail@luabind@@QAEPAXI@Z PROC		; luabind::detail::cast_graph::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1cast_graph@detail@luabind@@QAE@XZ	; luabind::detail::cast_graph::~cast_graph
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gcast_graph@detail@luabind@@QAEPAXI@Z ENDP		; luabind::detail::cast_graph::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gclass_registry@detail@luabind@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gclass_registry@detail@luabind@@QAEPAXI@Z PROC	; luabind::detail::class_registry::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1class_registry@detail@luabind@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gclass_registry@detail@luabind@@QAEPAXI@Z ENDP	; luabind::detail::class_registry::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1class_registry@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1class_registry@detail@luabind@@QAE@XZ PROC		; luabind::detail::class_registry::~class_registry, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$map@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1class_registry@detail@luabind@@QAE@XZ ENDP		; luabind::detail::class_registry::~class_registry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$map@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$map@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@@std@@QAE@XZ PROC ; std::map<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::~map<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$map@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@@std@@QAE@XZ ENDP ; std::map<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::~map<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1382 :     constexpr _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1384 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Get_scary, COMDAT
; _this$ = ecx

; 1966 :     _Scary_val* _Get_scary() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1967 :         return _STD addressof(_Mypair._Myval2._Myval2);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@@std@@YAPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@0@AAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > > >
	add	esp, 4

; 1968 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Getal, COMDAT
; _this$ = ecx

; 1958 :     _Alnode& _Getal() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1959 :         return _Mypair._Myval2._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> >,std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >,1>::_Get_first

; 1960 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_$S8$ = -17						; size = 1
__Alproxy$ = -12					; size = 4
__Scary$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >, COMDAT
; _this$ = ecx

; 1079 :     ~_Tree() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1080 :         const auto _Scary = _Get_scary();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_scary@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEPAV?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Get_scary
	mov	DWORD PTR __Scary$[ebp], eax

; 1081 :         _Scary->_Erase_head(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Getal
	push	eax
	mov	ecx, DWORD PTR __Scary$[ebp]
	call	??$_Erase_head@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@std@@@std@@QAEXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<luabind::type_id const ,luabind::detail::class_rep *> > >::_Erase_head<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >

; 1082 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1083 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@IAEAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S8$[ebp]
	call	??$?0U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> >
	lea	eax, DWORD PTR _$S8$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1084 :         _Delete_plain_internal(_Alproxy, _Scary->_Myproxy);

	mov	ecx, DWORD PTR __Scary$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1085 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 1086 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Tree
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Tree:
	DD	1
	DD	$LN4@Tree
$LN4@Tree:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Tree
$LN3@Tree:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	56					; 00000038H
	DB	0
??1?$_Tree@V?$_Tmap_traits@Vtype_id@luabind@@PAVclass_rep@detail@2@U?$less@Vtype_id@luabind@@@std@@V?$allocator@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@@6@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >::~_Tree<std::_Tmap_traits<luabind::type_id,luabind::detail::class_rep *,std::less<luabind::type_id>,std::allocator<std::pair<luabind::type_id const ,luabind::detail::class_rep *> >,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@2@I@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >::deallocate, COMDAT

; 659  :     static _CONSTEXPR20 void deallocate(_Alloc& _Al, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 660  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 661  : #if _HAS_CXX20 // TRANSITION, GH-1532
; 662  :         if (_STD is_constant_evaluated()) {
; 663  :             _Al.deallocate(_Ptr, _Count);
; 664  :         } else
; 665  : #endif // _HAS_CXX20
; 666  :         {
; 667  :             (void) _Al;
; 668  :             _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 24
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 669  :         }
; 670  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@std@@@2@QAU?$_Tree_node@U?$pair@$$CBVtype_id@luabind@@PAVclass_rep@detail@2@@std@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<luabind::type_id const ,luabind::detail::class_rep *>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\open.cpp
_TEXT	SEGMENT
tv67 = -64						; size = 4
$T1 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 4
$T4 = -48						; size = 4
$T5 = -44						; size = 12
_classes$ = -32						; size = 4
_class_map_storage$ = -28				; size = 4
_graph$ = -24						; size = 4
_cast_graph_storage$ = -20				; size = 4
_class_ids$ = -16					; size = 4
_classes_storage$ = -12					; size = 4
_r$ = -8						; size = 4
_is_main_thread$ = -1					; size = 1
_L$ = 8							; size = 4
?open@luabind@@YAXPAUlua_State@@@Z PROC			; luabind::open

; 107  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 108  :         bool is_main_thread = lua_pushthread(L) == 1;

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushthread
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN5@open
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN6@open
$LN5@open:
	mov	DWORD PTR tv67[ebp], 0
$LN6@open:
	mov	cl, BYTE PTR tv67[ebp]
	mov	BYTE PTR _is_main_thread$[ebp], cl

; 109  :         lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 110  : 
; 111  :         if (!is_main_thread)

	movzx	eax, BYTE PTR _is_main_thread$[ebp]
	test	eax, eax
	jne	SHORT $LN2@open

; 112  :         {
; 113  :             throw std::runtime_error(

	push	OFFSET $SG100234
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	__CxxThrowException@8
$LN2@open:

; 114  :                 "luabind::open() must be called with the main thread "
; 115  :                 "lua_State*"
; 116  :             );
; 117  :         }
; 118  : 
; 119  :         if (detail::class_registry::get_registry(L))

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	?get_registry@class_registry@detail@luabind@@SAPAU123@PAUlua_State@@@Z ; luabind::detail::class_registry::get_registry
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@open

; 120  :             return;

	jmp	$LN4@open
$LN3@open:

; 121  : 
; 122  :         lua_pushstring(L, "__luabind_classes");

	push	OFFSET $SG100236
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 123  :         detail::class_registry* r = static_cast<detail::class_registry*>(

	push	28					; 0000001cH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_newuserdata
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax

; 124  :             lua_newuserdata(L, sizeof(detail::class_registry)));
; 125  : 
; 126  :         // set gc metatable
; 127  :         lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 128  :         lua_pushstring(L, "__gc");

	push	OFFSET $SG100237
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 129  :         lua_pushcclosure(

	push	0
	push	OFFSET ?apply@?$garbage_collector_s@Uclass_registry@detail@luabind@@@detail@luabind@@SAHPAUlua_State@@@Z ; luabind::detail::garbage_collector_s<luabind::detail::class_registry>::apply
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 130  :             L
; 131  :           , detail::garbage_collector_s<
; 132  :                 detail::class_registry
; 133  :             >::apply
; 134  :           , 0);
; 135  : 
; 136  :         lua_settable(L, -3);

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settable
	add	esp, 8

; 137  :         lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setmetatable
	add	esp, 8

; 138  : 
; 139  :         new(r) detail::class_registry(L);

	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T4[ebp], eax
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0class_registry@detail@luabind@@QAE@PAUlua_State@@@Z ; luabind::detail::class_registry::class_registry

; 140  :         lua_settable(L, LUA_REGISTRYINDEX);

	push	-10000					; ffffd8f0H
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settable
	add	esp, 8

; 141  : 
; 142  :         lua_pushstring(L, "__luabind_class_id_map");

	push	OFFSET $SG100238
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 143  :         void* classes_storage = lua_newuserdata(L, sizeof(detail::class_id_map));

	push	16					; 00000010H
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_newuserdata
	add	esp, 8
	mov	DWORD PTR _classes_storage$[ebp], eax

; 144  :         detail::class_id_map* class_ids = new (classes_storage) detail::class_id_map;

	mov	eax, DWORD PTR _classes_storage$[ebp]
	push	eax
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0class_id_map@detail@luabind@@QAE@XZ	; luabind::detail::class_id_map::class_id_map
	mov	DWORD PTR _class_ids$[ebp], eax

; 145  :         (void)class_ids;
; 146  : 
; 147  :         lua_newtable(L);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 148  :         lua_pushcclosure(L, &destroy_class_id_map, 0);

	push	0
	push	OFFSET ?destroy_class_id_map@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ; luabind::`anonymous namespace'::destroy_class_id_map
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 149  :         lua_setfield(L, -2, "__gc");

	push	OFFSET $SG100239
	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 150  :         lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setmetatable
	add	esp, 8

; 151  : 
; 152  :         lua_settable(L, LUA_REGISTRYINDEX);

	push	-10000					; ffffd8f0H
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settable
	add	esp, 8

; 153  : 
; 154  :         lua_pushstring(L, "__luabind_cast_graph");

	push	OFFSET $SG100240
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 155  :         void* cast_graph_storage = lua_newuserdata(

	push	4
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_newuserdata
	add	esp, 8
	mov	DWORD PTR _cast_graph_storage$[ebp], eax

; 156  :             L, sizeof(detail::cast_graph));
; 157  :         detail::cast_graph* graph = new (cast_graph_storage) detail::cast_graph;

	mov	edx, DWORD PTR _cast_graph_storage$[ebp]
	push	edx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0cast_graph@detail@luabind@@QAE@XZ	; luabind::detail::cast_graph::cast_graph
	mov	DWORD PTR _graph$[ebp], eax

; 158  :         (void)graph;
; 159  : 
; 160  :         lua_newtable(L);

	push	0
	push	0
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 161  :         lua_pushcclosure(L, &destroy_cast_graph, 0);

	push	0
	push	OFFSET ?destroy_cast_graph@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ; luabind::`anonymous namespace'::destroy_cast_graph
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 162  :         lua_setfield(L, -2, "__gc");

	push	OFFSET $SG100241
	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 163  :         lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_setmetatable
	add	esp, 8

; 164  : 
; 165  :         lua_settable(L, LUA_REGISTRYINDEX);

	push	-10000					; ffffd8f0H
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_settable
	add	esp, 8

; 166  : 
; 167  :         lua_pushstring(L, "__luabind_class_map");

	push	OFFSET $SG100242
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 168  :         void* class_map_storage = lua_newuserdata(

	push	16					; 00000010H
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_newuserdata
	add	esp, 8
	mov	DWORD PTR _class_map_storage$[ebp], eax

; 169  :             L, sizeof(detail::class_map));
; 170  :         detail::class_map* classes = new (class_map_storage) detail::class_map;

	mov	ecx, DWORD PTR _class_map_storage$[ebp]
	push	ecx
	push	16					; 00000010H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0class_map@detail@luabind@@QAE@XZ
	mov	DWORD PTR _classes$[ebp], eax

; 171  :         (void)classes;
; 172  : 
; 173  :         lua_newtable(L);

	push	0
	push	0
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 174  :         lua_pushcclosure(L, &destroy_class_map, 0);

	push	0
	push	OFFSET ?destroy_class_map@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ; luabind::`anonymous namespace'::destroy_class_map
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 175  :         lua_setfield(L, -2, "__gc");

	push	OFFSET $SG100243
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_setfield
	add	esp, 12					; 0000000cH

; 176  :         lua_setmetatable(L, -2);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_setmetatable
	add	esp, 8

; 177  : 
; 178  :         lua_settable(L, LUA_REGISTRYINDEX);

	push	-10000					; ffffd8f0H
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settable
	add	esp, 8

; 179  : 
; 180  :         // add functions (class, cast etc...)
; 181  :         lua_pushstring(L, "class");

	push	OFFSET $SG100244
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 182  :         lua_pushcclosure(L, detail::create_class::stage1, 0);

	push	0
	push	OFFSET ?stage1@create_class@detail@luabind@@SAHPAUlua_State@@@Z ; luabind::detail::create_class::stage1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 183  :         lua_settable(L, LUA_GLOBALSINDEX);

	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settable
	add	esp, 8

; 184  : 
; 185  :         lua_pushstring(L, "property");

	push	OFFSET $SG100245
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 186  :         lua_pushcclosure(L, &make_property, 0);

	push	0
	push	OFFSET ?make_property@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ; luabind::`anonymous namespace'::make_property
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 187  :         lua_settable(L, LUA_GLOBALSINDEX);

	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settable
	add	esp, 8

; 188  : 
; 189  :         lua_pushlightuserdata(L, &main_thread_tag);

	push	OFFSET ?main_thread_tag@?A0x127fc78d@luabind@@3HA ; luabind::`anonymous namespace'::main_thread_tag
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushlightuserdata
	add	esp, 8

; 190  :         lua_pushlightuserdata(L, L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushlightuserdata
	add	esp, 8

; 191  :         lua_rawset(L, LUA_REGISTRYINDEX);

	push	-10000					; ffffd8f0H
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_rawset
	add	esp, 8

; 192  : 
; 193  :         lua_pushstring(L, "super");

	push	OFFSET $SG100246
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 194  :         lua_pushcclosure(L, &deprecated_super, 0);

	push	0
	push	OFFSET ?deprecated_super@?A0x127fc78d@luabind@@YAHPAUlua_State@@@Z ; luabind::`anonymous namespace'::deprecated_super
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 195  :         lua_settable(L, LUA_GLOBALSINDEX);

	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_settable
	add	esp, 8
$LN4@open:

; 196  :     }

	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?open@luabind@@YAXPAUlua_State@@@Z ENDP			; luabind::open
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Basic_container_proxy_ptr12@std@@IAE@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT
; _this$ = ecx

; 1309 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1302 :     _Container_proxy* _Ptr = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1309 :     _CONSTEXPR20 _Basic_container_proxy_ptr12()                       = default;

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Basic_container_proxy_ptr12@std@@IAE@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ PROC	; std::_Basic_container_proxy_ptr12::_Release, COMDAT
; _this$ = ecx

; 1304 :     constexpr void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1305 :         _Ptr = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1306 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ENDP	; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\utility
;	COMDAT ??$exchange@PAU_Iterator_base12@std@@$$T@std@@YAPAU_Iterator_base12@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU_Iterator_base12@std@@$$T@std@@YAPAU_Iterator_base12@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>, COMDAT

; 652  :     conjunction_v<is_nothrow_move_constructible<_Ty>, is_nothrow_assignable<_Ty&, _Other>>) {

	push	ebp
	mov	ebp, esp
	push	ecx

; 653  :     // assign _New_val to _Val, return previous _Val
; 654  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 655  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 656  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 657  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU_Iterator_base12@std@@$$T@std@@YAPAU_Iterator_base12@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT
; _this$ = ecx

; 1085 :     void _Orphan_all_locked_v3() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1086 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1087 :         _Orphan_all_unlocked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3

; 1088 :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Orphan_all:
	DD	1
	DD	$LN4@Orphan_all
$LN4@Orphan_all:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Orphan_all
$LN3@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
__Pnext$2 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT
; _this$ = ecx

; 1225 : _CONSTEXPR20 void _Container_base12::_Orphan_all_unlocked_v3() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1226 :     if (!_Myproxy) { // no proxy, already done

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@Orphan_all

; 1227 :         return;

	jmp	SHORT $LN6@Orphan_all
$LN5@Orphan_all:

; 1228 :     }
; 1229 : 
; 1230 :     // proxy allocated, drain it
; 1231 :     for (auto _Pnext = _STD exchange(_Myproxy->_Myfirstiter, nullptr); _Pnext; _Pnext = _Pnext->_Mynextiter) {

	mov	DWORD PTR $T1[ebp], 0
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	push	eax
	call	??$exchange@PAU_Iterator_base12@std@@$$T@std@@YAPAU_Iterator_base12@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_Iterator_base12 *,std::nullptr_t>
	add	esp, 8
	mov	DWORD PTR __Pnext$2[ebp], eax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$2[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Pnext$2[ebp], edx
$LN4@Orphan_all:
	cmp	DWORD PTR __Pnext$2[ebp], 0
	je	SHORT $LN6@Orphan_all

; 1232 :         _Pnext->_Myproxy = nullptr;

	mov	eax, DWORD PTR __Pnext$2[ebp]
	mov	DWORD PTR [eax], 0

; 1233 :     }

	jmp	SHORT $LN2@Orphan_all
$LN6@Orphan_all:

; 1234 : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AAEXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 1236 : _CONSTEXPR20 void _Container_base12::_Orphan_all() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1237 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1238 : #if _HAS_CXX20
; 1239 :     if (_STD is_constant_evaluated()) {
; 1240 :         _Orphan_all_unlocked_v3();
; 1241 :     } else
; 1242 : #endif // _HAS_CXX20
; 1243 :     {
; 1244 :         _Orphan_all_locked_v3();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all_locked_v3@_Container_base12@std@@AAEXXZ ; std::_Container_base12::_Orphan_all_locked_v3

; 1245 :     }
; 1246 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1247 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 1054 :     _CONSTEXPR20 _Container_base12() noexcept = default;

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1055 : 
; 1056 :     _Container_base12(const _Container_base12&)            = delete;
; 1057 :     _Container_base12& operator=(const _Container_base12&) = delete;
; 1058 : 
; 1059 :     _CONSTEXPR20 void _Orphan_all() noexcept;
; 1060 :     _CONSTEXPR20 void _Swap_proxy_and_iterators(_Container_base12&) noexcept;
; 1061 : 
; 1062 :     template <class _Alloc>
; 1063 :     _CONSTEXPR20 void _Alloc_proxy(_Alloc&& _Al) {
; 1064 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));
; 1065 :         _Construct_in_place(*_New_proxy, this);
; 1066 :         _Myproxy            = _New_proxy;
; 1067 :         _New_proxy->_Mycont = this;
; 1068 :     }
; 1069 : 
; 1070 :     template <class _Alloc>
; 1071 :     _CONSTEXPR20 void _Reload_proxy(_Alloc&& _Old_alloc, _Alloc&& _New_alloc) {
; 1072 :         // pre: no iterators refer to the existing proxy
; 1073 :         _Container_proxy* const _New_proxy = _Unfancy(_New_alloc.allocate(1));
; 1074 :         _Construct_in_place(*_New_proxy, this);
; 1075 :         _New_proxy->_Mycont = this;
; 1076 :         _Delete_plain_internal(_Old_alloc, _STD exchange(_Myproxy, _New_proxy));
; 1077 :     }
; 1078 : 
; 1079 :     _Container_proxy* _Myproxy = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1054 :     _CONSTEXPR20 _Container_base12() noexcept = default;

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Mycont_$ = 8						; size = 4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 1046 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont_$[ebp]
	mov	DWORD PTR [eax], ecx

; 1047 : 
; 1048 :     const _Container_base12* _Mycont       = nullptr;
; 1049 :     mutable _Iterator_base12* _Myfirstiter = nullptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0

; 1046 :     _CONSTEXPR20 _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_) {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -16					; size = 4
__Min_back_shift$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Ptr_user$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 145  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 146  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 147  :     _Bytes += _Non_user_size;

	mov	eax, DWORD PTR __Bytes$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 39					; 00000027H
	mov	edx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR [edx], ecx

; 148  : 
; 149  :     const uintptr_t* const _Ptr_user = static_cast<uintptr_t*>(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_user$[ebp], ecx

; 150  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	edx, 4
	imul	eax, edx, -1
	mov	ecx, DWORD PTR __Ptr_user$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR __Ptr_container$[ebp], edx
$LN4@Adjust_man:

; 151  : 
; 152  :     // If the following asserts, it likely means that we are performing
; 153  :     // an aligned delete on memory coming from an unaligned allocation.
; 154  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	jne	SHORT $LN7@Adjust_man
	jmp	SHORT $LN2@Adjust_man
$LN7@Adjust_man:
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	154					; 0000009aH
	push	OFFSET ??_C@_0GC@FPOGKCLE@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
$LN19@Adjust_man:
	push	0
	push	154					; 0000009aH
	push	OFFSET ??_C@_1ME@GKDENAFF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Adjust_man
$LN2@Adjust_man:
	xor	edx, edx
	jne	SHORT $LN4@Adjust_man

; 155  : 
; 156  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 157  :     // in range [_Min_back_shift, _Non_user_size]
; 158  : #ifdef _DEBUG
; 159  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	DWORD PTR __Min_back_shift$[ebp], 8

; 160  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 161  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 162  : #endif // _DEBUG
; 163  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:

; 164  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	DWORD PTR __Back_shift$[ebp], 8
	jb	SHORT $LN13@Adjust_man
	cmp	DWORD PTR __Back_shift$[ebp], 39	; 00000027H
	ja	SHORT $LN13@Adjust_man
	jmp	SHORT $LN8@Adjust_man
$LN13@Adjust_man:
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	164					; 000000a4H
	push	OFFSET ??_C@_0GC@FPOGKCLE@C?3?2Program?5Files?2Microsoft?5Visu@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
$LN20@Adjust_man:
	push	0
	push	164					; 000000a4H
	push	OFFSET ??_C@_1ME@GKDENAFF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_11LOCGONAA@@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN8@Adjust_man:
	xor	ecx, ecx
	jne	SHORT $LN10@Adjust_man

; 165  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [edx], eax

; 166  : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT

; 76   :         void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp

; 77   :         return ::operator new(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 78   :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 328  : [[noreturn]] inline void _Throw_bad_array_new_length() {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 329  :     _THROW(bad_array_new_length{});

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0bad_array_new_length@std@@QAE@XZ	; std::bad_array_new_length::bad_array_new_length
	push	OFFSET __TI3?AVbad_array_new_length@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Throw_bad_:

; 330  : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_array_new_length@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 141  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 140  :         : bad_alloc("bad array new length")

	push	OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@AAE@QBD@Z		; std::bad_alloc::bad_alloc

; 141  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 142  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AAE@QBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@AAE@QBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 130  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 129  :         : exception(_Message, 1)

	push	1
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception

; 130  :     {

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 131  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@AAE@QBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 94   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 95   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]

; 96   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 89   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 90   :         __std_exception_destroy(&_Data);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_destroy
	add	esp, 4

; 91   :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 72   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 71   :         : _Data()

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx

; 73   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_copy
	add	esp, 8

; 74   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 66   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 65   :         : _Data()

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx

; 67   :         _Data._What = _Message;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 68   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBD@Z
_TEXT	SEGMENT
__InitData$ = -16					; size = 8
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0exception@std@@QAE@QBD@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 59   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 58   :         : _Data()

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx

; 60   :         __std_exception_data _InitData = { _Message, true };

	mov	eax, DWORD PTR __Message$[ebp]
	mov	DWORD PTR __InitData$[ebp], eax
	mov	BYTE PTR __InitData$[ebp+4], 1

; 61   :         __std_exception_copy(&_InitData, &_Data);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR __InitData$[ebp]
	push	edx
	call	___std_exception_copy
	add	esp, 8

; 62   :     }

	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@exception
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@exception:
	DD	1
	DD	$LN4@exception
$LN4@exception:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@exception
$LN3@exception:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
??0exception@std@@QAE@QBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.35.32215\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 168  :     {

	push	ebp
	mov	ebp, esp

; 169  :         (void)_Size;
; 170  :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 171  :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END

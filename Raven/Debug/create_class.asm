; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31937.0 

	TITLE	D:\__Repos\__MyRepos\Raven_VS2022\Raven\Debug\create_class.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG100122 DB	'__init', 00H
?yield@luabind@@3U?$policy_cons@Uyield_policy@detail@luabind@@Unull_type@23@@detail@1@B	ORG $+1 ; luabind::yield
$SG100125 DB	'__finalize', 00H
	ORG $+1
$SG100140 DB	'internal error, please report', 00H
	ORG $+2
$SG100147 DB	'expected class to derive from or a newline', 00H
	ORG $+1
$SG100141 DB	'D', 00H, ':', 00H, '\', 00H, '_', 00H, '_', 00H, 'R', 00H
	DB	'e', 00H, 'p', 00H, 'o', 00H, 's', 00H, '\', 00H, '_', 00H, '_'
	DB	00H, 'M', 00H, 'y', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H
	DB	's', 00H, '\', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'V', 00H, 'S', 00H, '2', 00H, '0', 00H, '2', 00H
	DB	'2', 00H, '\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o'
	DB	00H, 'n', 00H, '\', 00H, 'l', 00H, 'u', 00H, 'a', 00H, 'b', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, '-', 00H, '0', 00H, '.', 00H, '9'
	DB	00H, '.', 00H, '1', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H
	DB	'\', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	'.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG100142 DB	'(', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'p', 00H, ' ', 00H
	DB	'!', 00H, '=', 00H, ' ', 00H, '0', 00H, ')', 00H, ' ', 00H, '&'
	DB	00H, '&', 00H, ' ', 00H, '"', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 'e'
	DB	00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ',', 00H, ' ', 00H
	DB	'p', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'r', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'"', 00H, 00H, 00H
	ORG $+2
$SG100143 DB	'internal error, please report', 00H
	ORG $+2
$SG100144 DB	'D', 00H, ':', 00H, '\', 00H, '_', 00H, '_', 00H, 'R', 00H
	DB	'e', 00H, 'p', 00H, 'o', 00H, 's', 00H, '\', 00H, '_', 00H, '_'
	DB	00H, 'M', 00H, 'y', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H
	DB	's', 00H, '\', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, '_', 00H, 'V', 00H, 'S', 00H, '2', 00H, '0', 00H, '2', 00H
	DB	'2', 00H, '\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o'
	DB	00H, 'n', 00H, '\', 00H, 'l', 00H, 'u', 00H, 'a', 00H, 'b', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, '-', 00H, '0', 00H, '.', 00H, '9'
	DB	00H, '.', 00H, '1', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H
	DB	'\', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	'.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H
$SG100145 DB	'(', 00H, 'i', 00H, 's', 00H, '_', 00H, 'c', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'p'
	DB	00H, '(', 00H, 'L', 00H, ',', 00H, ' ', 00H, 'l', 00H, 'u', 00H
	DB	'a', 00H, '_', 00H, 'u', 00H, 'p', 00H, 'v', 00H, 'a', 00H, 'l'
	DB	00H, 'u', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, '(', 00H, '1', 00H, ')', 00H, ')', 00H, ')', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'e', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ',', 00H
	DB	' ', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e'
	DB	00H, ' ', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, '"', 00H, 00H, 00H
$SG100160 DB	'invalid construct, expected class name', 00H
	ORG $+1
$SG100162 DB	'luabind does not support class names with extra nulls', 00H
	ORG $+2
$SG104570 DB	'invalid argument', 00H
	ORG $+3
$SG104571 DB	'%s', 00H
	ORG $+1
$SG104574 DB	00H, 00H
	ORG $+2
$SG104572 DB	'C:\Program Files\Microsoft Visual Studio\2022\Community\'
	DB	'VC\Tools\MSVC\14.34.31933\include\xmemory', 00H
	ORG $+6
$SG104573 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H
	DB	'c', 00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't'
	DB	00H, ' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i'
	DB	00H, 'o', 00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H
	DB	'\', 00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\'
	DB	00H, 'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H
	DB	'4', 00H, '.', 00H, '3', 00H, '4', 00H, '.', 00H, '3', 00H, '1'
	DB	00H, '9', 00H, '3', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x'
	DB	00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H
	DB	00H, 00H
$SG104575 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?push@handle@luabind@@QBEXPAUlua_State@@@Z	; luabind::handle::push
PUBLIC	?set_type@class_rep@detail@luabind@@QAEXABVtype_id@3@@Z ; luabind::detail::class_rep::set_type
PUBLIC	?type@class_rep@detail@luabind@@QBEABVtype_id@3@XZ ; luabind::detail::class_rep::type
PUBLIC	?get_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z ; luabind::detail::class_rep::get_table
PUBLIC	?get_default_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z ; luabind::detail::class_rep::get_default_table
PUBLIC	??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ; boost::optional_ns::in_place_init_t::in_place_init_t
PUBLIC	??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ; boost::optional_ns::in_place_init_if_t::in_place_init_if_t
PUBLIC	?stage1@create_class@detail@luabind@@SAHPAUlua_State@@@Z ; luabind::detail::create_class::stage1
PUBLIC	?stage2@create_class@detail@luabind@@SAHPAUlua_State@@@Z ; luabind::detail::create_class::stage2
EXTRN	_lua_gettop:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_insert:PROC
EXTRN	_lua_isnumber:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_equal:PROC
EXTRN	_lua_tolstring:PROC
EXTRN	_lua_objlen:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_pushcclosure:PROC
EXTRN	_lua_rawgeti:PROC
EXTRN	_lua_newuserdata:PROC
EXTRN	_lua_settable:PROC
EXTRN	_lua_error:PROC
EXTRN	_lua_next:PROC
EXTRN	_strlen:PROC
EXTRN	__wassert:PROC
EXTRN	??0class_rep@detail@luabind@@QAE@PAUlua_State@@PBD@Z:PROC ; luabind::detail::class_rep::class_rep
EXTRN	?add_base_class@class_rep@detail@luabind@@QAEXABUbase_info@123@@Z:PROC ; luabind::detail::class_rep::add_base_class
EXTRN	?is_class_rep@detail@luabind@@YA_NPAUlua_State@@H@Z:PROC ; luabind::detail::is_class_rep
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
_BSS	SEGMENT
?in_place_init@optional_ns@boost@@3Uin_place_init_t@12@B DB 01H DUP (?) ; boost::optional_ns::in_place_init
?in_place_init_if@optional_ns@boost@@3Uin_place_init_if_t@12@B DB 01H DUP (?) ; boost::optional_ns::in_place_init_if
_BSS	ENDS
CRT$XCU	SEGMENT
?in_place_init$initializer$@optional_ns@boost@@3P6AXXZA DD FLAT:??__Ein_place_init@optional_ns@boost@@YAXXZ ; boost::optional_ns::in_place_init$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
CRT$XCU	SEGMENT
?in_place_init_if$initializer$@optional_ns@boost@@3P6AXXZA DD FLAT:??__Ein_place_init_if@optional_ns@boost@@YAXXZ ; boost::optional_ns::in_place_init_if$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\create_class.cpp
_TEXT	SEGMENT
_L$ = 8							; size = 4
?copy_member_table@?A0x2cee6b1b@detail@luabind@@YAXPAUlua_State@@@Z PROC ; luabind::detail::`anonymous namespace'::copy_member_table

; 37   : 		{

	push	ebp
	mov	ebp, esp

; 38   : 			lua_pushnil(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushnil
	add	esp, 4
$LN2@copy_membe:

; 39   : 
; 40   : 			while (lua_next(L, -2))

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_next
	add	esp, 8
	test	eax, eax
	je	$LN1@copy_membe

; 41   : 			{
; 42   : 				lua_pushstring(L, "__init");

	push	OFFSET $SG100122
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 43   : 				if (lua_equal(L, -1, -3))

	push	-3					; fffffffdH
	push	-1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_equal
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@copy_membe

; 44   : 				{
; 45   : 					lua_pop(L, 2);

	push	-3					; fffffffdH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_settop
	add	esp, 8

; 46   : 					continue;

	jmp	SHORT $LN2@copy_membe

; 47   : 				}

	jmp	SHORT $LN5@copy_membe
$LN4@copy_membe:

; 48   : 				else lua_pop(L, 1); // __init string

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8
$LN5@copy_membe:

; 49   : 
; 50   : 				lua_pushstring(L, "__finalize");

	push	OFFSET $SG100125
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 51   : 				if (lua_equal(L, -1, -3))

	push	-3					; fffffffdH
	push	-1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_equal
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN6@copy_membe

; 52   : 				{
; 53   : 					lua_pop(L, 2);

	push	-3					; fffffffdH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settop
	add	esp, 8

; 54   : 					continue;

	jmp	$LN2@copy_membe

; 55   : 				}

	jmp	SHORT $LN7@copy_membe
$LN6@copy_membe:

; 56   : 				else lua_pop(L, 1); // __finalize string

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8
$LN7@copy_membe:

; 57   : 
; 58   : 				lua_pushvalue(L, -2); // copy key

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 59   : 				lua_insert(L, -2);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_insert
	add	esp, 8

; 60   : 				lua_settable(L, -5);

	push	-5					; fffffffbH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settable
	add	esp, 8

; 61   : 			}

	jmp	$LN2@copy_membe
$LN1@copy_membe:

; 62   : 		}

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?copy_member_table@?A0x2cee6b1b@detail@luabind@@YAXPAUlua_State@@@Z ENDP ; luabind::detail::`anonymous namespace'::copy_member_table
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\create_class.cpp
_TEXT	SEGMENT
_binfo$ = -20						; size = 8
_base$ = -8						; size = 4
_crep$ = -4						; size = 4
_L$ = 8							; size = 4
?stage2@create_class@detail@luabind@@SAHPAUlua_State@@@Z PROC ; luabind::detail::create_class::stage2

; 67   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 68   : 		class_rep* crep = static_cast<class_rep*>(lua_touserdata(L, lua_upvalueindex(1)));

	push	-10003					; ffffd8edH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _crep$[ebp], eax

; 69   : 		assert((crep != 0) && "internal error, please report");

	cmp	DWORD PTR _crep$[ebp], 0
	je	SHORT $LN4@stage2
	mov	ecx, OFFSET $SG100140
	test	ecx, ecx
	jne	SHORT $LN5@stage2
$LN4@stage2:
	push	69					; 00000045H
	push	OFFSET $SG100141
	push	OFFSET $SG100142
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@stage2:

; 70   : 		assert((is_class_rep(L, lua_upvalueindex(1))) && "internal error, please report");

	push	-10003					; ffffd8edH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	?is_class_rep@detail@luabind@@YA_NPAUlua_State@@H@Z ; luabind::detail::is_class_rep
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@stage2
	mov	edx, OFFSET $SG100143
	test	edx, edx
	jne	SHORT $LN7@stage2
$LN6@stage2:
	push	70					; 00000046H
	push	OFFSET $SG100144
	push	OFFSET $SG100145
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@stage2:

; 71   : 
; 72   : 	#ifndef LUABIND_NO_ERROR_CHECKING
; 73   : 
; 74   : 		if (!is_class_rep(L, 1))

	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?is_class_rep@detail@luabind@@YA_NPAUlua_State@@H@Z ; luabind::detail::is_class_rep
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@stage2

; 75   : 		{
; 76   : 			lua_pushstring(L, "expected class to derive from or a newline");

	push	OFFSET $SG100147
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 77   : 			lua_error(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_error
	add	esp, 4
$LN2@stage2:

; 78   : 		}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 		class_rep* base = static_cast<class_rep*>(lua_touserdata(L, 1));

	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_touserdata
	add	esp, 8
	mov	DWORD PTR _base$[ebp], eax

; 83   : 		class_rep::base_info binfo;
; 84   : 
; 85   : 		binfo.pointer_offset = 0;

	mov	DWORD PTR _binfo$[ebp], 0

; 86   : 		binfo.base = base;

	mov	eax, DWORD PTR _base$[ebp]
	mov	DWORD PTR _binfo$[ebp+4], eax

; 87   : 		crep->add_base_class(binfo);

	lea	ecx, DWORD PTR _binfo$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _crep$[ebp]
	call	?add_base_class@class_rep@detail@luabind@@QAEXABUbase_info@123@@Z ; luabind::detail::class_rep::add_base_class

; 88   : 
; 89   : 		// copy base class members
; 90   : 
; 91   : 		crep->get_table(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	mov	ecx, DWORD PTR _crep$[ebp]
	call	?get_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z ; luabind::detail::class_rep::get_table

; 92   : 		base->get_table(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	call	?get_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z ; luabind::detail::class_rep::get_table

; 93   : 		copy_member_table(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?copy_member_table@?A0x2cee6b1b@detail@luabind@@YAXPAUlua_State@@@Z ; luabind::detail::`anonymous namespace'::copy_member_table
	add	esp, 4

; 94   : 
; 95   : 		crep->get_default_table(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	mov	ecx, DWORD PTR _crep$[ebp]
	call	?get_default_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z ; luabind::detail::class_rep::get_default_table

; 96   : 		base->get_default_table(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	call	?get_default_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z ; luabind::detail::class_rep::get_default_table

; 97   : 		copy_member_table(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	?copy_member_table@?A0x2cee6b1b@detail@luabind@@YAXPAUlua_State@@@Z ; luabind::detail::`anonymous namespace'::copy_member_table
	add	esp, 4

; 98   : 
; 99   : 		crep->set_type(base->type());

	mov	ecx, DWORD PTR _base$[ebp]
	call	?type@class_rep@detail@luabind@@QBEABVtype_id@3@XZ ; luabind::detail::class_rep::type
	push	eax
	mov	ecx, DWORD PTR _crep$[ebp]
	call	?set_type@class_rep@detail@luabind@@QAEXABVtype_id@3@@Z ; luabind::detail::class_rep::set_type

; 100  : 
; 101  : 		return 0;

	xor	eax, eax

; 102  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@stage2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@stage2:
	DD	1
	DD	$LN9@stage2
$LN9@stage2:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN8@stage2
$LN8@stage2:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
?stage2@create_class@detail@luabind@@SAHPAUlua_State@@@Z ENDP ; luabind::detail::create_class::stage2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\create_class.cpp
_TEXT	SEGMENT
$T1 = -12						; size = 4
_c$ = -8						; size = 4
_name$ = -4						; size = 4
_L$ = 8							; size = 4
?stage1@create_class@detail@luabind@@SAHPAUlua_State@@@Z PROC ; luabind::detail::create_class::stage1

; 105  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 106  : 
; 107  : 	#ifndef LUABIND_NO_ERROR_CHECKING
; 108  : 
; 109  : 		if (lua_gettop(L) != 1 || lua_type(L, 1) != LUA_TSTRING || lua_isnumber(L, 1))

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettop
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN3@stage1
	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_type
	add	esp, 8
	cmp	eax, 4
	jne	SHORT $LN3@stage1
	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_isnumber
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@stage1
$LN3@stage1:

; 110  : 		{
; 111  : 			lua_pushstring(L, "invalid construct, expected class name");

	push	OFFSET $SG100160
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 112  : 			lua_error(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_error
	add	esp, 4
$LN2@stage1:

; 113  : 		}
; 114  : 
; 115  : 		if (std::strlen(lua_tostring(L, 1)) != lua_strlen(L, 1))

	push	0
	push	1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_objlen
	add	esp, 8
	cmp	esi, eax
	je	SHORT $LN4@stage1

; 116  : 		{
; 117  : 			lua_pushstring(L, "luabind does not support class names with extra nulls");

	push	OFFSET $SG100162
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 118  : 			lua_error(L);

	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_error
	add	esp, 4
$LN4@stage1:

; 119  : 		}
; 120  : 
; 121  : 	#endif
; 122  : 
; 123  : 		const char* name = lua_tostring(L, 1);

	push	0
	push	1
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_tolstring
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _name$[ebp], eax

; 124  : 
; 125  : 		void* c = lua_newuserdata(L, sizeof(class_rep));

	push	80					; 00000050H
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_newuserdata
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax

; 126  : 		new(c) class_rep(L, name);

	mov	edx, DWORD PTR _c$[ebp]
	push	edx
	push	80					; 00000050H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0class_rep@detail@luabind@@QAE@PAUlua_State@@PBD@Z ; luabind::detail::class_rep::class_rep

; 127  : 
; 128  : 		// make the class globally available
; 129  : 		lua_pushstring(L, name);

	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushstring
	add	esp, 8

; 130  : 		lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8

; 131  : 		lua_settable(L, LUA_GLOBALSINDEX);

	push	-10002					; ffffd8eeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_settable
	add	esp, 8

; 132  : 
; 133  : 		// also add it to the closure as return value
; 134  : 		lua_pushcclosure(L, &stage2, 1);

	push	1
	push	OFFSET ?stage2@create_class@detail@luabind@@SAHPAUlua_State@@@Z ; luabind::detail::create_class::stage2
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_pushcclosure
	add	esp, 12					; 0000000cH

; 135  : 
; 136  : 		return 1;

	mov	eax, 1

; 137  : 	}

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?stage1@create_class@detail@luabind@@SAHPAUlua_State@@@Z ENDP ; luabind::detail::create_class::stage1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\optional\optional.hpp
;	COMDAT ??__Ein_place_init_if@optional_ns@boost@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Ein_place_init_if@optional_ns@boost@@YAXXZ PROC	; boost::optional_ns::`dynamic initializer for 'in_place_init_if'', COMDAT

; 106  : const in_place_init_if_t in_place_init_if ((in_place_init_if_t::init_tag()));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, OFFSET ?in_place_init_if@optional_ns@boost@@3Uin_place_init_if_t@12@B
	call	??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ; boost::optional_ns::in_place_init_if_t::in_place_init_if_t
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ein_place_init_if@optional_ns@boost@@YAXXZ ENDP	; boost::optional_ns::`dynamic initializer for 'in_place_init_if''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\optional\optional.hpp
;	COMDAT ??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z PROC ; boost::optional_ns::in_place_init_if_t::in_place_init_if_t, COMDAT
; _this$ = ecx

; 104  :   explicit in_place_init_if_t(init_tag){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0in_place_init_if_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ENDP ; boost::optional_ns::in_place_init_if_t::in_place_init_if_t
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\optional\optional.hpp
;	COMDAT ??__Ein_place_init@optional_ns@boost@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Ein_place_init@optional_ns@boost@@YAXXZ PROC	; boost::optional_ns::`dynamic initializer for 'in_place_init'', COMDAT

; 98   : const in_place_init_t in_place_init ((in_place_init_t::init_tag()));

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, OFFSET ?in_place_init@optional_ns@boost@@3Uin_place_init_t@12@B
	call	??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ; boost::optional_ns::in_place_init_t::in_place_init_t
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ein_place_init@optional_ns@boost@@YAXXZ ENDP	; boost::optional_ns::`dynamic initializer for 'in_place_init''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\boost\optional\optional.hpp
;	COMDAT ??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z PROC ; boost::optional_ns::in_place_init_t::in_place_init_t, COMDAT
; _this$ = ecx

; 96   :   explicit in_place_init_t(init_tag){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0in_place_init_t@optional_ns@boost@@QAE@Uinit_tag@012@@Z ENDP ; boost::optional_ns::in_place_init_t::in_place_init_t
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\class_rep.hpp
;	COMDAT ?get_default_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_L$ = 8							; size = 4
?get_default_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z PROC ; luabind::detail::class_rep::get_default_table, COMDAT
; _this$ = ecx

; 126  : 		void get_default_table(lua_State* L) const { m_default_table.push(L); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	?push@handle@luabind@@QBEXPAUlua_State@@@Z ; luabind::handle::push
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_default_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z ENDP ; luabind::detail::class_rep::get_default_table
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\class_rep.hpp
;	COMDAT ?get_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_L$ = 8							; size = 4
?get_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z PROC ; luabind::detail::class_rep::get_table, COMDAT
; _this$ = ecx

; 125  : 		void get_table(lua_State* L) const { m_table.push(L); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?push@handle@luabind@@QBEXPAUlua_State@@@Z ; luabind::handle::push
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?get_table@class_rep@detail@luabind@@QBEXPAUlua_State@@@Z ENDP ; luabind::detail::class_rep::get_table
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\class_rep.hpp
;	COMDAT ?type@class_rep@detail@luabind@@QBEABVtype_id@3@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?type@class_rep@detail@luabind@@QBEABVtype_id@3@XZ PROC	; luabind::detail::class_rep::type, COMDAT
; _this$ = ecx

; 118  : 		type_id const& type() const throw() { return m_type; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?type@class_rep@detail@luabind@@QBEABVtype_id@3@XZ ENDP	; luabind::detail::class_rep::type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\class_rep.hpp
;	COMDAT ?set_type@class_rep@detail@luabind@@QAEXABVtype_id@3@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t$ = 8							; size = 4
?set_type@class_rep@detail@luabind@@QAEXABVtype_id@3@@Z PROC ; luabind::detail::class_rep::set_type, COMDAT
; _this$ = ecx

; 117  : 		void set_type(type_id const& t) { m_type = t; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?set_type@class_rep@detail@luabind@@QAEXABVtype_id@3@@Z ENDP ; luabind::detail::class_rep::set_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\handle.hpp
;	COMDAT ?push@handle@luabind@@QBEXPAUlua_State@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_interpreter$ = 8					; size = 4
?push@handle@luabind@@QBEXPAUlua_State@@@Z PROC		; luabind::handle::push, COMDAT
; _this$ = ecx

; 105  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 106  :     lua_rawgeti(interpreter, LUA_REGISTRYINDEX, m_index);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	-10000					; ffffd8f0H
	mov	edx, DWORD PTR _interpreter$[ebp]
	push	edx
	call	_lua_rawgeti
	add	esp, 12					; 0000000cH

; 107  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push@handle@luabind@@QBEXPAUlua_State@@@Z ENDP		; luabind::handle::push
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.34.31933\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 168  :     {

	push	ebp
	mov	ebp, esp

; 169  :         (void)_Size;
; 170  :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 171  :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 19.33.31629.0 

	TITLE	D:\__Repos\__MyRepos\Raven_VS2022\Raven\Debug\scope.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??0registration@detail@luabind@@QAE@XZ		; luabind::detail::registration::registration
PUBLIC	??1registration@detail@luabind@@UAE@XZ		; luabind::detail::registration::~registration
PUBLIC	??_Gregistration@detail@luabind@@UAEPAXI@Z	; luabind::detail::registration::`scalar deleting destructor'
PUBLIC	??0scope@luabind@@QAE@XZ			; luabind::scope::scope
PUBLIC	??0scope@luabind@@QAE@V?$auto_ptr@Uregistration@detail@luabind@@@std@@@Z ; luabind::scope::scope
PUBLIC	??0scope@luabind@@QAE@ABU01@@Z			; luabind::scope::scope
PUBLIC	??1scope@luabind@@QAE@XZ			; luabind::scope::~scope
PUBLIC	??4scope@luabind@@QAEAAU01@ABU01@@Z		; luabind::scope::operator=
PUBLIC	??Qscope@luabind@@QAEAAU01@U01@@Z		; luabind::scope::operator,
PUBLIC	?register_@scope@luabind@@QBEXPAUlua_State@@@Z	; luabind::scope::register_
PUBLIC	??0namespace_@luabind@@QAE@PBD@Z		; luabind::namespace_::namespace_
PUBLIC	??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z	; luabind::namespace_::operator[]
PUBLIC	??0module_@luabind@@QAE@PAUlua_State@@PBD@Z	; luabind::module_::module_
PUBLIC	??Amodule_@luabind@@QAEXUscope@1@@Z		; luabind::module_::operator[]
PUBLIC	??0stack_checker_type@detail@luabind@@QAE@PAUlua_State@@@Z ; luabind::detail::stack_checker_type::stack_checker_type
PUBLIC	??1stack_checker_type@detail@luabind@@QAE@XZ	; luabind::detail::stack_checker_type::~stack_checker_type
PUBLIC	??0stack_pop@detail@luabind@@QAE@PAUlua_State@@H@Z ; luabind::detail::stack_pop::stack_pop
PUBLIC	??1stack_pop@detail@luabind@@QAE@XZ		; luabind::detail::stack_pop::~stack_pop
PUBLIC	??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z ; std::auto_ptr<luabind::detail::registration>::auto_ptr<luabind::detail::registration>
PUBLIC	??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@U?$auto_ptr_ref@Uregistration@detail@luabind@@@1@@Z ; std::auto_ptr<luabind::detail::registration>::auto_ptr<luabind::detail::registration>
PUBLIC	??1?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@XZ ; std::auto_ptr<luabind::detail::registration>::~auto_ptr<luabind::detail::registration>
PUBLIC	?release@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAEPAUregistration@detail@luabind@@XZ ; std::auto_ptr<luabind::detail::registration>::release
PUBLIC	??0registration_@namespace_@luabind@@QAE@PBD@Z	; luabind::namespace_::registration_::registration_
PUBLIC	?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z ; luabind::namespace_::registration_::register_
PUBLIC	??1registration_@namespace_@luabind@@UAE@XZ	; luabind::namespace_::registration_::~registration_
PUBLIC	??_Gregistration_@namespace_@luabind@@UAEPAXI@Z	; luabind::namespace_::registration_::`scalar deleting destructor'
PUBLIC	??0?$auto_ptr_ref@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z ; std::auto_ptr_ref<luabind::detail::registration>::auto_ptr_ref<luabind::detail::registration>
PUBLIC	??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ ; std::auto_ptr<luabind::detail::registration>::operator<luabind::detail::registration> std::auto_ptr_ref<luabind::detail::registration>
PUBLIC	??_7registration@detail@luabind@@6B@		; luabind::detail::registration::`vftable'
PUBLIC	??_C@_1KA@FDCAJHLM@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@ ; `string'
PUBLIC	??_C@_1DG@CAPFJFIB@?$AAm?$AA_?$AAs?$AAt?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAl?$AAu?$AAa?$AA_@ ; `string'
PUBLIC	??_7registration_@namespace_@luabind@@6B@	; luabind::namespace_::registration_::`vftable'
PUBLIC	??_C@_1IK@FBMCDFCG@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@ ; `string'
PUBLIC	??_C@_1CG@PHFKNMPK@?$AAl?$AAu?$AAa?$AA_?$AAg?$AAe?$AAt?$AAt?$AAo?$AAp?$AA?$CI?$AAL?$AA?$CJ?$AA?5?$AA?$DO@ ; `string'
PUBLIC	??_R4registration@detail@luabind@@6B@		; luabind::detail::registration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUregistration@detail@luabind@@@8		; luabind::detail::registration `RTTI Type Descriptor'
PUBLIC	??_R3registration@detail@luabind@@8		; luabind::detail::registration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2registration@detail@luabind@@8		; luabind::detail::registration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@registration@detail@luabind@@8	; luabind::detail::registration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4registration_@namespace_@luabind@@6B@	; luabind::namespace_::registration_::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUregistration_@namespace_@luabind@@@8	; luabind::namespace_::registration_ `RTTI Type Descriptor'
PUBLIC	??_R3registration_@namespace_@luabind@@8	; luabind::namespace_::registration_::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2registration_@namespace_@luabind@@8	; luabind::namespace_::registration_::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@registration_@namespace_@luabind@@8 ; luabind::namespace_::registration_::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_lua_gettop:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_gettable:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_settable:PROC
EXTRN	??_Eregistration@detail@luabind@@UAEPAXI@Z:PROC	; luabind::detail::registration::`vector deleting destructor'
EXTRN	__wassert:PROC
EXTRN	??_Eregistration_@namespace_@luabind@@UAEPAXI@Z:PROC ; luabind::namespace_::registration_::`vector deleting destructor'
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@registration_@namespace_@luabind@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@registration_@namespace_@luabind@@8 DD FLAT:??_R0?AUregistration_@namespace_@luabind@@@8 ; luabind::namespace_::registration_::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3registration_@namespace_@luabind@@8
rdata$r	ENDS
;	COMDAT ??_R2registration_@namespace_@luabind@@8
rdata$r	SEGMENT
??_R2registration_@namespace_@luabind@@8 DD FLAT:??_R1A@?0A@EA@registration_@namespace_@luabind@@8 ; luabind::namespace_::registration_::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@registration@detail@luabind@@8
rdata$r	ENDS
;	COMDAT ??_R3registration_@namespace_@luabind@@8
rdata$r	SEGMENT
??_R3registration_@namespace_@luabind@@8 DD 00H		; luabind::namespace_::registration_::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2registration_@namespace_@luabind@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUregistration_@namespace_@luabind@@@8
data$rs	SEGMENT
??_R0?AUregistration_@namespace_@luabind@@@8 DD FLAT:??_7type_info@@6B@ ; luabind::namespace_::registration_ `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUregistration_@namespace_@luabind@@', 00H
data$rs	ENDS
;	COMDAT ??_R4registration_@namespace_@luabind@@6B@
rdata$r	SEGMENT
??_R4registration_@namespace_@luabind@@6B@ DD 00H	; luabind::namespace_::registration_::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUregistration_@namespace_@luabind@@@8
	DD	FLAT:??_R3registration_@namespace_@luabind@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@registration@detail@luabind@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@registration@detail@luabind@@8 DD FLAT:??_R0?AUregistration@detail@luabind@@@8 ; luabind::detail::registration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3registration@detail@luabind@@8
rdata$r	ENDS
;	COMDAT ??_R2registration@detail@luabind@@8
rdata$r	SEGMENT
??_R2registration@detail@luabind@@8 DD FLAT:??_R1A@?0A@EA@registration@detail@luabind@@8 ; luabind::detail::registration::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3registration@detail@luabind@@8
rdata$r	SEGMENT
??_R3registration@detail@luabind@@8 DD 00H		; luabind::detail::registration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2registration@detail@luabind@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUregistration@detail@luabind@@@8
data$rs	SEGMENT
??_R0?AUregistration@detail@luabind@@@8 DD FLAT:??_7type_info@@6B@ ; luabind::detail::registration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUregistration@detail@luabind@@', 00H
data$rs	ENDS
;	COMDAT ??_R4registration@detail@luabind@@6B@
rdata$r	SEGMENT
??_R4registration@detail@luabind@@6B@ DD 00H		; luabind::detail::registration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUregistration@detail@luabind@@@8
	DD	FLAT:??_R3registration@detail@luabind@@8
rdata$r	ENDS
;	COMDAT ??_C@_1CG@PHFKNMPK@?$AAl?$AAu?$AAa?$AA_?$AAg?$AAe?$AAt?$AAt?$AAo?$AAp?$AA?$CI?$AAL?$AA?$CJ?$AA?5?$AA?$DO@
CONST	SEGMENT
??_C@_1CG@PHFKNMPK@?$AAl?$AAu?$AAa?$AA_?$AAg?$AAe?$AAt?$AAt?$AAo?$AAp?$AA?$CI?$AAL?$AA?$CJ?$AA?5?$AA?$DO@ DB 'l'
	DB	00H, 'u', 00H, 'a', 00H, '_', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	't', 00H, 'o', 00H, 'p', 00H, '(', 00H, 'L', 00H, ')', 00H, ' '
	DB	00H, '>', 00H, '=', 00H, ' ', 00H, '1', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@FBMCDFCG@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
CONST	SEGMENT
??_C@_1IK@FBMCDFCG@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, '_', 00H, '_', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'o', 00H, 's', 00H, '\', 00H, '_', 00H, '_', 00H, 'M'
	DB	00H, 'y', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 's', 00H
	DB	'\', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n', 00H, '_'
	DB	00H, 'V', 00H, 'S', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'l', 00H, 'u', 00H, 'a', 00H, 'b', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, '-', 00H, '0', 00H, '.', 00H, '9', 00H, '.'
	DB	00H, '1', 00H, '\', 00H, 's', 00H, 'r', 00H, 'c', 00H, '\', 00H
	DB	's', 00H, 'c', 00H, 'o', 00H, 'p', 00H, 'e', 00H, '.', 00H, 'c'
	DB	00H, 'p', 00H, 'p', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_7registration_@namespace_@luabind@@6B@
CONST	SEGMENT
??_7registration_@namespace_@luabind@@6B@ DD FLAT:??_R4registration_@namespace_@luabind@@6B@ ; luabind::namespace_::registration_::`vftable'
	DD	FLAT:??_Eregistration_@namespace_@luabind@@UAEPAXI@Z
	DD	FLAT:?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z
CONST	ENDS
;	COMDAT ??_C@_1DG@CAPFJFIB@?$AAm?$AA_?$AAs?$AAt?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAl?$AAu?$AAa?$AA_@
CONST	SEGMENT
??_C@_1DG@CAPFJFIB@?$AAm?$AA_?$AAs?$AAt?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAl?$AAu?$AAa?$AA_@ DB 'm'
	DB	00H, '_', 00H, 's', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'k', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'l', 00H, 'u', 00H, 'a'
	DB	00H, '_', 00H, 'g', 00H, 'e', 00H, 't', 00H, 't', 00H, 'o', 00H
	DB	'p', 00H, '(', 00H, 'm', 00H, '_', 00H, 'L', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1KA@FDCAJHLM@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
CONST	SEGMENT
??_C@_1KA@FDCAJHLM@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@ DB 'D'
	DB	00H, ':', 00H, '\', 00H, '_', 00H, '_', 00H, 'R', 00H, 'e', 00H
	DB	'p', 00H, 'o', 00H, 's', 00H, '\', 00H, '_', 00H, '_', 00H, 'M'
	DB	00H, 'y', 00H, 'R', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 's', 00H
	DB	'\', 00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n', 00H, '_'
	DB	00H, 'V', 00H, 'S', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H
	DB	'\', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'l', 00H, 'u', 00H, 'a', 00H, 'b', 00H, 'i', 00H
	DB	'n', 00H, 'd', 00H, '-', 00H, '0', 00H, '.', 00H, '9', 00H, '.'
	DB	00H, '1', 00H, '\', 00H, 'l', 00H, 'u', 00H, 'a', 00H, 'b', 00H
	DB	'i', 00H, 'n', 00H, 'd', 00H, '\', 00H, 'd', 00H, 'e', 00H, 't'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, '\', 00H, 'd', 00H, 'e', 00H
	DB	'b', 00H, 'u', 00H, 'g', 00H, '.', 00H, 'h', 00H, 'p', 00H, 'p'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7registration@detail@luabind@@6B@
CONST	SEGMENT
??_7registration@detail@luabind@@6B@ DD FLAT:??_R4registration@detail@luabind@@6B@ ; luabind::detail::registration::`vftable'
	DD	FLAT:??_Eregistration@detail@luabind@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	09H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	01eH
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z$1
__ehfuncinfo$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	016H
voltbl	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0registration_@namespace_@luabind@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0registration_@namespace_@luabind@@QAE@PBD@Z$0
__ehfuncinfo$??0registration_@namespace_@luabind@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0registration_@namespace_@luabind@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$??Amodule_@luabind@@QAEXUscope@1@@Z$0
	DD	01eH
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z$0
	DD	016H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$??0namespace_@luabind@@QAE@PBD@Z$0
	DD	025H
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:__unwindfunclet$?register_@scope@luabind@@QBEXPAUlua_State@@@Z$0
	DD	016H
voltbl	ENDS
xdata$x	SEGMENT
__unwindtable$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z$0
__unwindtable$?register_@scope@luabind@@QBEXPAUlua_State@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?register_@scope@luabind@@QBEXPAUlua_State@@@Z$0
__unwindtable$??Amodule_@luabind@@QAEXUscope@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??Amodule_@luabind@@QAEXUscope@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??Amodule_@luabind@@QAEXUscope@1@@Z$1
__unwindtable$??0namespace_@luabind@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0namespace_@luabind@@QAE@PBD@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0namespace_@luabind@@QAE@PBD@Z$1
__ehfuncinfo$??Amodule_@luabind@@QAEXUscope@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??Amodule_@luabind@@QAEXUscope@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??0namespace_@luabind@@QAE@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0namespace_@luabind@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?register_@scope@luabind@@QBEXPAUlua_State@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?register_@scope@luabind@@QBEXPAUlua_State@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory
;	COMDAT ??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ
_TEXT	SEGMENT
__Ans$ = -28						; size = 4
__Cvtptr$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ PROC ; std::auto_ptr<luabind::detail::registration>::operator<luabind::detail::registration> std::auto_ptr_ref<luabind::detail::registration>, COMDAT
; _this$ = ecx

; 960  :     operator auto_ptr_ref<_Other>() noexcept { // convert to compatible auto_ptr_ref

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 961  :         _Other* _Cvtptr = _Myptr; // test implicit conversion

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Cvtptr$[ebp], ecx

; 962  :         auto_ptr_ref<_Other> _Ans(_Cvtptr);

	mov	edx, DWORD PTR __Cvtptr$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Ans$[ebp]
	call	??0?$auto_ptr_ref@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z ; std::auto_ptr_ref<luabind::detail::registration>::auto_ptr_ref<luabind::detail::registration>

; 963  :         _Myptr = nullptr; // pass ownership to auto_ptr_ref

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 964  :         return _Ans;

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Ans$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 965  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@auto_ptr_r
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@auto_ptr_r:
	DD	1
	DD	$LN5@auto_ptr_r
$LN5@auto_ptr_r:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN3@auto_ptr_r
$LN3@auto_ptr_r:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ ENDP ; std::auto_ptr<luabind::detail::registration>::operator<luabind::detail::registration> std::auto_ptr_ref<luabind::detail::registration>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory
;	COMDAT ??0?$auto_ptr_ref@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$auto_ptr_ref@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z PROC ; std::auto_ptr_ref<luabind::detail::registration>::auto_ptr_ref<luabind::detail::registration>, COMDAT
; _this$ = ecx

; 934  :     explicit auto_ptr_ref(_Ty* _Right) : _Ref(_Right) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$auto_ptr_ref@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z ENDP ; std::auto_ptr_ref<luabind::detail::registration>::auto_ptr_ref<luabind::detail::registration>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gregistration_@namespace_@luabind@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gregistration_@namespace_@luabind@@UAEPAXI@Z PROC	; luabind::namespace_::registration_::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1registration_@namespace_@luabind@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gregistration_@namespace_@luabind@@UAEPAXI@Z ENDP	; luabind::namespace_::registration_::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1registration_@namespace_@luabind@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1registration_@namespace_@luabind@@UAE@XZ PROC	; luabind::namespace_::registration_::~registration_, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1scope@luabind@@QAE@XZ		; luabind::scope::~scope
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1registration@detail@luabind@@UAE@XZ	; luabind::detail::registration::~registration
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1registration_@namespace_@luabind@@UAE@XZ ENDP	; luabind::namespace_::registration_::~registration_
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
;	COMDAT ?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z
_TEXT	SEGMENT
_p$ = -44						; size = 8
_stack_checker_object$ = -28				; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z PROC ; luabind::namespace_::registration_::register_, COMDAT
; _this$ = ecx

; 170  :         {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 171  : 			LUABIND_CHECK_STACK(L);

	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stack_checker_object$[ebp]
	call	??0stack_checker_type@detail@luabind@@QAE@PAUlua_State@@@Z ; luabind::detail::stack_checker_type::stack_checker_type
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 172  :             assert(lua_gettop(L) >= 1);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	cmp	eax, 1
	jge	SHORT $LN4@register_
	push	172					; 000000acH
	push	OFFSET ??_C@_1IK@FBMCDFCG@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
	push	OFFSET ??_C@_1CG@PHFKNMPK@?$AAl?$AAu?$AAa?$AA_?$AAg?$AAe?$AAt?$AAt?$AAo?$AAp?$AA?$CI?$AAL?$AA?$CJ?$AA?5?$AA?$DO@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@register_:

; 173  : 
; 174  :             lua_pushstring(L, m_name);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushstring
	add	esp, 8

; 175  :             lua_gettable(L, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_gettable
	add	esp, 8

; 176  : 
; 177  : 			detail::stack_pop p(L, 1); // pops the table on exit

	push	1
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _p$[ebp]
	call	??0stack_pop@detail@luabind@@QAE@PAUlua_State@@H@Z ; luabind::detail::stack_pop::stack_pop
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 178  : 
; 179  :             if (!lua_istable(L, -1))

	push	-1
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	je	SHORT $LN2@register_

; 180  :             {
; 181  :                 lua_pop(L, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settop
	add	esp, 8

; 182  : 
; 183  :                 lua_newtable(L);

	push	0
	push	0
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 184  :                 lua_pushstring(L, m_name);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 185  :                 lua_pushvalue(L, -2);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	call	_lua_pushvalue
	add	esp, 8

; 186  :                 lua_settable(L, -4);

	push	-4					; fffffffcH
	mov	eax, DWORD PTR _L$[ebp]
	push	eax
	call	_lua_settable
	add	esp, 8
$LN2@register_:

; 187  :             }
; 188  : 
; 189  :             m_scope.register_(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?register_@scope@luabind@@QBEXPAUlua_State@@@Z ; luabind::scope::register_

; 190  :         }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _p$[ebp]
	call	??1stack_pop@detail@luabind@@QAE@XZ	; luabind::detail::stack_pop::~stack_pop
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stack_checker_object$[ebp]
	call	??1stack_checker_type@detail@luabind@@QAE@XZ ; luabind::detail::stack_checker_type::~stack_checker_type
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@register_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN11@register_:
	DD	2
	DD	$LN10@register_
$LN10@register_:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN7@register_
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN8@register_
$LN8@register_:
	DB	112					; 00000070H
	DB	0
$LN7@register_:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _stack_checker_object$[ebp]
	jmp	??1stack_checker_type@detail@luabind@@QAE@XZ ; luabind::detail::stack_checker_type::~stack_checker_type
__unwindfunclet$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z$1:
	lea	ecx, DWORD PTR _p$[ebp]
	jmp	??1stack_pop@detail@luabind@@QAE@XZ	; luabind::detail::stack_pop::~stack_pop
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?register_@registration_@namespace_@luabind@@UBEXPAUlua_State@@@Z ENDP ; luabind::namespace_::registration_::register_
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
;	COMDAT ??0registration_@namespace_@luabind@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
??0registration_@namespace_@luabind@@QAE@PBD@Z PROC	; luabind::namespace_::registration_::registration_, COMDAT
; _this$ = ecx

; 166  :         {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0registration_@namespace_@luabind@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0registration@detail@luabind@@QAE@XZ	; luabind::detail::registration::registration
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7registration_@namespace_@luabind@@6B@

; 165  :             : m_name(name)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 166  :         {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0scope@luabind@@QAE@XZ		; luabind::scope::scope

; 167  :         }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0registration_@namespace_@luabind@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1registration@detail@luabind@@UAE@XZ	; luabind::detail::registration::~registration
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0registration_@namespace_@luabind@@QAE@PBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0registration_@namespace_@luabind@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0registration_@namespace_@luabind@@QAE@PBD@Z ENDP	; luabind::namespace_::registration_::registration_
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1lua_pop_stack@?A0xd1267dc2@luabind@@QAE@XZ PROC	; luabind::`anonymous namespace'::lua_pop_stack::~lua_pop_stack
; _this$ = ecx

; 120  :             {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 121  :                 lua_pop(m_state, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_lua_settop
	add	esp, 8

; 122  :             }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1lua_pop_stack@?A0xd1267dc2@luabind@@QAE@XZ ENDP	; luabind::`anonymous namespace'::lua_pop_stack::~lua_pop_stack
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_L$ = 8							; size = 4
??0lua_pop_stack@?A0xd1267dc2@luabind@@QAE@PAUlua_State@@@Z PROC ; luabind::`anonymous namespace'::lua_pop_stack::lua_pop_stack
; _this$ = ecx

; 116  :             {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 115  :                 : m_state(L)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _L$[ebp]
	mov	DWORD PTR [eax], ecx

; 117  :             }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0lua_pop_stack@?A0xd1267dc2@luabind@@QAE@PAUlua_State@@@Z ENDP ; luabind::`anonymous namespace'::lua_pop_stack::lua_pop_stack
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory
;	COMDAT ?release@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAEPAUregistration@detail@luabind@@XZ
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
?release@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAEPAUregistration@detail@luabind@@XZ PROC ; std::auto_ptr<luabind::detail::registration>::release, COMDAT
; _this$ = ecx

; 1012 :     _Ty* release() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 1013 :         _Ty* _Tmp = _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$[ebp], ecx

; 1014 :         _Myptr    = nullptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0

; 1015 :         return _Tmp;

	mov	eax, DWORD PTR __Tmp$[ebp]

; 1016 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?release@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAEPAUregistration@detail@luabind@@XZ ENDP ; std::auto_ptr<luabind::detail::registration>::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory
;	COMDAT ??1?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@XZ
_TEXT	SEGMENT
tv71 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@XZ PROC ; std::auto_ptr<luabind::detail::registration>::~auto_ptr<luabind::detail::registration>, COMDAT
; _this$ = ecx

; 988  :     ~auto_ptr() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 989  :         delete _Myptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@auto_ptr
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@auto_ptr
$LN3@auto_ptr:
	mov	DWORD PTR tv71[ebp], 0
$LN2@auto_ptr:

; 990  :     }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@XZ ENDP ; std::auto_ptr<luabind::detail::registration>::~auto_ptr<luabind::detail::registration>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory
;	COMDAT ??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@U?$auto_ptr_ref@Uregistration@detail@luabind@@@1@@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@U?$auto_ptr_ref@Uregistration@detail@luabind@@@1@@Z PROC ; std::auto_ptr<luabind::detail::registration>::auto_ptr<luabind::detail::registration>, COMDAT
; _this$ = ecx

; 948  :     auto_ptr(auto_ptr_ref<_Ty> _Right) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 949  :         _Ty* _Ptr   = _Right._Ref;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __Ptr$[ebp], eax

; 950  :         _Right._Ref = nullptr; // release old

	mov	DWORD PTR __Right$[ebp], 0

; 951  :         _Myptr      = _Ptr; // reset this

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [ecx], edx

; 952  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@U?$auto_ptr_ref@Uregistration@detail@luabind@@@1@@Z ENDP ; std::auto_ptr<luabind::detail::registration>::auto_ptr<luabind::detail::registration>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.33.31629\include\memory
;	COMDAT ??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z PROC ; std::auto_ptr<luabind::detail::registration>::auto_ptr<luabind::detail::registration>, COMDAT
; _this$ = ecx

; 944  :     explicit auto_ptr(_Ty* _Ptr = nullptr) noexcept : _Myptr(_Ptr) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z ENDP ; std::auto_ptr<luabind::detail::registration>::auto_ptr<luabind::detail::registration>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\stack_utils.hpp
;	COMDAT ??1stack_pop@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1stack_pop@detail@luabind@@QAE@XZ PROC		; luabind::detail::stack_pop::~stack_pop, COMDAT
; _this$ = ecx

; 40   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 			lua_pop(m_state, m_n);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	neg	ecx
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_lua_settop
	add	esp, 8

; 42   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1stack_pop@detail@luabind@@QAE@XZ ENDP		; luabind::detail::stack_pop::~stack_pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\stack_utils.hpp
;	COMDAT ??0stack_pop@detail@luabind@@QAE@PAUlua_State@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_L$ = 8							; size = 4
_n$ = 12						; size = 4
??0stack_pop@detail@luabind@@QAE@PAUlua_State@@H@Z PROC	; luabind::detail::stack_pop::stack_pop, COMDAT
; _this$ = ecx

; 36   : 			{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 34   : 			: m_state(L)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _L$[ebp]
	mov	DWORD PTR [eax], ecx

; 35   : 			, m_n(n)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR [edx+4], eax

; 37   : 			}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0stack_pop@detail@luabind@@QAE@PAUlua_State@@H@Z ENDP	; luabind::detail::stack_pop::stack_pop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\debug.hpp
;	COMDAT ??1stack_checker_type@detail@luabind@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1stack_checker_type@detail@luabind@@QAE@XZ PROC	; luabind::detail::stack_checker_type::~stack_checker_type, COMDAT
; _this$ = ecx

; 41   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 42   : 			assert(m_stack == lua_gettop(m_L));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_lua_gettop
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], eax
	je	SHORT $LN2@stack_chec
	push	42					; 0000002aH
	push	OFFSET ??_C@_1KA@FDCAJHLM@?$AAD?$AA?3?$AA?2?$AA_?$AA_?$AAR?$AAe?$AAp?$AAo?$AAs?$AA?2?$AA_?$AA_?$AAM?$AAy@
	push	OFFSET ??_C@_1DG@CAPFJFIB@?$AAm?$AA_?$AAs?$AAt?$AAa?$AAc?$AAk?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAl?$AAu?$AAa?$AA_@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN2@stack_chec:

; 43   : 		}

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1stack_checker_type@detail@luabind@@QAE@XZ ENDP	; luabind::detail::stack_checker_type::~stack_checker_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\luabind\detail\debug.hpp
;	COMDAT ??0stack_checker_type@detail@luabind@@QAE@PAUlua_State@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_L$ = 8							; size = 4
??0stack_checker_type@detail@luabind@@QAE@PAUlua_State@@@Z PROC ; luabind::detail::stack_checker_type::stack_checker_type, COMDAT
; _this$ = ecx

; 38   : 		{}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 36   : 			: m_L(L)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _L$[ebp]
	mov	DWORD PTR [eax], ecx

; 37   : 			, m_stack(lua_gettop(m_L))

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_lua_gettop
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 38   : 		{}

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0stack_checker_type@detail@luabind@@QAE@PAUlua_State@@@Z ENDP ; luabind::detail::stack_checker_type::stack_checker_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_guard$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??Amodule_@luabind@@QAEXUscope@1@@Z PROC		; luabind::module_::operator[]
; _this$ = ecx

; 136  :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??Amodule_@luabind@@QAEXUscope@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 137  :         if (m_name)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	$LN2@operator

; 138  :         {
; 139  :             lua_pushstring(m_state, m_name);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 140  :             lua_gettable(m_state, LUA_GLOBALSINDEX);

	push	-10002					; ffffd8eeH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_lua_gettable
	add	esp, 8

; 141  : 
; 142  :             if (!lua_istable(m_state, -1))

	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_lua_type
	add	esp, 8
	cmp	eax, 5
	je	SHORT $LN4@operator

; 143  :             {
; 144  :                 lua_pop(m_state, 1);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_lua_settop
	add	esp, 8

; 145  : 
; 146  :                 lua_newtable(m_state);

	push	0
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_lua_createtable
	add	esp, 12					; 0000000cH

; 147  :                 lua_pushstring(m_state, m_name);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_lua_pushstring
	add	esp, 8

; 148  :                 lua_pushvalue(m_state, -2);

	push	-2					; fffffffeH
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_lua_pushvalue
	add	esp, 8

; 149  :                 lua_settable(m_state, LUA_GLOBALSINDEX);

	push	-10002					; ffffd8eeH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_lua_settable
	add	esp, 8
$LN4@operator:

; 150  :             }
; 151  :         }

	jmp	SHORT $LN3@operator
$LN2@operator:

; 152  :         else
; 153  :         {
; 154  :             lua_pushvalue(m_state, LUA_GLOBALSINDEX);

	push	-10002					; ffffd8eeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_lua_pushvalue
	add	esp, 8
$LN3@operator:

; 155  :         }
; 156  : 
; 157  :         lua_pop_stack guard(m_state);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR _guard$[ebp]
	call	??0lua_pop_stack@?A0xd1267dc2@luabind@@QAE@PAUlua_State@@@Z ; luabind::`anonymous namespace'::lua_pop_stack::lua_pop_stack
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 158  : 
; 159  :         s.register_(m_state);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR _s$[ebp]
	call	?register_@scope@luabind@@QBEXPAUlua_State@@@Z ; luabind::scope::register_

; 160  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _guard$[ebp]
	call	??1lua_pop_stack@?A0xd1267dc2@luabind@@QAE@XZ ; luabind::`anonymous namespace'::lua_pop_stack::~lua_pop_stack
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1scope@luabind@@QAE@XZ		; luabind::scope::~scope
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN11@operator:
	DD	1
	DD	$LN10@operator
$LN10@operator:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@operator
$LN8@operator:
	DB	103					; 00000067H
	DB	117					; 00000075H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??Amodule_@luabind@@QAEXUscope@1@@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1scope@luabind@@QAE@XZ		; luabind::scope::~scope
__unwindfunclet$??Amodule_@luabind@@QAEXUscope@1@@Z$1:
	lea	ecx, DWORD PTR _guard$[ebp]
	jmp	??1lua_pop_stack@?A0xd1267dc2@luabind@@QAE@XZ ; luabind::`anonymous namespace'::lua_pop_stack::~lua_pop_stack
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??Amodule_@luabind@@QAEXUscope@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??Amodule_@luabind@@QAEXUscope@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??Amodule_@luabind@@QAEXUscope@1@@Z ENDP		; luabind::module_::operator[]
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_L$ = 8							; size = 4
_name$ = 12						; size = 4
??0module_@luabind@@QAE@PAUlua_State@@PBD@Z PROC	; luabind::module_::module_
; _this$ = ecx

; 132  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 130  :         : m_state(L)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _L$[ebp]
	mov	DWORD PTR [eax], ecx

; 131  :         , m_name(name)

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR [edx+4], eax

; 133  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0module_@luabind@@QAE@PAUlua_State@@PBD@Z ENDP	; luabind::module_::module_
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z PROC	; luabind::namespace_::operator[]
; _this$ = ecx

; 203  :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 204  :         m_registration->m_scope.operator,(s);        

	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	??0scope@luabind@@QAE@ABU01@@Z		; luabind::scope::scope
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, 12					; 0000000cH
	call	??Qscope@luabind@@QAEAAU01@U01@@Z	; luabind::scope::operator,

; 205  :         return *this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1scope@luabind@@QAE@XZ		; luabind::scope::~scope
	mov	eax, DWORD PTR $T2[ebp]

; 206  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z$0:
	lea	ecx, DWORD PTR _s$[ebp]
	jmp	??1scope@luabind@@QAE@XZ		; luabind::scope::~scope
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??Anamespace_@luabind@@QAEAAV01@Uscope@1@@Z ENDP	; luabind::namespace_::operator[]
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
tv152 = -52						; size = 4
tv149 = -48						; size = 4
tv154 = -44						; size = 4
tv128 = -40						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
$T4 = -28						; size = 4
$T5 = -24						; size = 4
$T6 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
??0namespace_@luabind@@QAE@PBD@Z PROC			; luabind::namespace_::namespace_
; _this$ = ecx

; 199  :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0namespace_@luabind@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 197  :         : scope(std::auto_ptr<detail::registration>(

	push	16					; 00000010H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@namespace_
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0registration_@namespace_@luabind@@QAE@PBD@Z ; luabind::namespace_::registration_::registration_
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN4@namespace_
$LN3@namespace_:
	mov	DWORD PTR tv128[ebp], 0
$LN4@namespace_:
	mov	ecx, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [edx+4], eax
	push	ecx
	mov	esi, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@PAUregistration@detail@luabind@@@Z ; std::auto_ptr<luabind::detail::registration>::auto_ptr<luabind::detail::registration>
	mov	DWORD PTR tv154[ebp], eax
	mov	eax, DWORD PTR tv154[ebp]
	mov	DWORD PTR tv149[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv149[ebp]
	call	??$?BUregistration@detail@luabind@@@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE?AU?$auto_ptr_ref@Uregistration@detail@luabind@@@1@XZ ; std::auto_ptr<luabind::detail::registration>::operator<luabind::detail::registration> std::auto_ptr_ref<luabind::detail::registration>
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, esi
	call	??0?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@U?$auto_ptr_ref@Uregistration@detail@luabind@@@1@@Z ; std::auto_ptr<luabind::detail::registration>::auto_ptr<luabind::detail::registration>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0scope@luabind@@QAE@V?$auto_ptr@Uregistration@detail@luabind@@@std@@@Z ; luabind::scope::scope
	mov	DWORD PTR tv152[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@XZ ; std::auto_ptr<luabind::detail::registration>::~auto_ptr<luabind::detail::registration>

; 200  :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0namespace_@luabind@@QAE@PBD@Z$0:
	push	16					; 00000010H
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??0namespace_@luabind@@QAE@PBD@Z$1:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@XZ ; std::auto_ptr<luabind::detail::registration>::~auto_ptr<luabind::detail::registration>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0namespace_@luabind@@QAE@PBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0namespace_@luabind@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0namespace_@luabind@@QAE@PBD@Z ENDP			; luabind::namespace_::namespace_
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_stack_checker_object$2 = -32				; size = 8
_r$3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_L$ = 8							; size = 4
?register_@scope@luabind@@QBEXPAUlua_State@@@Z PROC	; luabind::scope::register_
; _this$ = ecx

; 98   :     {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?register_@scope@luabind@@QBEXPAUlua_State@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 99   :         for (detail::registration* r = m_chain; r != 0; r = r->m_next)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r$3[ebp], ecx
	jmp	SHORT $LN4@register_
$LN2@register_:
	mov	edx, DWORD PTR _r$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _r$3[ebp], eax
$LN4@register_:
	cmp	DWORD PTR _r$3[ebp], 0
	je	SHORT $LN1@register_

; 100  :         {
; 101  : 			LUABIND_CHECK_STACK(L);

	mov	ecx, DWORD PTR _L$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _stack_checker_object$2[ebp]
	call	??0stack_checker_type@detail@luabind@@QAE@PAUlua_State@@@Z ; luabind::detail::stack_checker_type::stack_checker_type
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 102  :             r->register_(L);

	mov	esi, esp
	mov	edx, DWORD PTR _L$[ebp]
	push	edx
	mov	eax, DWORD PTR _r$3[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _r$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 103  :         }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _stack_checker_object$2[ebp]
	call	??1stack_checker_type@detail@luabind@@QAE@XZ ; luabind::detail::stack_checker_type::~stack_checker_type
	jmp	SHORT $LN2@register_
$LN1@register_:

; 104  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@register_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN10@register_:
	DD	1
	DD	$LN9@register_
$LN9@register_:
	DD	-32					; ffffffe0H
	DD	8
	DD	$LN7@register_
$LN7@register_:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	95					; 0000005fH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	95					; 0000005fH
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?register_@scope@luabind@@QBEXPAUlua_State@@@Z$0:
	lea	ecx, DWORD PTR _stack_checker_object$2[ebp]
	jmp	??1stack_checker_type@detail@luabind@@QAE@XZ ; luabind::detail::stack_checker_type::~stack_checker_type
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?register_@scope@luabind@@QBEXPAUlua_State@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?register_@scope@luabind@@QBEXPAUlua_State@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?register_@scope@luabind@@QBEXPAUlua_State@@@Z ENDP	; luabind::scope::register_
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_c$3 = -8						; size = 4
_this$ = -4						; size = 4
_s$ = 8							; size = 4
??Qscope@luabind@@QAEAAU01@U01@@Z PROC			; luabind::scope::operator,
; _this$ = ecx

; 76   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 77   :         if (!m_chain) 

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN5@operator

; 78   :         {
; 79   :             m_chain = s.m_chain;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx], edx

; 80   :             s.m_chain = 0;

	mov	DWORD PTR _s$[ebp], 0

; 81   :             return *this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1scope@luabind@@QAE@XZ		; luabind::scope::~scope
	mov	eax, DWORD PTR $T2[ebp]
	jmp	SHORT $LN1@operator
$LN5@operator:

; 82   :         }
; 83   :         
; 84   :         for (detail::registration* c = m_chain;; c = c->m_next)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _c$3[ebp], edx
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR _c$3[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _c$3[ebp], ecx
$LN4@operator:

; 85   :         {
; 86   :             if (!c->m_next)

	mov	edx, DWORD PTR _c$3[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN6@operator

; 87   :             {
; 88   :                 c->m_next = s.m_chain;

	mov	eax, DWORD PTR _c$3[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 89   :                 s.m_chain = 0;

	mov	DWORD PTR _s$[ebp], 0

; 90   :                 break;

	jmp	SHORT $LN3@operator
$LN6@operator:

; 91   :             }
; 92   :         }

	jmp	SHORT $LN2@operator
$LN3@operator:

; 93   : 
; 94   :         return *this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], edx
	lea	ecx, DWORD PTR _s$[ebp]
	call	??1scope@luabind@@QAE@XZ		; luabind::scope::~scope
	mov	eax, DWORD PTR $T1[ebp]
$LN1@operator:

; 95   :     }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Qscope@luabind@@QAEAAU01@U01@@Z ENDP			; luabind::scope::operator,
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
tv71 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_other_$ = 8						; size = 4
??4scope@luabind@@QAEAAU01@ABU01@@Z PROC		; luabind::scope::operator=
; _this$ = ecx

; 63   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 64   :         delete m_chain;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@operator
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv71[ebp], 0
$LN4@operator:

; 65   :         m_chain = other_.m_chain;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other_$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 66   :         const_cast<scope&>(other_).m_chain = 0;

	mov	eax, DWORD PTR _other_$[ebp]
	mov	DWORD PTR [eax], 0

; 67   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 68   :     }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4scope@luabind@@QAEAAU01@ABU01@@Z ENDP		; luabind::scope::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
tv71 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1scope@luabind@@QAE@XZ PROC				; luabind::scope::~scope
; _this$ = ecx

; 71   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 72   :         delete m_chain;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@scope
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN2@scope
$LN3@scope:
	mov	DWORD PTR tv71[ebp], 0
$LN2@scope:

; 73   :     }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1scope@luabind@@QAE@XZ ENDP				; luabind::scope::~scope
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_other$ = 8						; size = 4
??0scope@luabind@@QAE@ABU01@@Z PROC			; luabind::scope::scope
; _this$ = ecx

; 58   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 57   :         : m_chain(other.m_chain)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _other$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 59   :         const_cast<scope&>(other).m_chain = 0;

	mov	eax, DWORD PTR _other$[ebp]
	mov	DWORD PTR [eax], 0

; 60   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0scope@luabind@@QAE@ABU01@@Z ENDP			; luabind::scope::scope
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_reg$ = 8						; size = 4
??0scope@luabind@@QAE@V?$auto_ptr@Uregistration@detail@luabind@@@std@@@Z PROC ; luabind::scope::scope
; _this$ = ecx

; 53   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 52   :         : m_chain(reg.release())

	lea	ecx, DWORD PTR _reg$[ebp]
	call	?release@?$auto_ptr@Uregistration@detail@luabind@@@std@@QAEPAUregistration@detail@luabind@@XZ ; std::auto_ptr<luabind::detail::registration>::release
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 54   :     }

	lea	ecx, DWORD PTR _reg$[ebp]
	call	??1?$auto_ptr@Uregistration@detail@luabind@@@std@@QAE@XZ ; std::auto_ptr<luabind::detail::registration>::~auto_ptr<luabind::detail::registration>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0scope@luabind@@QAE@V?$auto_ptr@Uregistration@detail@luabind@@@std@@@Z ENDP ; luabind::scope::scope
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0scope@luabind@@QAE@XZ PROC				; luabind::scope::scope
; _this$ = ecx

; 48   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 47   :         : m_chain(0)

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 49   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0scope@luabind@@QAE@XZ ENDP				; luabind::scope::scope
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gregistration@detail@luabind@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gregistration@detail@luabind@@UAEPAXI@Z PROC		; luabind::detail::registration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1registration@detail@luabind@@UAE@XZ	; luabind::detail::registration::~registration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gregistration@detail@luabind@@UAEPAXI@Z ENDP		; luabind::detail::registration::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
tv72 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
??1registration@detail@luabind@@UAE@XZ PROC		; luabind::detail::registration::~registration
; _this$ = ecx

; 40   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7registration@detail@luabind@@6B@

; 41   :         delete m_next;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR $T1[ebp], edx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@registrati
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN2@registrati
$LN3@registrati:
	mov	DWORD PTR tv72[ebp], 0
$LN2@registrati:

; 42   :     }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1registration@detail@luabind@@UAE@XZ ENDP		; luabind::detail::registration::~registration
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\__Repos\__MyRepos\Raven_VS2022\Common\luabind-0.9.1\src\scope.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0registration@detail@luabind@@QAE@XZ PROC		; luabind::detail::registration::registration
; _this$ = ecx

; 36   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7registration@detail@luabind@@6B@

; 35   :         : m_next(0)

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 37   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0registration@detail@luabind@@QAE@XZ ENDP		; luabind::detail::registration::registration
_TEXT	ENDS
END
